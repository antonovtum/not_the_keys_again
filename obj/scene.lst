                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module scene
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _rand
                                     12 	.globl _initrand
                                     13 	.globl _set_sprite_data
                                     14 	.globl _set_bkg_tiles
                                     15 	.globl _set_bkg_data
                                     16 	.globl _deactivate_weeds_flag
                                     17 	.globl _clothes_speed
                                     18 	.globl _clothes_position
                                     19 	.globl _map_components
                                     20 	.globl _rect_list
                                     21 	.globl _game_ended_flag
                                     22 	.globl _game_started_flag
                                     23 	.globl _old_camera_y_clamped
                                     24 	.globl _camera_y_clamped
                                     25 	.globl _old_camera_y
                                     26 	.globl _camera_y
                                     27 	.globl _r
                                     28 	.globl _rand_init
                                     29 	.globl _possible_clothes
                                     30 	.globl _all_bots
                                     31 	.globl _all_tops
                                     32 	.globl _bulky_tops
                                     33 	.globl _bulky_bots
                                     34 	.globl _traversable_tops
                                     35 	.globl _traversable_bots
                                     36 	.globl _top_info
                                     37 	.globl _bot_info
                                     38 	.globl _load_map
                                     39 	.globl _scene_init
                                     40 	.globl _compute_scene_frame
                                     41 	.globl _move_camera
                                     42 	.globl _set_camera
                                     43 	.globl _move_sprites_down
                                     44 	.globl _animate_weeds
                                     45 	.globl _gen_new_floor
                                     46 	.globl _add_clothes_to_rag
                                     47 	.globl _next_map_gen_step
                                     48 	.globl _update_walker
                                     49 	.globl _fill_window
                                     50 	.globl _mend_incorrect_windows
                                     51 	.globl _fill_memory
                                     52 	.globl _memcpy_rect
                                     53 ;--------------------------------------------------------
                                     54 ; special function registers
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area _DATA
      000000                         60 _i:
      000000                         61 	.ds 1
      000001                         62 _rand_init::
      000001                         63 	.ds 1
      000002                         64 _r::
      000002                         65 	.ds 1
      000003                         66 _window_components_on_current_floor:
      000003                         67 	.ds 4
      000007                         68 _camera_y::
      000007                         69 	.ds 1
      000008                         70 _old_camera_y::
      000008                         71 	.ds 1
      000009                         72 _camera_y_clamped::
      000009                         73 	.ds 1
      00000A                         74 _old_camera_y_clamped::
      00000A                         75 	.ds 1
      00000B                         76 _frames_to_move:
      00000B                         77 	.ds 1
      00000C                         78 _current_cam_frame:
      00000C                         79 	.ds 1
      00000D                         80 _accelerate_cam_flag:
      00000D                         81 	.ds 1
      00000E                         82 _game_started_flag::
      00000E                         83 	.ds 1
      00000F                         84 _game_ended_flag::
      00000F                         85 	.ds 1
      000010                         86 _rect_list::
      000010                         87 	.ds 160
      0000B0                         88 _map_components::
      0000B0                         89 	.ds 32
      0000D0                         90 _next_assignable_rect_index:
      0000D0                         91 	.ds 1
      0000D1                         92 _walker_byte:
      0000D1                         93 	.ds 1
      0000D2                         94 _malloc_i:
      0000D2                         95 	.ds 1
      0000D3                         96 _window_map:
      0000D3                         97 	.ds 96
      000133                         98 _clothes_position::
      000133                         99 	.ds 4
      000137                        100 _clothes_speed::
      000137                        101 	.ds 1
      000138                        102 _deactivate_weeds_flag::
      000138                        103 	.ds 1
      000139                        104 _weeds_frame_counter:
      000139                        105 	.ds 1
      00013A                        106 _is_generated:
      00013A                        107 	.ds 1
      00013B                        108 _memcpy_rect_cur_row_65536_298:
      00013B                        109 	.ds 1
                                    110 ;--------------------------------------------------------
                                    111 ; ram data
                                    112 ;--------------------------------------------------------
                                    113 	.area _INITIALIZED
                                    114 ;--------------------------------------------------------
                                    115 ; absolute external ram data
                                    116 ;--------------------------------------------------------
                                    117 	.area _DABS (ABS)
                                    118 ;--------------------------------------------------------
                                    119 ; global & static initialisations
                                    120 ;--------------------------------------------------------
                                    121 	.area _HOME
                                    122 	.area _GSINIT
                                    123 	.area _GSFINAL
                                    124 	.area _GSINIT
                                    125 ;--------------------------------------------------------
                                    126 ; Home
                                    127 ;--------------------------------------------------------
                                    128 	.area _HOME
                                    129 	.area _HOME
                                    130 ;--------------------------------------------------------
                                    131 ; code
                                    132 ;--------------------------------------------------------
                                    133 	.area _CODE
                                    134 ;src/scene.c:116: void load_map(){
                                    135 ;	---------------------------------
                                    136 ; Function load_map
                                    137 ; ---------------------------------
      000000                        138 _load_map::
                                    139 ;src/scene.c:117: set_bkg_data(0, 112U, hub_data);
      000000 11r00r00         [12]  140 	ld	de, #_hub_data
      000003 D5               [16]  141 	push	de
      000004 21 00 70         [12]  142 	ld	hl, #0x7000
      000007 E5               [16]  143 	push	hl
      000008 CDr00r00         [24]  144 	call	_set_bkg_data
      00000B E8 04            [16]  145 	add	sp, #4
                                    146 ;src/scene.c:118: set_bkg_tiles(map_pos_x, 20U, 20u, 30u, hub_map);
      00000D 11r00r00         [12]  147 	ld	de, #_hub_map
      000010 D5               [16]  148 	push	de
      000011 21 14 1E         [12]  149 	ld	hl, #0x1e14
      000014 E5               [16]  150 	push	hl
      000015 21 01 14         [12]  151 	ld	hl, #0x1401
      000018 E5               [16]  152 	push	hl
      000019 CDr00r00         [24]  153 	call	_set_bkg_tiles
      00001C E8 06            [16]  154 	add	sp, #6
                                    155 ;src/scene.c:119: camera_y = 0;
      00001E 21r07r00         [12]  156 	ld	hl, #_camera_y
      000021 36 00            [12]  157 	ld	(hl), #0x00
                                    158 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1378: SCX_REG=x, SCY_REG=y;
      000023 3E 08            [ 8]  159 	ld	a, #0x08
      000025 E0r00            [12]  160 	ldh	(_SCX_REG + 0), a
      000027 AF               [ 4]  161 	xor	a, a
      000028 E0r00            [12]  162 	ldh	(_SCY_REG + 0), a
                                    163 ;src/scene.c:123: set_sprite_data(29, 8, extra_sprites);
      00002A 11r00r00         [12]  164 	ld	de, #_extra_sprites
      00002D D5               [16]  165 	push	de
      00002E 21 1D 08         [12]  166 	ld	hl, #0x81d
      000031 E5               [16]  167 	push	hl
      000032 CDr00r00         [24]  168 	call	_set_sprite_data
      000035 E8 04            [16]  169 	add	sp, #4
                                    170 ;src/scene.c:124: clothes_position[0] = 56;
      000037 21r33r01         [12]  171 	ld	hl, #_clothes_position
      00003A 36 38            [12]  172 	ld	(hl), #0x38
                                    173 ;src/scene.c:125: clothes_position[1] = 136;
      00003C 21r34r01         [12]  174 	ld	hl, #(_clothes_position + 1)
      00003F 36 88            [12]  175 	ld	(hl), #0x88
                                    176 ;src/scene.c:126: clothes_position[2] = 136;
      000041 21r35r01         [12]  177 	ld	hl, #(_clothes_position + 2)
      000044 36 88            [12]  178 	ld	(hl), #0x88
                                    179 ;src/scene.c:127: clothes_position[3] = 136;
      000046 01r36r01         [12]  180 	ld	bc, #_clothes_position + 3
      000049 3E 88            [ 8]  181 	ld	a, #0x88
      00004B 02               [ 8]  182 	ld	(bc), a
                                    183 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1804: shadow_OAM[nb].tile=tile;
      00004C 21r42r00         [12]  184 	ld	hl, #(_shadow_OAM + 66)
      00004F 36 1D            [12]  185 	ld	(hl), #0x1d
                                    186 ;src/scene.c:129: move_sprite(16, 10, clothes_position[0] - camera_y);
      000051 FAr33r01         [16]  187 	ld	a, (#_clothes_position + 0)
      000054 21r07r00         [12]  188 	ld	hl, #_camera_y
      000057 96               [ 8]  189 	sub	a, (hl)
      000058 5F               [ 4]  190 	ld	e, a
                                    191 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      000059 21r40r00         [12]  192 	ld	hl, #(_shadow_OAM + 64)
                                    193 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1878: itm->y=y, itm->x=x;
      00005C 73               [ 8]  194 	ld	(hl), e
      00005D 23               [ 8]  195 	inc	hl
      00005E 36 0A            [12]  196 	ld	(hl), #0x0a
                                    197 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1804: shadow_OAM[nb].tile=tile;
      000060 21r46r00         [12]  198 	ld	hl, #(_shadow_OAM + 70)
      000063 36 1D            [12]  199 	ld	(hl), #0x1d
                                    200 ;src/scene.c:131: move_sprite(17, 13, clothes_position[1] - camera_y);
      000065 FAr34r01         [16]  201 	ld	a, (#(_clothes_position + 1) + 0)
      000068 21r07r00         [12]  202 	ld	hl, #_camera_y
      00006B 96               [ 8]  203 	sub	a, (hl)
                                    204 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
                                    205 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1878: itm->y=y, itm->x=x;
      00006C 21r44r00         [12]  206 	ld	hl, #(_shadow_OAM + 68)
      00006F 22               [ 8]  207 	ld	(hl+), a
      000070 36 0D            [12]  208 	ld	(hl), #0x0d
                                    209 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1804: shadow_OAM[nb].tile=tile;
      000072 21r4Ar00         [12]  210 	ld	hl, #(_shadow_OAM + 74)
      000075 36 1D            [12]  211 	ld	(hl), #0x1d
                                    212 ;src/scene.c:133: move_sprite(18, 67, clothes_position[2] - camera_y);
      000077 FAr35r01         [16]  213 	ld	a, (#(_clothes_position + 2) + 0)
      00007A 21r07r00         [12]  214 	ld	hl, #_camera_y
      00007D 96               [ 8]  215 	sub	a, (hl)
                                    216 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
                                    217 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1878: itm->y=y, itm->x=x;
      00007E 5F               [ 4]  218 	ld	e, a
      00007F 21r48r00         [12]  219 	ld	hl, #(_shadow_OAM + 72)
      000082 22               [ 8]  220 	ld	(hl+), a
      000083 36 43            [12]  221 	ld	(hl), #0x43
                                    222 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1804: shadow_OAM[nb].tile=tile;
      000085 21r4Er00         [12]  223 	ld	hl, #(_shadow_OAM + 78)
      000088 36 1D            [12]  224 	ld	(hl), #0x1d
                                    225 ;src/scene.c:135: move_sprite(19, 155, clothes_position[3] - camera_y);
      00008A 0A               [ 8]  226 	ld	a, (bc)
      00008B 21r07r00         [12]  227 	ld	hl, #_camera_y
      00008E 96               [ 8]  228 	sub	a, (hl)
                                    229 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
                                    230 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1878: itm->y=y, itm->x=x;
      00008F 21r4Cr00         [12]  231 	ld	hl, #(_shadow_OAM + 76)
      000092 22               [ 8]  232 	ld	(hl+), a
      000093 36 9B            [12]  233 	ld	(hl), #0x9b
                                    234 ;src/scene.c:137: weeds_frame_counter = 0;
      000095 21r39r01         [12]  235 	ld	hl, #_weeds_frame_counter
      000098 36 00            [12]  236 	ld	(hl), #0x00
                                    237 ;src/scene.c:138: clothes_speed = 0b11100100;
      00009A 21r37r01         [12]  238 	ld	hl, #_clothes_speed
      00009D 36 E4            [12]  239 	ld	(hl), #0xe4
                                    240 ;src/scene.c:139: deactivate_weeds_flag = 0;
      00009F 21r38r01         [12]  241 	ld	hl, #_deactivate_weeds_flag
      0000A2 36 00            [12]  242 	ld	(hl), #0x00
                                    243 ;src/scene.c:140: }
      0000A4 C9               [16]  244 	ret
      0000A5                        245 _bot_info:
      0000A5 05                     246 	.db #0x05	; 5
      0000A6 02                     247 	.db #0x02	; 2
      0000A7r00r00                  248 	.dw _bot_map_00
      0000A9 00                     249 	.db #0x00	; 0
      0000AA 00                     250 	.db #0x00	; 0
      0000AB 00                     251 	.db #0x00	; 0
      0000AC 00                     252 	.db #0x00	; 0
      0000AD 02                     253 	.db #0x02	; 2
      0000AE 05                     254 	.db #0x05	; 5
      0000AF 02                     255 	.db #0x02	; 2
      0000B0r00r00                  256 	.dw _bot_map_01
      0000B2 01                     257 	.db #0x01	; 1
      0000B3 34                     258 	.db #0x34	; 52	'4'
      0000B4 1E                     259 	.db #0x1e	; 30
      0000B5 13                     260 	.db #0x13	; 19
      0000B6 01                     261 	.db #0x01	; 1
      0000B7 05                     262 	.db #0x05	; 5
      0000B8 02                     263 	.db #0x02	; 2
      0000B9r00r00                  264 	.dw _bot_map_02
      0000BB 01                     265 	.db #0x01	; 1
      0000BC 36                     266 	.db #0x36	; 54	'6'
      0000BD 1E                     267 	.db #0x1e	; 30
      0000BE 15                     268 	.db #0x15	; 21
      0000BF 00                     269 	.db #0x00	; 0
      0000C0 04                     270 	.db #0x04	; 4
      0000C1 03                     271 	.db #0x03	; 3
      0000C2r00r00                  272 	.dw _bot_map_03
      0000C4 01                     273 	.db #0x01	; 1
      0000C5 36                     274 	.db #0x36	; 54	'6'
      0000C6 1E                     275 	.db #0x1e	; 30
      0000C7 1B                     276 	.db #0x1b	; 27
      0000C8 05                     277 	.db #0x05	; 5
      0000C9 05                     278 	.db #0x05	; 5
      0000CA 02                     279 	.db #0x02	; 2
      0000CBr00r00                  280 	.dw _bot_map_04
      0000CD 01                     281 	.db #0x01	; 1
      0000CE 34                     282 	.db #0x34	; 52	'4'
      0000CF 1E                     283 	.db #0x1e	; 30
      0000D0 13                     284 	.db #0x13	; 19
      0000D1 01                     285 	.db #0x01	; 1
      0000D2 05                     286 	.db #0x05	; 5
      0000D3 02                     287 	.db #0x02	; 2
      0000D4r00r00                  288 	.dw _bot_map_05
      0000D6 01                     289 	.db #0x01	; 1
      0000D7 34                     290 	.db #0x34	; 52	'4'
      0000D8 1E                     291 	.db #0x1e	; 30
      0000D9 13                     292 	.db #0x13	; 19
      0000DA 03                     293 	.db #0x03	; 3
      0000DB                        294 _top_info:
      0000DB 01                     295 	.db #0x01	; 1
      0000DC 01                     296 	.db #0x01	; 1
      0000DDr00r00                  297 	.dw _top_map_00
      0000DF 00                     298 	.db #0x00	; 0
      0000E0 00                     299 	.db #0x00	; 0
      0000E1 00                     300 	.db #0x00	; 0
      0000E2 00                     301 	.db #0x00	; 0
      0000E3 02                     302 	.db #0x02	; 2
      0000E4 01                     303 	.db #0x01	; 1
      0000E5 01                     304 	.db #0x01	; 1
      0000E6r00r00                  305 	.dw _top_map_01
      0000E8 01                     306 	.db #0x01	; 1
      0000E9 17                     307 	.db #0x17	; 23
      0000EA 1E                     308 	.db #0x1e	; 30
      0000EB 13                     309 	.db #0x13	; 19
      0000EC 01                     310 	.db #0x01	; 1
      0000ED 01                     311 	.db #0x01	; 1
      0000EE 01                     312 	.db #0x01	; 1
      0000EFr00r00                  313 	.dw _top_map_02
      0000F1 01                     314 	.db #0x01	; 1
      0000F2 15                     315 	.db #0x15	; 21
      0000F3 1E                     316 	.db #0x1e	; 30
      0000F4 13                     317 	.db #0x13	; 19
      0000F5 00                     318 	.db #0x00	; 0
      0000F6 01                     319 	.db #0x01	; 1
      0000F7 02                     320 	.db #0x02	; 2
      0000F8r00r00                  321 	.dw _top_map_03
      0000FA FD                     322 	.db #0xfd	; 253
      0000FB 15                     323 	.db #0x15	; 21
      0000FC 24                     324 	.db #0x24	; 36
      0000FD 13                     325 	.db #0x13	; 19
      0000FE 03                     326 	.db #0x03	; 3
      0000FF 01                     327 	.db #0x01	; 1
      000100 01                     328 	.db #0x01	; 1
      000101r00r00                  329 	.dw _top_map_04
      000103 01                     330 	.db #0x01	; 1
      000104 15                     331 	.db #0x15	; 21
      000105 1E                     332 	.db #0x1e	; 30
      000106 13                     333 	.db #0x13	; 19
      000107 04                     334 	.db #0x04	; 4
      000108                        335 _traversable_bots:
      000108 01                     336 	.db #0x01	; 1
      000109 01                     337 	.db #0x01	; 1
      00010A 05                     338 	.db #0x05	; 5
      00010B 01                     339 	.db #0x01	; 1
      00010C                        340 _traversable_tops:
      00010C 01                     341 	.db #0x01	; 1
      00010D 03                     342 	.db #0x03	; 3
      00010E 01                     343 	.db #0x01	; 1
      00010F 01                     344 	.db #0x01	; 1
      000110                        345 _bulky_bots:
      000110 01                     346 	.db #0x01	; 1
      000111 02                     347 	.db #0x02	; 2
      000112 03                     348 	.db #0x03	; 3
      000113 02                     349 	.db #0x02	; 2
      000114                        350 _bulky_tops:
      000114 00                     351 	.db #0x00	; 0
      000115 02                     352 	.db #0x02	; 2
      000116 04                     353 	.db #0x04	; 4
      000117 02                     354 	.db #0x02	; 2
      000118                        355 _all_tops:
      000118 00                     356 	.db #0x00	; 0
      000119 01                     357 	.db #0x01	; 1
      00011A 02                     358 	.db #0x02	; 2
      00011B 03                     359 	.db #0x03	; 3
      00011C 04                     360 	.db #0x04	; 4
      00011D 01                     361 	.db #0x01	; 1
      00011E 02                     362 	.db #0x02	; 2
      00011F 02                     363 	.db #0x02	; 2
      000120                        364 _all_bots:
      000120 00                     365 	.db #0x00	; 0
      000121 01                     366 	.db #0x01	; 1
      000122 02                     367 	.db #0x02	; 2
      000123 03                     368 	.db #0x03	; 3
      000124 01                     369 	.db #0x01	; 1
      000125 05                     370 	.db #0x05	; 5
      000126 02                     371 	.db #0x02	; 2
      000127 02                     372 	.db #0x02	; 2
      000128                        373 _possible_clothes:
      000128 1F                     374 	.db #0x1f	; 31
      000129 20                     375 	.db #0x20	; 32
                                    376 ;src/scene.c:142: void scene_init(void){
                                    377 ;	---------------------------------
                                    378 ; Function scene_init
                                    379 ; ---------------------------------
      00012A                        380 _scene_init::
      00012A E8 E5            [16]  381 	add	sp, #-27
                                    382 ;src/scene.c:143: load_map();
      00012C CDr00r00         [24]  383 	call	_load_map
                                    384 ;src/scene.c:145: set_bkg_data(112U, 13, numbers);
      00012F 11r00r00         [12]  385 	ld	de, #_numbers
      000132 D5               [16]  386 	push	de
      000133 21 70 0D         [12]  387 	ld	hl, #0xd70
      000136 E5               [16]  388 	push	hl
      000137 CDr00r00         [24]  389 	call	_set_bkg_data
      00013A E8 04            [16]  390 	add	sp, #4
                                    391 ;src/scene.c:146: set_bkg_data(0x7D, 5, partly_broken_bricks);
      00013C 11r00r00         [12]  392 	ld	de, #_partly_broken_bricks
      00013F D5               [16]  393 	push	de
      000140 21 7D 05         [12]  394 	ld	hl, #0x57d
      000143 E5               [16]  395 	push	hl
      000144 CDr00r00         [24]  396 	call	_set_bkg_data
      000147 E8 04            [16]  397 	add	sp, #4
                                    398 ;src/scene.c:149: old_camera_y = 0;
      000149 21r08r00         [12]  399 	ld	hl, #_old_camera_y
      00014C 36 00            [12]  400 	ld	(hl), #0x00
                                    401 ;src/scene.c:150: frames_to_move = 40;
      00014E 21r0Br00         [12]  402 	ld	hl, #_frames_to_move
      000151 36 28            [12]  403 	ld	(hl), #0x28
                                    404 ;src/scene.c:151: current_cam_frame = 0;
      000153 21r0Cr00         [12]  405 	ld	hl, #_current_cam_frame
      000156 36 00            [12]  406 	ld	(hl), #0x00
                                    407 ;src/scene.c:152: accelerate_cam_flag = 0;
      000158 21r0Dr00         [12]  408 	ld	hl, #_accelerate_cam_flag
      00015B 36 00            [12]  409 	ld	(hl), #0x00
                                    410 ;src/scene.c:153: game_started_flag = false;
      00015D 21r0Er00         [12]  411 	ld	hl, #_game_started_flag
      000160 36 00            [12]  412 	ld	(hl), #0x00
                                    413 ;src/scene.c:154: game_ended_flag = false;
      000162 21r0Fr00         [12]  414 	ld	hl, #_game_ended_flag
      000165 36 00            [12]  415 	ld	(hl), #0x00
                                    416 ;src/scene.c:156: is_generated = false;
      000167 21r3Ar01         [12]  417 	ld	hl, #_is_generated
      00016A 36 00            [12]  418 	ld	(hl), #0x00
                                    419 ;src/scene.c:158: rect ground = {0U, 152U, 0xFF, 23U, SOLID};
      00016C F8 00            [12]  420 	ldhl	sp,	#0
      00016E AF               [ 4]  421 	xor	a, a
      00016F 22               [ 8]  422 	ld	(hl+), a
      000170 3E 98            [ 8]  423 	ld	a, #0x98
      000172 22               [ 8]  424 	ld	(hl+), a
      000173 3E FF            [ 8]  425 	ld	a, #0xff
      000175 22               [ 8]  426 	ld	(hl+), a
      000176 3E 17            [ 8]  427 	ld	a, #0x17
      000178 22               [ 8]  428 	ld	(hl+), a
                                    429 ;src/scene.c:159: rect dumpster = {103U, 146U, 35U, 32U, TRAVERSABLE};
      000179 AF               [ 4]  430 	xor	a, a
      00017A 22               [ 8]  431 	ld	(hl+), a
      00017B 3E 67            [ 8]  432 	ld	a, #0x67
      00017D 22               [ 8]  433 	ld	(hl+), a
      00017E 3E 92            [ 8]  434 	ld	a, #0x92
      000180 22               [ 8]  435 	ld	(hl+), a
      000181 3E 23            [ 8]  436 	ld	a, #0x23
      000183 22               [ 8]  437 	ld	(hl+), a
      000184 3E 20            [ 8]  438 	ld	a, #0x20
      000186 22               [ 8]  439 	ld	(hl+), a
                                    440 ;src/scene.c:160: rect vending_machine = {132U, 146U, 32U, 49U, SOLID};
      000187 3E 01            [ 8]  441 	ld	a, #0x01
      000189 22               [ 8]  442 	ld	(hl+), a
      00018A 3E 84            [ 8]  443 	ld	a, #0x84
      00018C 22               [ 8]  444 	ld	(hl+), a
      00018D 3E 92            [ 8]  445 	ld	a, #0x92
      00018F 22               [ 8]  446 	ld	(hl+), a
      000190 3E 20            [ 8]  447 	ld	a, #0x20
      000192 22               [ 8]  448 	ld	(hl+), a
      000193 3E 31            [ 8]  449 	ld	a, #0x31
      000195 22               [ 8]  450 	ld	(hl+), a
                                    451 ;src/scene.c:161: rect ledge = {12U, 88U, 0x98, 19U, INIT_FLAG}; //prev 154
      000196 AF               [ 4]  452 	xor	a, a
      000197 22               [ 8]  453 	ld	(hl+), a
      000198 3E 0C            [ 8]  454 	ld	a, #0x0c
      00019A 22               [ 8]  455 	ld	(hl+), a
      00019B 3E 58            [ 8]  456 	ld	a, #0x58
      00019D 22               [ 8]  457 	ld	(hl+), a
      00019E 3E 98            [ 8]  458 	ld	a, #0x98
      0001A0 22               [ 8]  459 	ld	(hl+), a
      0001A1 3E 13            [ 8]  460 	ld	a, #0x13
      0001A3 22               [ 8]  461 	ld	(hl+), a
      0001A4 36 06            [12]  462 	ld	(hl), #0x06
                                    463 ;src/scene.c:163: next_assignable_rect_index = 0U;
      0001A6 21rD0r00         [12]  464 	ld	hl, #_next_assignable_rect_index
      0001A9 36 00            [12]  465 	ld	(hl), #0x00
                                    466 ;src/scene.c:165: empty_window_status.components = 0x00;
      0001AB F8 14            [12]  467 	ldhl	sp,	#20
                                    468 ;src/scene.c:166: empty_window_status.status = 0x00;
      0001AD AF               [ 4]  469 	xor	a, a
      0001AE 22               [ 8]  470 	ld	(hl+), a
      0001AF 77               [ 8]  471 	ld	(hl), a
                                    472 ;src/scene.c:167: for (i = 0; i < 4; i++)
      0001B0 21r00r00         [12]  473 	ld	hl, #_i
      0001B3 36 00            [12]  474 	ld	(hl), #0x00
      0001B5                        475 00102$:
                                    476 ;src/scene.c:170: collider = top_info[1].collider;
      0001B5 11 05 00         [12]  477 	ld	de, #0x0005
      0001B8 D5               [16]  478 	push	de
      0001B9 01rE8r00         [12]  479 	ld	bc, #(_top_info + 13)
      0001BC 21 18 00         [12]  480 	ld	hl, #24
      0001BF 39               [ 8]  481 	add	hl, sp
      0001C0 5D               [ 4]  482 	ld	e, l
      0001C1 54               [ 4]  483 	ld	d, h
      0001C2 CDr00r00         [24]  484 	call	___memcpy
                                    485 ;src/scene.c:171: collider.x += (3 + (i<<2)) << 3;
      0001C5 F8 16            [12]  486 	ldhl	sp,	#22
      0001C7 4E               [ 8]  487 	ld	c, (hl)
      0001C8 FAr00r00         [16]  488 	ld	a, (#_i)
      0001CB 87               [ 4]  489 	add	a, a
      0001CC 87               [ 4]  490 	add	a, a
      0001CD C6 03            [ 8]  491 	add	a, #0x03
      0001CF 87               [ 4]  492 	add	a, a
      0001D0 87               [ 4]  493 	add	a, a
      0001D1 87               [ 4]  494 	add	a, a
      0001D2 81               [ 4]  495 	add	a, c
      0001D3 F8 16            [12]  496 	ldhl	sp,	#22
                                    497 ;src/scene.c:172: collider.y += 8;
      0001D5 22               [ 8]  498 	ld	(hl+), a
      0001D6 7E               [ 8]  499 	ld	a, (hl)
      0001D7 C6 08            [ 8]  500 	add	a, #0x08
      0001D9 77               [ 8]  501 	ld	(hl), a
                                    502 ;src/scene.c:173: rect_list[0][0x07 & (i<<1 | 0x01)] = collider;
      0001DA FAr00r00         [16]  503 	ld	a, (#_i)
      0001DD 87               [ 4]  504 	add	a, a
      0001DE CB C7            [ 8]  505 	set	0, a
      0001E0 E6 07            [ 8]  506 	and	a, #0x07
      0001E2 4F               [ 4]  507 	ld	c, a
      0001E3 06 00            [ 8]  508 	ld	b, #0x00
      0001E5 69               [ 4]  509 	ld	l, c
      0001E6 60               [ 4]  510 	ld	h, b
      0001E7 29               [ 8]  511 	add	hl, hl
      0001E8 29               [ 8]  512 	add	hl, hl
      0001E9 09               [ 8]  513 	add	hl, bc
      0001EA 11r10r00         [12]  514 	ld	de, #_rect_list
      0001ED 19               [ 8]  515 	add	hl, de
      0001EE 5D               [ 4]  516 	ld	e, l
      0001EF 54               [ 4]  517 	ld	d, h
      0001F0 01 05 00         [12]  518 	ld	bc, #0x0005
      0001F3 C5               [16]  519 	push	bc
      0001F4 21 18 00         [12]  520 	ld	hl, #24
      0001F7 39               [ 8]  521 	add	hl, sp
      0001F8 4D               [ 4]  522 	ld	c, l
      0001F9 44               [ 4]  523 	ld	b, h
      0001FA CDr00r00         [24]  524 	call	___memcpy
                                    525 ;src/scene.c:176: collider = bot_info[1].collider;
      0001FD 11 05 00         [12]  526 	ld	de, #0x0005
      000200 D5               [16]  527 	push	de
      000201 01rB2r00         [12]  528 	ld	bc, #(_bot_info + 13)
      000204 21 18 00         [12]  529 	ld	hl, #24
      000207 39               [ 8]  530 	add	hl, sp
      000208 5D               [ 4]  531 	ld	e, l
      000209 54               [ 4]  532 	ld	d, h
      00020A CDr00r00         [24]  533 	call	___memcpy
                                    534 ;src/scene.c:177: collider.x += (3 + (i<<2)) << 3;
      00020D F8 16            [12]  535 	ldhl	sp,	#22
      00020F 4E               [ 8]  536 	ld	c, (hl)
      000210 FAr00r00         [16]  537 	ld	a, (#_i)
      000213 87               [ 4]  538 	add	a, a
      000214 87               [ 4]  539 	add	a, a
      000215 C6 03            [ 8]  540 	add	a, #0x03
      000217 87               [ 4]  541 	add	a, a
      000218 87               [ 4]  542 	add	a, a
      000219 87               [ 4]  543 	add	a, a
      00021A 81               [ 4]  544 	add	a, c
      00021B F8 16            [12]  545 	ldhl	sp,	#22
                                    546 ;src/scene.c:178: collider.y += 8;
      00021D 22               [ 8]  547 	ld	(hl+), a
      00021E 7E               [ 8]  548 	ld	a, (hl)
      00021F C6 08            [ 8]  549 	add	a, #0x08
      000221 77               [ 8]  550 	ld	(hl), a
                                    551 ;src/scene.c:179: rect_list[0][0x07 & (i<<1)] = collider;
      000222 21 16 00         [12]  552 	ld	hl, #22
      000225 39               [ 8]  553 	add	hl, sp
      000226 4D               [ 4]  554 	ld	c, l
      000227 44               [ 4]  555 	ld	b, h
      000228 FAr00r00         [16]  556 	ld	a, (#_i)
      00022B 87               [ 4]  557 	add	a, a
      00022C 5F               [ 4]  558 	ld	e, a
      00022D 07               [ 4]  559 	rlca
      00022E 7B               [ 4]  560 	ld	a, e
      00022F E6 07            [ 8]  561 	and	a, #0x07
      000231 6F               [ 4]  562 	ld	l, a
                                    563 ;	spillPairReg hl
                                    564 ;	spillPairReg hl
      000232 26 00            [ 8]  565 	ld	h, #0x00
                                    566 ;	spillPairReg hl
                                    567 ;	spillPairReg hl
      000234 5D               [ 4]  568 	ld	e, l
      000235 54               [ 4]  569 	ld	d, h
      000236 29               [ 8]  570 	add	hl, hl
      000237 29               [ 8]  571 	add	hl, hl
      000238 19               [ 8]  572 	add	hl, de
      000239 11r10r00         [12]  573 	ld	de, #_rect_list
      00023C 19               [ 8]  574 	add	hl, de
      00023D 5D               [ 4]  575 	ld	e, l
      00023E 54               [ 4]  576 	ld	d, h
      00023F 21 05 00         [12]  577 	ld	hl, #0x0005
      000242 E5               [16]  578 	push	hl
      000243 CDr00r00         [24]  579 	call	___memcpy
                                    580 ;src/scene.c:182: map_components[i][0] = empty_window_status;
      000246 21 14 00         [12]  581 	ld	hl, #20
      000249 39               [ 8]  582 	add	hl, sp
      00024A 4D               [ 4]  583 	ld	c, l
      00024B 44               [ 4]  584 	ld	b, h
      00024C 21r00r00         [12]  585 	ld	hl, #_i
      00024F 6E               [ 8]  586 	ld	l, (hl)
                                    587 ;	spillPairReg hl
                                    588 ;	spillPairReg hl
      000250 26 00            [ 8]  589 	ld	h, #0x00
                                    590 ;	spillPairReg hl
                                    591 ;	spillPairReg hl
      000252 29               [ 8]  592 	add	hl, hl
      000253 29               [ 8]  593 	add	hl, hl
      000254 29               [ 8]  594 	add	hl, hl
      000255 11rB0r00         [12]  595 	ld	de, #_map_components
      000258 19               [ 8]  596 	add	hl, de
      000259 5D               [ 4]  597 	ld	e, l
      00025A 54               [ 4]  598 	ld	d, h
      00025B 21 02 00         [12]  599 	ld	hl, #0x0002
      00025E E5               [16]  600 	push	hl
      00025F CDr00r00         [24]  601 	call	___memcpy
                                    602 ;src/scene.c:183: map_components[i][1] = empty_window_status;
      000262 21 14 00         [12]  603 	ld	hl, #20
      000265 39               [ 8]  604 	add	hl, sp
      000266 4D               [ 4]  605 	ld	c, l
      000267 44               [ 4]  606 	ld	b, h
      000268 21r00r00         [12]  607 	ld	hl, #_i
      00026B 6E               [ 8]  608 	ld	l, (hl)
                                    609 ;	spillPairReg hl
                                    610 ;	spillPairReg hl
      00026C 26 00            [ 8]  611 	ld	h, #0x00
                                    612 ;	spillPairReg hl
                                    613 ;	spillPairReg hl
      00026E 29               [ 8]  614 	add	hl, hl
      00026F 29               [ 8]  615 	add	hl, hl
      000270 29               [ 8]  616 	add	hl, hl
      000271 11rB0r00         [12]  617 	ld	de, #_map_components
      000274 19               [ 8]  618 	add	hl, de
      000275 23               [ 8]  619 	inc	hl
      000276 23               [ 8]  620 	inc	hl
      000277 5D               [ 4]  621 	ld	e, l
      000278 54               [ 4]  622 	ld	d, h
      000279 21 02 00         [12]  623 	ld	hl, #0x0002
      00027C E5               [16]  624 	push	hl
      00027D CDr00r00         [24]  625 	call	___memcpy
                                    626 ;src/scene.c:184: map_components[i][2] = empty_window_status;
      000280 21 14 00         [12]  627 	ld	hl, #20
      000283 39               [ 8]  628 	add	hl, sp
      000284 4D               [ 4]  629 	ld	c, l
      000285 44               [ 4]  630 	ld	b, h
      000286 21r00r00         [12]  631 	ld	hl, #_i
      000289 6E               [ 8]  632 	ld	l, (hl)
                                    633 ;	spillPairReg hl
                                    634 ;	spillPairReg hl
      00028A 26 00            [ 8]  635 	ld	h, #0x00
                                    636 ;	spillPairReg hl
                                    637 ;	spillPairReg hl
      00028C 29               [ 8]  638 	add	hl, hl
      00028D 29               [ 8]  639 	add	hl, hl
      00028E 29               [ 8]  640 	add	hl, hl
      00028F 11rB0r00         [12]  641 	ld	de, #_map_components
      000292 19               [ 8]  642 	add	hl, de
      000293 23               [ 8]  643 	inc	hl
      000294 23               [ 8]  644 	inc	hl
      000295 23               [ 8]  645 	inc	hl
      000296 23               [ 8]  646 	inc	hl
      000297 5D               [ 4]  647 	ld	e, l
      000298 54               [ 4]  648 	ld	d, h
      000299 21 02 00         [12]  649 	ld	hl, #0x0002
      00029C E5               [16]  650 	push	hl
      00029D CDr00r00         [24]  651 	call	___memcpy
                                    652 ;src/scene.c:185: map_components[i][3] = empty_window_status;
      0002A0 21 14 00         [12]  653 	ld	hl, #20
      0002A3 39               [ 8]  654 	add	hl, sp
      0002A4 4D               [ 4]  655 	ld	c, l
      0002A5 44               [ 4]  656 	ld	b, h
      0002A6 21r00r00         [12]  657 	ld	hl, #_i
      0002A9 6E               [ 8]  658 	ld	l, (hl)
                                    659 ;	spillPairReg hl
                                    660 ;	spillPairReg hl
      0002AA 26 00            [ 8]  661 	ld	h, #0x00
                                    662 ;	spillPairReg hl
                                    663 ;	spillPairReg hl
      0002AC 29               [ 8]  664 	add	hl, hl
      0002AD 29               [ 8]  665 	add	hl, hl
      0002AE 29               [ 8]  666 	add	hl, hl
      0002AF 11rB0r00         [12]  667 	ld	de, #_map_components
      0002B2 19               [ 8]  668 	add	hl, de
      0002B3 11 06 00         [12]  669 	ld	de, #0x0006
      0002B6 19               [ 8]  670 	add	hl, de
      0002B7 5D               [ 4]  671 	ld	e, l
      0002B8 54               [ 4]  672 	ld	d, h
      0002B9 21 02 00         [12]  673 	ld	hl, #0x0002
      0002BC E5               [16]  674 	push	hl
      0002BD CDr00r00         [24]  675 	call	___memcpy
                                    676 ;src/scene.c:167: for (i = 0; i < 4; i++)
      0002C0 21r00r00         [12]  677 	ld	hl, #_i
      0002C3 34               [12]  678 	inc	(hl)
      0002C4 7E               [ 8]  679 	ld	a, (hl)
      0002C5 D6 04            [ 8]  680 	sub	a, #0x04
      0002C7 DArB5r01         [16]  681 	jp	C, 00102$
                                    682 ;src/scene.c:189: rect_list[1][0x00] = ledge;
      0002CA 11 05 00         [12]  683 	ld	de, #0x0005
      0002CD D5               [16]  684 	push	de
      0002CE 21 11 00         [12]  685 	ld	hl, #17
      0002D1 39               [ 8]  686 	add	hl, sp
      0002D2 4D               [ 4]  687 	ld	c, l
      0002D3 44               [ 4]  688 	ld	b, h
      0002D4 11r38r00         [12]  689 	ld	de, #(_rect_list + 40)
      0002D7 CDr00r00         [24]  690 	call	___memcpy
                                    691 ;src/scene.c:190: rect_list[1][0x01] = dumpster;
      0002DA 11 05 00         [12]  692 	ld	de, #0x0005
      0002DD D5               [16]  693 	push	de
      0002DE 21 07 00         [12]  694 	ld	hl, #7
      0002E1 39               [ 8]  695 	add	hl, sp
      0002E2 4D               [ 4]  696 	ld	c, l
      0002E3 44               [ 4]  697 	ld	b, h
      0002E4 11r3Dr00         [12]  698 	ld	de, #(_rect_list + 45)
      0002E7 CDr00r00         [24]  699 	call	___memcpy
                                    700 ;src/scene.c:191: rect_list[1][0x02] = vending_machine;
      0002EA 11 05 00         [12]  701 	ld	de, #0x0005
      0002ED D5               [16]  702 	push	de
      0002EE 21 0C 00         [12]  703 	ld	hl, #12
      0002F1 39               [ 8]  704 	add	hl, sp
      0002F2 4D               [ 4]  705 	ld	c, l
      0002F3 44               [ 4]  706 	ld	b, h
      0002F4 11r42r00         [12]  707 	ld	de, #(_rect_list + 50)
      0002F7 CDr00r00         [24]  708 	call	___memcpy
                                    709 ;src/scene.c:192: rect_list[1][0x03] = ground;
      0002FA 11 05 00         [12]  710 	ld	de, #0x0005
      0002FD D5               [16]  711 	push	de
      0002FE 21 02 00         [12]  712 	ld	hl, #2
      000301 39               [ 8]  713 	add	hl, sp
      000302 4D               [ 4]  714 	ld	c, l
      000303 44               [ 4]  715 	ld	b, h
      000304 11r47r00         [12]  716 	ld	de, #(_rect_list + 55)
      000307 CDr00r00         [24]  717 	call	___memcpy
                                    718 ;src/scene.c:193: rect_list[1][0x04] = ground;
      00030A 11 05 00         [12]  719 	ld	de, #0x0005
      00030D D5               [16]  720 	push	de
      00030E 21 02 00         [12]  721 	ld	hl, #2
      000311 39               [ 8]  722 	add	hl, sp
      000312 4D               [ 4]  723 	ld	c, l
      000313 44               [ 4]  724 	ld	b, h
      000314 11r4Cr00         [12]  725 	ld	de, #(_rect_list + 60)
      000317 CDr00r00         [24]  726 	call	___memcpy
                                    727 ;src/scene.c:194: rect_list[1][0x05] = ground;
      00031A 11 05 00         [12]  728 	ld	de, #0x0005
      00031D D5               [16]  729 	push	de
      00031E 21 02 00         [12]  730 	ld	hl, #2
      000321 39               [ 8]  731 	add	hl, sp
      000322 4D               [ 4]  732 	ld	c, l
      000323 44               [ 4]  733 	ld	b, h
      000324 11r51r00         [12]  734 	ld	de, #(_rect_list + 65)
      000327 CDr00r00         [24]  735 	call	___memcpy
                                    736 ;src/scene.c:195: rect_list[1][0x06] = ground;
      00032A 11 05 00         [12]  737 	ld	de, #0x0005
      00032D D5               [16]  738 	push	de
      00032E 21 02 00         [12]  739 	ld	hl, #2
      000331 39               [ 8]  740 	add	hl, sp
      000332 4D               [ 4]  741 	ld	c, l
      000333 44               [ 4]  742 	ld	b, h
      000334 11r56r00         [12]  743 	ld	de, #(_rect_list + 70)
      000337 CDr00r00         [24]  744 	call	___memcpy
                                    745 ;src/scene.c:196: rect_list[1][0x07] = ground;
      00033A 11 05 00         [12]  746 	ld	de, #0x0005
      00033D D5               [16]  747 	push	de
      00033E 21 02 00         [12]  748 	ld	hl, #2
      000341 39               [ 8]  749 	add	hl, sp
      000342 4D               [ 4]  750 	ld	c, l
      000343 44               [ 4]  751 	ld	b, h
      000344 11r5Br00         [12]  752 	ld	de, #(_rect_list + 75)
      000347 CDr00r00         [24]  753 	call	___memcpy
                                    754 ;src/scene.c:198: rect_list[2][0x00] = ground;
      00034A 11 05 00         [12]  755 	ld	de, #0x0005
      00034D D5               [16]  756 	push	de
      00034E 21 02 00         [12]  757 	ld	hl, #2
      000351 39               [ 8]  758 	add	hl, sp
      000352 4D               [ 4]  759 	ld	c, l
      000353 44               [ 4]  760 	ld	b, h
      000354 11r60r00         [12]  761 	ld	de, #(_rect_list + 80)
      000357 CDr00r00         [24]  762 	call	___memcpy
                                    763 ;src/scene.c:199: rect_list[2][0x01] = vending_machine;
      00035A 11 05 00         [12]  764 	ld	de, #0x0005
      00035D D5               [16]  765 	push	de
      00035E 21 0C 00         [12]  766 	ld	hl, #12
      000361 39               [ 8]  767 	add	hl, sp
      000362 4D               [ 4]  768 	ld	c, l
      000363 44               [ 4]  769 	ld	b, h
      000364 11r65r00         [12]  770 	ld	de, #(_rect_list + 85)
      000367 CDr00r00         [24]  771 	call	___memcpy
                                    772 ;src/scene.c:200: rect_list[2][0x02] = ground;
      00036A 11 05 00         [12]  773 	ld	de, #0x0005
      00036D D5               [16]  774 	push	de
      00036E 21 02 00         [12]  775 	ld	hl, #2
      000371 39               [ 8]  776 	add	hl, sp
      000372 4D               [ 4]  777 	ld	c, l
      000373 44               [ 4]  778 	ld	b, h
      000374 11r6Ar00         [12]  779 	ld	de, #(_rect_list + 90)
      000377 CDr00r00         [24]  780 	call	___memcpy
                                    781 ;src/scene.c:201: rect_list[2][0x03] = ground;
      00037A 11 05 00         [12]  782 	ld	de, #0x0005
      00037D D5               [16]  783 	push	de
      00037E 21 02 00         [12]  784 	ld	hl, #2
      000381 39               [ 8]  785 	add	hl, sp
      000382 4D               [ 4]  786 	ld	c, l
      000383 44               [ 4]  787 	ld	b, h
      000384 11r6Fr00         [12]  788 	ld	de, #(_rect_list + 95)
      000387 CDr00r00         [24]  789 	call	___memcpy
                                    790 ;src/scene.c:202: rect_list[2][0x04] = ground;
      00038A 11 05 00         [12]  791 	ld	de, #0x0005
      00038D D5               [16]  792 	push	de
      00038E 21 02 00         [12]  793 	ld	hl, #2
      000391 39               [ 8]  794 	add	hl, sp
      000392 4D               [ 4]  795 	ld	c, l
      000393 44               [ 4]  796 	ld	b, h
      000394 11r74r00         [12]  797 	ld	de, #(_rect_list + 100)
      000397 CDr00r00         [24]  798 	call	___memcpy
                                    799 ;src/scene.c:203: rect_list[2][0x05] = ground;
      00039A 11 05 00         [12]  800 	ld	de, #0x0005
      00039D D5               [16]  801 	push	de
      00039E 21 02 00         [12]  802 	ld	hl, #2
      0003A1 39               [ 8]  803 	add	hl, sp
      0003A2 4D               [ 4]  804 	ld	c, l
      0003A3 44               [ 4]  805 	ld	b, h
      0003A4 11r79r00         [12]  806 	ld	de, #(_rect_list + 105)
      0003A7 CDr00r00         [24]  807 	call	___memcpy
                                    808 ;src/scene.c:204: rect_list[2][0x06] = ground;
      0003AA 11 05 00         [12]  809 	ld	de, #0x0005
      0003AD D5               [16]  810 	push	de
      0003AE 21 02 00         [12]  811 	ld	hl, #2
      0003B1 39               [ 8]  812 	add	hl, sp
      0003B2 4D               [ 4]  813 	ld	c, l
      0003B3 44               [ 4]  814 	ld	b, h
      0003B4 11r7Er00         [12]  815 	ld	de, #(_rect_list + 110)
      0003B7 CDr00r00         [24]  816 	call	___memcpy
                                    817 ;src/scene.c:205: rect_list[2][0x07] = ground;
      0003BA 11 05 00         [12]  818 	ld	de, #0x0005
      0003BD D5               [16]  819 	push	de
      0003BE 21 02 00         [12]  820 	ld	hl, #2
      0003C1 39               [ 8]  821 	add	hl, sp
      0003C2 4D               [ 4]  822 	ld	c, l
      0003C3 44               [ 4]  823 	ld	b, h
      0003C4 11r83r00         [12]  824 	ld	de, #(_rect_list + 115)
      0003C7 CDr00r00         [24]  825 	call	___memcpy
                                    826 ;src/scene.c:207: rect_list[3][0x00] = ground;
      0003CA 11 05 00         [12]  827 	ld	de, #0x0005
      0003CD D5               [16]  828 	push	de
      0003CE 21 02 00         [12]  829 	ld	hl, #2
      0003D1 39               [ 8]  830 	add	hl, sp
      0003D2 4D               [ 4]  831 	ld	c, l
      0003D3 44               [ 4]  832 	ld	b, h
      0003D4 11r88r00         [12]  833 	ld	de, #(_rect_list + 120)
      0003D7 CDr00r00         [24]  834 	call	___memcpy
                                    835 ;src/scene.c:208: rect_list[3][0x01] = ground;
      0003DA 11 05 00         [12]  836 	ld	de, #0x0005
      0003DD D5               [16]  837 	push	de
      0003DE 21 02 00         [12]  838 	ld	hl, #2
      0003E1 39               [ 8]  839 	add	hl, sp
      0003E2 4D               [ 4]  840 	ld	c, l
      0003E3 44               [ 4]  841 	ld	b, h
      0003E4 11r8Dr00         [12]  842 	ld	de, #(_rect_list + 125)
      0003E7 CDr00r00         [24]  843 	call	___memcpy
                                    844 ;src/scene.c:209: rect_list[3][0x02] = ground;
      0003EA 11 05 00         [12]  845 	ld	de, #0x0005
      0003ED D5               [16]  846 	push	de
      0003EE 21 02 00         [12]  847 	ld	hl, #2
      0003F1 39               [ 8]  848 	add	hl, sp
      0003F2 4D               [ 4]  849 	ld	c, l
      0003F3 44               [ 4]  850 	ld	b, h
      0003F4 11r92r00         [12]  851 	ld	de, #(_rect_list + 130)
      0003F7 CDr00r00         [24]  852 	call	___memcpy
                                    853 ;src/scene.c:210: rect_list[3][0x03] = ground;
      0003FA 11 05 00         [12]  854 	ld	de, #0x0005
      0003FD D5               [16]  855 	push	de
      0003FE 21 02 00         [12]  856 	ld	hl, #2
      000401 39               [ 8]  857 	add	hl, sp
      000402 4D               [ 4]  858 	ld	c, l
      000403 44               [ 4]  859 	ld	b, h
      000404 11r97r00         [12]  860 	ld	de, #(_rect_list + 135)
      000407 CDr00r00         [24]  861 	call	___memcpy
                                    862 ;src/scene.c:211: rect_list[3][0x04] = ground;
      00040A 11 05 00         [12]  863 	ld	de, #0x0005
      00040D D5               [16]  864 	push	de
      00040E 21 02 00         [12]  865 	ld	hl, #2
      000411 39               [ 8]  866 	add	hl, sp
      000412 4D               [ 4]  867 	ld	c, l
      000413 44               [ 4]  868 	ld	b, h
      000414 11r9Cr00         [12]  869 	ld	de, #(_rect_list + 140)
      000417 CDr00r00         [24]  870 	call	___memcpy
                                    871 ;src/scene.c:212: rect_list[3][0x05] = ground;
      00041A 11 05 00         [12]  872 	ld	de, #0x0005
      00041D D5               [16]  873 	push	de
      00041E 21 02 00         [12]  874 	ld	hl, #2
      000421 39               [ 8]  875 	add	hl, sp
      000422 4D               [ 4]  876 	ld	c, l
      000423 44               [ 4]  877 	ld	b, h
      000424 11rA1r00         [12]  878 	ld	de, #(_rect_list + 145)
      000427 CDr00r00         [24]  879 	call	___memcpy
                                    880 ;src/scene.c:213: rect_list[3][0x06] = ground;
      00042A 11 05 00         [12]  881 	ld	de, #0x0005
      00042D D5               [16]  882 	push	de
      00042E 21 02 00         [12]  883 	ld	hl, #2
      000431 39               [ 8]  884 	add	hl, sp
      000432 4D               [ 4]  885 	ld	c, l
      000433 44               [ 4]  886 	ld	b, h
      000434 11rA6r00         [12]  887 	ld	de, #(_rect_list + 150)
      000437 CDr00r00         [24]  888 	call	___memcpy
                                    889 ;src/scene.c:214: rect_list[3][0x07] = ground;
      00043A 11 05 00         [12]  890 	ld	de, #0x0005
      00043D D5               [16]  891 	push	de
      00043E 21 02 00         [12]  892 	ld	hl, #2
      000441 39               [ 8]  893 	add	hl, sp
      000442 4D               [ 4]  894 	ld	c, l
      000443 44               [ 4]  895 	ld	b, h
      000444 11rABr00         [12]  896 	ld	de, #(_rect_list + 155)
      000447 CDr00r00         [24]  897 	call	___memcpy
                                    898 ;src/scene.c:216: window_components_on_current_floor[0] = 0x11;
      00044A 21r03r00         [12]  899 	ld	hl, #_window_components_on_current_floor
      00044D 36 11            [12]  900 	ld	(hl), #0x11
                                    901 ;src/scene.c:217: window_components_on_current_floor[1] = 0x11;
      00044F 21r04r00         [12]  902 	ld	hl, #(_window_components_on_current_floor + 1)
      000452 36 11            [12]  903 	ld	(hl), #0x11
                                    904 ;src/scene.c:218: window_components_on_current_floor[2] = 0x11;
      000454 21r05r00         [12]  905 	ld	hl, #(_window_components_on_current_floor + 2)
      000457 36 11            [12]  906 	ld	(hl), #0x11
                                    907 ;src/scene.c:219: window_components_on_current_floor[3] = 0x11;
      000459 21r06r00         [12]  908 	ld	hl, #(_window_components_on_current_floor + 3)
      00045C 36 11            [12]  909 	ld	(hl), #0x11
                                    910 ;src/scene.c:221: r = 0x00;
      00045E 21r02r00         [12]  911 	ld	hl, #_r
      000461 36 00            [12]  912 	ld	(hl), #0x00
                                    913 ;src/scene.c:222: rand_init = false;
      000463 21r01r00         [12]  914 	ld	hl, #_rand_init
      000466 36 00            [12]  915 	ld	(hl), #0x00
                                    916 ;src/scene.c:225: walker_byte = 0x00;
      000468 21rD1r00         [12]  917 	ld	hl, #_walker_byte
      00046B 36 00            [12]  918 	ld	(hl), #0x00
                                    919 ;src/scene.c:226: malloc_i = 0;
      00046D 21rD2r00         [12]  920 	ld	hl, #_malloc_i
      000470 36 00            [12]  921 	ld	(hl), #0x00
                                    922 ;src/scene.c:248: }
      000472 E8 1B            [16]  923 	add	sp, #27
      000474 C9               [16]  924 	ret
                                    925 ;src/scene.c:250: void compute_scene_frame(void){
                                    926 ;	---------------------------------
                                    927 ; Function compute_scene_frame
                                    928 ; ---------------------------------
      000475                        929 _compute_scene_frame::
                                    930 ;src/scene.c:260: if((walker_byte & 0xCF) != 0xCF){
      000475 FArD1r00         [16]  931 	ld	a, (#_walker_byte)
      000478 E6 CF            [ 8]  932 	and	a, #0xcf
      00047A D6 CF            [ 8]  933 	sub	a, #0xcf
      00047C 28 0A            [12]  934 	jr	Z, 00104$
                                    935 ;src/scene.c:261: if(rand_init)next_map_gen_step();
      00047E 21r01r00         [12]  936 	ld	hl, #_rand_init
      000481 CB 46            [12]  937 	bit	0, (hl)
      000483 28 03            [12]  938 	jr	Z, 00104$
      000485 CDr09r0A         [24]  939 	call	_next_map_gen_step
      000488                        940 00104$:
                                    941 ;src/scene.c:263: move_camera();
      000488 CDr8Er04         [24]  942 	call	_move_camera
                                    943 ;src/scene.c:265: animate_weeds();
                                    944 ;src/scene.c:266: }
      00048B C3r15r06         [16]  945 	jp	_animate_weeds
                                    946 ;src/scene.c:268: void move_camera(void){
                                    947 ;	---------------------------------
                                    948 ; Function move_camera
                                    949 ; ---------------------------------
      00048E                        950 _move_camera::
                                    951 ;src/scene.c:269: if(!game_started_flag) return;
      00048E 21r0Er00         [12]  952 	ld	hl, #_game_started_flag
      000491 CB 46            [12]  953 	bit	0, (hl)
      000493 C8               [20]  954 	ret	Z
                                    955 ;src/scene.c:271: current_cam_frame++;
      000494 21r0Cr00         [12]  956 	ld	hl, #_current_cam_frame
      000497 34               [12]  957 	inc	(hl)
                                    958 ;src/scene.c:272: accelerate_cam_flag++;
      000498 21r0Dr00         [12]  959 	ld	hl, #_accelerate_cam_flag
      00049B 34               [12]  960 	inc	(hl)
                                    961 ;src/scene.c:274: if(current_cam_frame >= (frames_to_move >> 3)){
      00049C 21r0Br00         [12]  962 	ld	hl, #_frames_to_move
      00049F 4E               [ 8]  963 	ld	c, (hl)
      0004A0 CB 39            [ 8]  964 	srl	c
      0004A2 CB 39            [ 8]  965 	srl	c
      0004A4 CB 39            [ 8]  966 	srl	c
      0004A6 21r0Cr00         [12]  967 	ld	hl, #_current_cam_frame
      0004A9 7E               [ 8]  968 	ld	a, (hl)
      0004AA 91               [ 4]  969 	sub	a, c
      0004AB 38 09            [12]  970 	jr	C, 00104$
                                    971 ;src/scene.c:275: current_cam_frame = 0;
      0004AD 36 00            [12]  972 	ld	(hl), #0x00
                                    973 ;src/scene.c:276: camera_y--;
      0004AF 21r07r00         [12]  974 	ld	hl, #_camera_y
      0004B2 35               [12]  975 	dec	(hl)
                                    976 ;src/scene.c:277: set_camera();
      0004B3 CDrC7r04         [24]  977 	call	_set_camera
      0004B6                        978 00104$:
                                    979 ;src/scene.c:280: move_sprites_down();
      0004B6 CDr26r05         [24]  980 	call	_move_sprites_down
                                    981 ;src/scene.c:282: if(accelerate_cam_flag == 0xFF && frames_to_move > 16U){
      0004B9 FAr0Dr00         [16]  982 	ld	a, (#_accelerate_cam_flag)
      0004BC 3C               [ 4]  983 	inc	a
      0004BD C0               [20]  984 	ret	NZ
      0004BE 3E 10            [ 8]  985 	ld	a, #0x10
      0004C0 21r0Br00         [12]  986 	ld	hl, #_frames_to_move
      0004C3 96               [ 8]  987 	sub	a, (hl)
      0004C4 D0               [20]  988 	ret	NC
                                    989 ;src/scene.c:283: frames_to_move--;
      0004C5 35               [12]  990 	dec	(hl)
                                    991 ;src/scene.c:285: }
      0004C6 C9               [16]  992 	ret
                                    993 ;src/scene.c:287: void set_camera(void){
                                    994 ;	---------------------------------
                                    995 ; Function set_camera
                                    996 ; ---------------------------------
      0004C7                        997 _set_camera::
                                    998 ;src/scene.c:288: move_bkg(8, camera_y);
      0004C7 21r07r00         [12]  999 	ld	hl, #_camera_y
      0004CA 4E               [ 8] 1000 	ld	c, (hl)
                                   1001 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1378: SCX_REG=x, SCY_REG=y;
      0004CB 3E 08            [ 8] 1002 	ld	a, #0x08
      0004CD E0r00            [12] 1003 	ldh	(_SCX_REG + 0), a
      0004CF 79               [ 4] 1004 	ld	a, c
      0004D0 E0r00            [12] 1005 	ldh	(_SCY_REG + 0), a
                                   1006 ;src/scene.c:290: camera_y_clamped = (((camera_y-1) >> 3) & 0x1F) >> 3;
      0004D2 4E               [ 8] 1007 	ld	c, (hl)
      0004D3 06 00            [ 8] 1008 	ld	b, #0x00
      0004D5 0B               [ 8] 1009 	dec	bc
      0004D6 CB 28            [ 8] 1010 	sra	b
      0004D8 CB 19            [ 8] 1011 	rr	c
      0004DA CB 28            [ 8] 1012 	sra	b
      0004DC CB 19            [ 8] 1013 	rr	c
      0004DE CB 28            [ 8] 1014 	sra	b
      0004E0 CB 19            [ 8] 1015 	rr	c
      0004E2 79               [ 4] 1016 	ld	a, c
      0004E3 E6 1F            [ 8] 1017 	and	a, #0x1f
      0004E5 4F               [ 4] 1018 	ld	c, a
      0004E6 06 00            [ 8] 1019 	ld	b, #0x00
      0004E8 CB 28            [ 8] 1020 	sra	b
      0004EA CB 19            [ 8] 1021 	rr	c
      0004EC CB 28            [ 8] 1022 	sra	b
      0004EE CB 19            [ 8] 1023 	rr	c
      0004F0 CB 28            [ 8] 1024 	sra	b
      0004F2 CB 19            [ 8] 1025 	rr	c
      0004F4 21r09r00         [12] 1026 	ld	hl, #_camera_y_clamped
      0004F7 71               [ 8] 1027 	ld	(hl), c
                                   1028 ;src/scene.c:291: old_camera_y_clamped = (((old_camera_y) >> 3) & 0x1F) >> 3;
      0004F8 FAr08r00         [16] 1029 	ld	a, (#_old_camera_y)
      0004FB CB 37            [ 8] 1030 	swap	a
      0004FD 07               [ 4] 1031 	rlca
      0004FE E6 1F            [ 8] 1032 	and	a, #0x1f
      000500 4F               [ 4] 1033 	ld	c, a
      000501 06 00            [ 8] 1034 	ld	b, #0x00
      000503 CB 28            [ 8] 1035 	sra	b
      000505 CB 19            [ 8] 1036 	rr	c
      000507 CB 28            [ 8] 1037 	sra	b
      000509 CB 19            [ 8] 1038 	rr	c
      00050B CB 28            [ 8] 1039 	sra	b
      00050D CB 19            [ 8] 1040 	rr	c
      00050F 21r0Ar00         [12] 1041 	ld	hl, #_old_camera_y_clamped
      000512 71               [ 8] 1042 	ld	(hl), c
                                   1043 ;src/scene.c:292: if(camera_y_clamped != old_camera_y_clamped){
      000513 FAr09r00         [16] 1044 	ld	a, (#_camera_y_clamped)
      000516 21r0Ar00         [12] 1045 	ld	hl, #_old_camera_y_clamped
      000519 96               [ 8] 1046 	sub	a, (hl)
      00051A C8               [20] 1047 	ret	Z
                                   1048 ;src/scene.c:293: gen_new_floor();
      00051B CDr84r06         [24] 1049 	call	_gen_new_floor
                                   1050 ;src/scene.c:294: old_camera_y = camera_y-1;
      00051E FAr07r00         [16] 1051 	ld	a, (#_camera_y)
      000521 3D               [ 4] 1052 	dec	a
      000522 EAr08r00         [16] 1053 	ld	(#_old_camera_y),a
                                   1054 ;src/scene.c:296: }
      000525 C9               [16] 1055 	ret
                                   1056 ;src/scene.c:298: void move_sprites_down(void){
                                   1057 ;	---------------------------------
                                   1058 ; Function move_sprites_down
                                   1059 ; ---------------------------------
      000526                       1060 _move_sprites_down::
                                   1061 ;src/scene.c:300: for(i=0; i<4; i++){
      000526 21r00r00         [12] 1062 	ld	hl, #_i
      000529 36 00            [12] 1063 	ld	(hl), #0x00
      00052B                       1064 00114$:
                                   1065 ;src/scene.c:302: if(((deactivate_weeds_flag >> (i << 1)) & 0x03)){continue;}
      00052B FAr00r00         [16] 1066 	ld	a, (#_i)
      00052E 87               [ 4] 1067 	add	a, a
      00052F 47               [ 4] 1068 	ld	b, a
      000530 21r38r01         [12] 1069 	ld	hl, #_deactivate_weeds_flag
      000533 4E               [ 8] 1070 	ld	c, (hl)
      000534 04               [ 4] 1071 	inc	b
      000535 18 02            [12] 1072 	jr	00160$
      000537                       1073 00159$:
      000537 CB 39            [ 8] 1074 	srl	c
      000539                       1075 00160$:
      000539 05               [ 4] 1076 	dec	b
      00053A 20 FB            [12] 1077 	jr	NZ, 00159$
      00053C 79               [ 4] 1078 	ld	a, c
      00053D E6 03            [ 8] 1079 	and	a, #0x03
      00053F C2r0Ar06         [16] 1080 	jp	NZ,00110$
                                   1081 ;src/scene.c:303: if(get_sprite_tile(16 + i) > 32){
      000542 FAr00r00         [16] 1082 	ld	a, (#_i)
      000545 C6 10            [ 8] 1083 	add	a, #0x10
      000547 4F               [ 4] 1084 	ld	c, a
                                   1085 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1815: return shadow_OAM[nb].tile;
      000548 26 00            [ 8] 1086 	ld	h, #0x00
                                   1087 ;	spillPairReg hl
                                   1088 ;	spillPairReg hl
      00054A 69               [ 4] 1089 	ld	l, c
      00054B 29               [ 8] 1090 	add	hl, hl
      00054C 29               [ 8] 1091 	add	hl, hl
      00054D 11r00r00         [12] 1092 	ld	de, #_shadow_OAM
      000550 19               [ 8] 1093 	add	hl, de
      000551 23               [ 8] 1094 	inc	hl
      000552 23               [ 8] 1095 	inc	hl
      000553 4E               [ 8] 1096 	ld	c, (hl)
                                   1097 ;src/scene.c:303: if(get_sprite_tile(16 + i) > 32){
      000554 3E 20            [ 8] 1098 	ld	a, #0x20
      000556 91               [ 4] 1099 	sub	a, c
      000557 30 40            [12] 1100 	jr	NC, 00106$
                                   1101 ;src/scene.c:304: clothes_position[0 + i] += ((clothes_speed >> (i<<1)) & 0x03) << 1;
      000559 3Er33            [ 8] 1102 	ld	a, #<(_clothes_position)
      00055B 21r00r00         [12] 1103 	ld	hl, #_i
      00055E 86               [ 8] 1104 	add	a, (hl)
      00055F 4F               [ 4] 1105 	ld	c, a
      000560 3Es01            [ 8] 1106 	ld	a, #>(_clothes_position)
      000562 CE 00            [ 8] 1107 	adc	a, #0x00
      000564 47               [ 4] 1108 	ld	b, a
      000565 0A               [ 8] 1109 	ld	a, (bc)
      000566 5F               [ 4] 1110 	ld	e, a
      000567 7E               [ 8] 1111 	ld	a, (hl)
      000568 87               [ 4] 1112 	add	a, a
      000569 F5               [16] 1113 	push	af
      00056A 21r37r01         [12] 1114 	ld	hl, #_clothes_speed
      00056D 56               [ 8] 1115 	ld	d, (hl)
      00056E F1               [12] 1116 	pop	af
      00056F 3C               [ 4] 1117 	inc	a
      000570 18 02            [12] 1118 	jr	00164$
      000572                       1119 00163$:
      000572 CB 3A            [ 8] 1120 	srl	d
      000574                       1121 00164$:
      000574 3D               [ 4] 1122 	dec	a
      000575 20 FB            [12] 1123 	jr	NZ, 00163$
      000577 7A               [ 4] 1124 	ld	a, d
      000578 E6 03            [ 8] 1125 	and	a, #0x03
      00057A 87               [ 4] 1126 	add	a, a
      00057B 83               [ 4] 1127 	add	a, e
      00057C 02               [ 8] 1128 	ld	(bc), a
                                   1129 ;src/scene.c:305: if((weeds_frame_counter >> 1) & 0x01){
      00057D FAr39r01         [16] 1130 	ld	a, (#_weeds_frame_counter)
      000580 0F               [ 4] 1131 	rrca
      000581 E6 01            [ 8] 1132 	and	a,#0x01
      000583 28 14            [12] 1133 	jr	Z, 00106$
                                   1134 ;src/scene.c:306: shadow_OAM[16 + i].y = 160; //hide the sprite without modyfying the x coord
      000585 21r00r00         [12] 1135 	ld	hl, #_i
      000588 4E               [ 8] 1136 	ld	c, (hl)
      000589 06 00            [ 8] 1137 	ld	b, #0x00
      00058B 21 10 00         [12] 1138 	ld	hl, #0x0010
      00058E 09               [ 8] 1139 	add	hl, bc
      00058F 29               [ 8] 1140 	add	hl, hl
      000590 29               [ 8] 1141 	add	hl, hl
      000591 11r00r00         [12] 1142 	ld	de, #_shadow_OAM
      000594 19               [ 8] 1143 	add	hl, de
      000595 36 A0            [12] 1144 	ld	(hl), #0xa0
                                   1145 ;src/scene.c:307: continue;
      000597 18 71            [12] 1146 	jr	00110$
      000599                       1147 00106$:
                                   1148 ;src/scene.c:311: shadow_OAM[16 + i].y = clothes_position[0 + i] - camera_y;
      000599 01r00r00         [12] 1149 	ld	bc, #_shadow_OAM+0
      00059C 21r00r00         [12] 1150 	ld	hl, #_i
      00059F 5E               [ 8] 1151 	ld	e, (hl)
      0005A0 16 00            [ 8] 1152 	ld	d, #0x00
      0005A2 21 10 00         [12] 1153 	ld	hl, #0x0010
      0005A5 19               [ 8] 1154 	add	hl, de
      0005A6 29               [ 8] 1155 	add	hl, hl
      0005A7 29               [ 8] 1156 	add	hl, hl
      0005A8 09               [ 8] 1157 	add	hl, bc
      0005A9 4D               [ 4] 1158 	ld	c, l
      0005AA 44               [ 4] 1159 	ld	b, h
      0005AB 3Er33            [ 8] 1160 	ld	a, #<(_clothes_position)
      0005AD 21r00r00         [12] 1161 	ld	hl, #_i
      0005B0 86               [ 8] 1162 	add	a, (hl)
      0005B1 5F               [ 4] 1163 	ld	e, a
      0005B2 3Es01            [ 8] 1164 	ld	a, #>(_clothes_position)
      0005B4 CE 00            [ 8] 1165 	adc	a, #0x00
      0005B6 57               [ 4] 1166 	ld	d, a
      0005B7 1A               [ 8] 1167 	ld	a, (de)
      0005B8 21r07r00         [12] 1168 	ld	hl, #_camera_y
      0005BB 96               [ 8] 1169 	sub	a, (hl)
      0005BC 02               [ 8] 1170 	ld	(bc), a
                                   1171 ;src/scene.c:312: if((uint8_t)(clothes_position[0 + i] - camera_y) >= 152 && (uint8_t)(clothes_position[0 + i] - camera_y) < 170){
      0005BD 3Er33            [ 8] 1172 	ld	a, #<(_clothes_position)
      0005BF 21r00r00         [12] 1173 	ld	hl, #_i
      0005C2 86               [ 8] 1174 	add	a, (hl)
      0005C3 4F               [ 4] 1175 	ld	c, a
      0005C4 3Es01            [ 8] 1176 	ld	a, #>(_clothes_position)
      0005C6 CE 00            [ 8] 1177 	adc	a, #0x00
      0005C8 47               [ 4] 1178 	ld	b, a
      0005C9 0A               [ 8] 1179 	ld	a, (bc)
      0005CA 21r07r00         [12] 1180 	ld	hl, #_camera_y
      0005CD 96               [ 8] 1181 	sub	a, (hl)
      0005CE FE 98            [ 8] 1182 	cp	a, #0x98
      0005D0 38 38            [12] 1183 	jr	C, 00110$
      0005D2 D6 AA            [ 8] 1184 	sub	a, #0xaa
      0005D4 30 34            [12] 1185 	jr	NC, 00110$
                                   1186 ;src/scene.c:313: deactivate_weeds_flag |= 0b00000001 << (i<<1);
      0005D6 21r00r00         [12] 1187 	ld	hl, #_i
      0005D9 4E               [ 8] 1188 	ld	c, (hl)
      0005DA 79               [ 4] 1189 	ld	a, c
      0005DB 87               [ 4] 1190 	add	a, a
      0005DC 5F               [ 4] 1191 	ld	e, a
      0005DD 43               [ 4] 1192 	ld	b, e
      0005DE 3E 01            [ 8] 1193 	ld	a, #0x01
      0005E0 04               [ 4] 1194 	inc	b
      0005E1 18 01            [12] 1195 	jr	00166$
      0005E3                       1196 00165$:
      0005E3 87               [ 4] 1197 	add	a, a
      0005E4                       1198 00166$:
      0005E4 05               [ 4] 1199 	dec	b
      0005E5 20 FC            [12] 1200 	jr	NZ,00165$
      0005E7 21r38r01         [12] 1201 	ld	hl, #_deactivate_weeds_flag
      0005EA B6               [ 8] 1202 	or	a, (hl)
      0005EB 77               [ 8] 1203 	ld	(hl), a
                                   1204 ;src/scene.c:314: clothes_speed &= ~(0b00000011 << (i<<1));
      0005EC 3E 03            [ 8] 1205 	ld	a, #0x03
      0005EE 1C               [ 4] 1206 	inc	e
      0005EF 18 01            [12] 1207 	jr	00168$
      0005F1                       1208 00167$:
      0005F1 87               [ 4] 1209 	add	a, a
      0005F2                       1210 00168$:
      0005F2 1D               [ 4] 1211 	dec	e
      0005F3 20 FC            [12] 1212 	jr	NZ,00167$
      0005F5 2F               [ 4] 1213 	cpl
      0005F6 21r37r01         [12] 1214 	ld	hl, #_clothes_speed
      0005F9 A6               [ 8] 1215 	and	a, (hl)
      0005FA 77               [ 8] 1216 	ld	(hl), a
                                   1217 ;src/scene.c:315: hide_sprite(16+i);
      0005FB 79               [ 4] 1218 	ld	a, c
      0005FC C6 10            [ 8] 1219 	add	a, #0x10
      0005FE 4F               [ 4] 1220 	ld	c, a
                                   1221 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1905: shadow_OAM[nb].y = 0;
      0005FF 26 00            [ 8] 1222 	ld	h, #0x00
                                   1223 ;	spillPairReg hl
                                   1224 ;	spillPairReg hl
      000601 69               [ 4] 1225 	ld	l, c
      000602 29               [ 8] 1226 	add	hl, hl
      000603 29               [ 8] 1227 	add	hl, hl
      000604 11r00r00         [12] 1228 	ld	de, #_shadow_OAM
      000607 19               [ 8] 1229 	add	hl, de
      000608 36 00            [12] 1230 	ld	(hl), #0x00
                                   1231 ;src/scene.c:315: hide_sprite(16+i);
      00060A                       1232 00110$:
                                   1233 ;src/scene.c:300: for(i=0; i<4; i++){
      00060A 21r00r00         [12] 1234 	ld	hl, #_i
      00060D 34               [12] 1235 	inc	(hl)
      00060E 7E               [ 8] 1236 	ld	a, (hl)
      00060F D6 04            [ 8] 1237 	sub	a, #0x04
      000611 DAr2Br05         [16] 1238 	jp	C, 00114$
                                   1239 ;src/scene.c:318: }
      000614 C9               [16] 1240 	ret
                                   1241 ;src/scene.c:320: void animate_weeds(void){
                                   1242 ;	---------------------------------
                                   1243 ; Function animate_weeds
                                   1244 ; ---------------------------------
      000615                       1245 _animate_weeds::
                                   1246 ;src/scene.c:321: weeds_frame_counter++;
      000615 21r39r01         [12] 1247 	ld	hl, #_weeds_frame_counter
      000618 34               [12] 1248 	inc	(hl)
                                   1249 ;src/scene.c:322: if(deactivate_weeds_flag != 0x00 || is_generated){
      000619 FAr38r01         [16] 1250 	ld	a, (#_deactivate_weeds_flag)
      00061C B7               [ 4] 1251 	or	a, a
      00061D C0               [20] 1252 	ret	NZ
      00061E 21r3Ar01         [12] 1253 	ld	hl, #_is_generated
      000621 CB 46            [12] 1254 	bit	0, (hl)
                                   1255 ;src/scene.c:323: return;
      000623 C0               [20] 1256 	ret	NZ
                                   1257 ;src/scene.c:325: if(weeds_frame_counter >= 15){
      000624 21r39r01         [12] 1258 	ld	hl, #_weeds_frame_counter
      000627 7E               [ 8] 1259 	ld	a, (hl)
      000628 D6 0F            [ 8] 1260 	sub	a, #0x0f
      00062A D8               [20] 1261 	ret	C
                                   1262 ;src/scene.c:326: weeds_frame_counter = 0;
      00062B 36 00            [12] 1263 	ld	(hl), #0x00
                                   1264 ;src/scene.c:328: clothes_speed = ((clothes_speed + 0b00000001) & 0b00000011)
      00062D 21r37r01         [12] 1265 	ld	hl, #_clothes_speed
      000630 46               [ 8] 1266 	ld	b, (hl)
      000631 78               [ 4] 1267 	ld	a, b
      000632 3C               [ 4] 1268 	inc	a
      000633 E6 03            [ 8] 1269 	and	a, #0x03
      000635 4F               [ 4] 1270 	ld	c, a
                                   1271 ;src/scene.c:329: | ((clothes_speed + 0b00000100) & 0b00001100)
      000636 78               [ 4] 1272 	ld	a, b
      000637 3C               [ 4] 1273 	inc	a
      000638 3C               [ 4] 1274 	inc	a
      000639 3C               [ 4] 1275 	inc	a
      00063A 3C               [ 4] 1276 	inc	a
      00063B E6 0C            [ 8] 1277 	and	a, #0x0c
      00063D B1               [ 4] 1278 	or	a, c
      00063E 4F               [ 4] 1279 	ld	c, a
                                   1280 ;src/scene.c:330: | ((clothes_speed + 0b00010000) & 0b00110000)
      00063F 78               [ 4] 1281 	ld	a, b
      000640 C6 10            [ 8] 1282 	add	a, #0x10
      000642 E6 30            [ 8] 1283 	and	a, #0x30
      000644 B1               [ 4] 1284 	or	a, c
      000645 4F               [ 4] 1285 	ld	c, a
                                   1286 ;src/scene.c:331: | ((clothes_speed + 0b01000000) & 0b11000000);
      000646 78               [ 4] 1287 	ld	a, b
      000647 C6 40            [ 8] 1288 	add	a, #0x40
      000649 E6 C0            [ 8] 1289 	and	a, #0xc0
      00064B B1               [ 4] 1290 	or	a, c
      00064C 77               [ 8] 1291 	ld	(hl), a
                                   1292 ;src/scene.c:333: set_sprite_tile(16, 29 + ((clothes_speed >> 7) & 0x01));
      00064D 7E               [ 8] 1293 	ld	a, (hl)
      00064E 07               [ 4] 1294 	rlca
      00064F E6 01            [ 8] 1295 	and	a, #0x01
      000651 C6 1D            [ 8] 1296 	add	a, #0x1d
      000653 4F               [ 4] 1297 	ld	c, a
                                   1298 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1804: shadow_OAM[nb].tile=tile;
      000654 21r42r00         [12] 1299 	ld	hl, #(_shadow_OAM + 66)
      000657 71               [ 8] 1300 	ld	(hl), c
                                   1301 ;src/scene.c:334: set_sprite_tile(17, 29 + ((clothes_speed >> 5) & 0x01));
      000658 FAr37r01         [16] 1302 	ld	a, (#_clothes_speed)
      00065B 07               [ 4] 1303 	rlca
      00065C 07               [ 4] 1304 	rlca
      00065D 07               [ 4] 1305 	rlca
      00065E E6 01            [ 8] 1306 	and	a, #0x01
      000660 C6 1D            [ 8] 1307 	add	a, #0x1d
      000662 4F               [ 4] 1308 	ld	c, a
                                   1309 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1804: shadow_OAM[nb].tile=tile;
      000663 21r46r00         [12] 1310 	ld	hl, #(_shadow_OAM + 70)
      000666 71               [ 8] 1311 	ld	(hl), c
                                   1312 ;src/scene.c:335: set_sprite_tile(18, 29 + ((clothes_speed >> 3) & 0x01));
      000667 FAr37r01         [16] 1313 	ld	a, (#_clothes_speed)
      00066A 0F               [ 4] 1314 	rrca
      00066B 0F               [ 4] 1315 	rrca
      00066C 0F               [ 4] 1316 	rrca
      00066D E6 01            [ 8] 1317 	and	a, #0x01
      00066F C6 1D            [ 8] 1318 	add	a, #0x1d
      000671 4F               [ 4] 1319 	ld	c, a
                                   1320 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1804: shadow_OAM[nb].tile=tile;
      000672 21r4Ar00         [12] 1321 	ld	hl, #(_shadow_OAM + 74)
      000675 71               [ 8] 1322 	ld	(hl), c
                                   1323 ;src/scene.c:336: set_sprite_tile(19, 29 + ((clothes_speed >> 1) & 0x01));
      000676 FAr37r01         [16] 1324 	ld	a, (#_clothes_speed)
      000679 0F               [ 4] 1325 	rrca
      00067A E6 01            [ 8] 1326 	and	a, #0x01
      00067C C6 1D            [ 8] 1327 	add	a, #0x1d
      00067E 4F               [ 4] 1328 	ld	c, a
                                   1329 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1804: shadow_OAM[nb].tile=tile;
      00067F 21r4Er00         [12] 1330 	ld	hl, #(_shadow_OAM + 78)
      000682 71               [ 8] 1331 	ld	(hl), c
                                   1332 ;src/scene.c:336: set_sprite_tile(19, 29 + ((clothes_speed >> 1) & 0x01));
                                   1333 ;src/scene.c:338: }
      000683 C9               [16] 1334 	ret
                                   1335 ;src/scene.c:340: void gen_new_floor(void){
                                   1336 ;	---------------------------------
                                   1337 ; Function gen_new_floor
                                   1338 ; ---------------------------------
      000684                       1339 _gen_new_floor::
      000684 E8 F7            [16] 1340 	add	sp, #-9
                                   1341 ;src/scene.c:341: if(!rand_init) {
      000686 21r01r00         [12] 1342 	ld	hl, #_rand_init
      000689 CB 46            [12] 1343 	bit	0, (hl)
      00068B 20 10            [12] 1344 	jr	NZ, 00103$
                                   1345 ;src/scene.c:342: initrand(r);
      00068D 21r02r00         [12] 1346 	ld	hl, #_r
      000690 4E               [ 8] 1347 	ld	c, (hl)
      000691 06 00            [ 8] 1348 	ld	b, #0x00
      000693 C5               [16] 1349 	push	bc
      000694 CDr00r00         [24] 1350 	call	_initrand
      000697 E1               [12] 1351 	pop	hl
                                   1352 ;src/scene.c:343: rand_init = true;
      000698 21r01r00         [12] 1353 	ld	hl, #_rand_init
      00069B 36 01            [12] 1354 	ld	(hl), #0x01
                                   1355 ;src/scene.c:348: while((walker_byte & 0xCF) != 0xCF){
      00069D                       1356 00103$:
      00069D FArD1r00         [16] 1357 	ld	a, (#_walker_byte)
      0006A0 E6 CF            [ 8] 1358 	and	a, #0xcf
      0006A2 D6 CF            [ 8] 1359 	sub	a, #0xcf
      0006A4 28 05            [12] 1360 	jr	Z, 00105$
                                   1361 ;src/scene.c:350: next_map_gen_step();
      0006A6 CDr09r0A         [24] 1362 	call	_next_map_gen_step
      0006A9 18 F2            [12] 1363 	jr	00103$
      0006AB                       1364 00105$:
                                   1365 ;src/scene.c:353: walker_byte &= 0x30;
      0006AB 21rD1r00         [12] 1366 	ld	hl, #_walker_byte
      0006AE 7E               [ 8] 1367 	ld	a, (hl)
      0006AF E6 30            [ 8] 1368 	and	a, #0x30
      0006B1 77               [ 8] 1369 	ld	(hl), a
                                   1370 ;src/scene.c:354: malloc_i = 0;
      0006B2 21rD2r00         [12] 1371 	ld	hl, #_malloc_i
      0006B5 36 00            [12] 1372 	ld	(hl), #0x00
                                   1373 ;src/scene.c:356: if(!is_generated){
      0006B7 21r3Ar01         [12] 1374 	ld	hl, #_is_generated
      0006BA CB 46            [12] 1375 	bit	0, (hl)
      0006BC 20 27            [12] 1376 	jr	NZ, 00109$
                                   1377 ;src/scene.c:357: set_bkg_tiles(map_pos_x, camera_y_clamped << 3, 20, base_floor_map_height, floor_map);
      0006BE 01r00r00         [12] 1378 	ld	bc, #_base_floor_map+0
      0006C1 21r09r00         [12] 1379 	ld	hl, #_camera_y_clamped
      0006C4 7E               [ 8] 1380 	ld	a, (hl)
      0006C5 87               [ 4] 1381 	add	a, a
      0006C6 87               [ 4] 1382 	add	a, a
      0006C7 87               [ 4] 1383 	add	a, a
      0006C8 C5               [16] 1384 	push	bc
      0006C9 26 08            [ 8] 1385 	ld	h, #0x08
                                   1386 ;	spillPairReg hl
                                   1387 ;	spillPairReg hl
      0006CB E5               [16] 1388 	push	hl
      0006CC 33               [ 8] 1389 	inc	sp
      0006CD 26 14            [ 8] 1390 	ld	h, #0x14
                                   1391 ;	spillPairReg hl
                                   1392 ;	spillPairReg hl
      0006CF E5               [16] 1393 	push	hl
      0006D0 33               [ 8] 1394 	inc	sp
      0006D1 67               [ 4] 1395 	ld	h, a
      0006D2 2E 01            [ 8] 1396 	ld	l, #0x01
      0006D4 E5               [16] 1397 	push	hl
      0006D5 CDr00r00         [24] 1398 	call	_set_bkg_tiles
      0006D8 E8 06            [16] 1399 	add	sp, #6
                                   1400 ;src/scene.c:358: if(camera_y_clamped == 0) is_generated = true;    
      0006DA FAr09r00         [16] 1401 	ld	a, (#_camera_y_clamped)
      0006DD B7               [ 4] 1402 	or	a, a
      0006DE 20 05            [12] 1403 	jr	NZ, 00109$
      0006E0 21r3Ar01         [12] 1404 	ld	hl, #_is_generated
      0006E3 36 01            [12] 1405 	ld	(hl), #0x01
      0006E5                       1406 00109$:
                                   1407 ;src/scene.c:361: uint8_t y_draw = (camera_y_clamped << 3);
      0006E5 FAr09r00         [16] 1408 	ld	a, (#_camera_y_clamped)
      0006E8 87               [ 4] 1409 	add	a, a
      0006E9 87               [ 4] 1410 	add	a, a
      0006EA 87               [ 4] 1411 	add	a, a
                                   1412 ;src/scene.c:363: set_bkg_tiles(3, y_draw + 1, 16, 6, window_map);
      0006EB 3C               [ 4] 1413 	inc	a
      0006EC F8 07            [12] 1414 	ldhl	sp,	#7
      0006EE 77               [ 8] 1415 	ld	(hl), a
      0006EF 11rD3r00         [12] 1416 	ld	de, #_window_map
      0006F2 D5               [16] 1417 	push	de
      0006F3 11 10 06         [12] 1418 	ld	de, #0x610
      0006F6 D5               [16] 1419 	push	de
      0006F7 66               [ 8] 1420 	ld	h, (hl)
      0006F8 2E 03            [ 8] 1421 	ld	l, #0x03
      0006FA E5               [16] 1422 	push	hl
      0006FB CDr00r00         [24] 1423 	call	_set_bkg_tiles
      0006FE E8 06            [16] 1424 	add	sp, #6
                                   1425 ;src/scene.c:367: for ( i = 0; i < 4; i++)
      000700 21r00r00         [12] 1426 	ld	hl, #_i
      000703 36 00            [12] 1427 	ld	(hl), #0x00
      000705                       1428 00113$:
                                   1429 ;src/scene.c:371: collider = top_info[(uint8_t)(window_components_on_current_floor[i] >> 4)].collider;
      000705 3Er03            [ 8] 1430 	ld	a, #<(_window_components_on_current_floor)
      000707 21r00r00         [12] 1431 	ld	hl, #_i
      00070A 86               [ 8] 1432 	add	a, (hl)
      00070B 4F               [ 4] 1433 	ld	c, a
      00070C 3Es00            [ 8] 1434 	ld	a, #>(_window_components_on_current_floor)
      00070E CE 00            [ 8] 1435 	adc	a, #0x00
      000710 47               [ 4] 1436 	ld	b, a
      000711 0A               [ 8] 1437 	ld	a, (bc)
      000712 CB 37            [ 8] 1438 	swap	a
      000714 E6 0F            [ 8] 1439 	and	a, #0x0f
      000716 4F               [ 4] 1440 	ld	c, a
      000717 06 00            [ 8] 1441 	ld	b, #0x00
      000719 69               [ 4] 1442 	ld	l, c
      00071A 60               [ 4] 1443 	ld	h, b
      00071B 29               [ 8] 1444 	add	hl, hl
      00071C 29               [ 8] 1445 	add	hl, hl
      00071D 29               [ 8] 1446 	add	hl, hl
      00071E 09               [ 8] 1447 	add	hl, bc
      00071F 11rDBr00         [12] 1448 	ld	de, #_top_info
      000722 19               [ 8] 1449 	add	hl, de
      000723 01 04 00         [12] 1450 	ld	bc, #0x0004
      000726 09               [ 8] 1451 	add	hl, bc
      000727 4D               [ 4] 1452 	ld	c, l
      000728 44               [ 4] 1453 	ld	b, h
      000729 11 05 00         [12] 1454 	ld	de, #0x0005
      00072C D5               [16] 1455 	push	de
      00072D 21 02 00         [12] 1456 	ld	hl, #2
      000730 39               [ 8] 1457 	add	hl, sp
      000731 5D               [ 4] 1458 	ld	e, l
      000732 54               [ 4] 1459 	ld	d, h
      000733 CDr00r00         [24] 1460 	call	___memcpy
                                   1461 ;src/scene.c:372: collider.x += (3 + (i<<2)) << 3;
      000736 F8 00            [12] 1462 	ldhl	sp,	#0
      000738 4E               [ 8] 1463 	ld	c, (hl)
      000739 FAr00r00         [16] 1464 	ld	a, (#_i)
      00073C 87               [ 4] 1465 	add	a, a
      00073D 87               [ 4] 1466 	add	a, a
      00073E C6 03            [ 8] 1467 	add	a, #0x03
      000740 87               [ 4] 1468 	add	a, a
      000741 87               [ 4] 1469 	add	a, a
      000742 87               [ 4] 1470 	add	a, a
      000743 81               [ 4] 1471 	add	a, c
      000744 F8 00            [12] 1472 	ldhl	sp,	#0
                                   1473 ;src/scene.c:373: collider.y += (1 + y_draw) << 3;
      000746 22               [ 8] 1474 	ld	(hl+), a
      000747 4E               [ 8] 1475 	ld	c, (hl)
      000748 F8 07            [12] 1476 	ldhl	sp,	#7
      00074A 2A               [ 8] 1477 	ld	a, (hl+)
      00074B 87               [ 4] 1478 	add	a, a
      00074C 87               [ 4] 1479 	add	a, a
      00074D 87               [ 4] 1480 	add	a, a
      00074E 77               [ 8] 1481 	ld	(hl), a
      00074F 81               [ 4] 1482 	add	a,c
      000750 F8 01            [12] 1483 	ldhl	sp,	#1
      000752 77               [ 8] 1484 	ld	(hl), a
                                   1485 ;src/scene.c:374: rect_list[camera_y_clamped][0x07 & (i<<1 | 0x01)] = collider;
      000753 21r09r00         [12] 1486 	ld	hl, #_camera_y_clamped
      000756 4E               [ 8] 1487 	ld	c, (hl)
      000757 06 00            [ 8] 1488 	ld	b, #0x00
      000759 69               [ 4] 1489 	ld	l, c
      00075A 60               [ 4] 1490 	ld	h, b
      00075B 29               [ 8] 1491 	add	hl, hl
      00075C 29               [ 8] 1492 	add	hl, hl
      00075D 09               [ 8] 1493 	add	hl, bc
      00075E 29               [ 8] 1494 	add	hl, hl
      00075F 29               [ 8] 1495 	add	hl, hl
      000760 29               [ 8] 1496 	add	hl, hl
      000761 01r10r00         [12] 1497 	ld	bc,#_rect_list
      000764 09               [ 8] 1498 	add	hl,bc
      000765 4D               [ 4] 1499 	ld	c, l
      000766 44               [ 4] 1500 	ld	b, h
      000767 FAr00r00         [16] 1501 	ld	a, (#_i)
      00076A 87               [ 4] 1502 	add	a, a
      00076B CB C7            [ 8] 1503 	set	0, a
      00076D E6 07            [ 8] 1504 	and	a, #0x07
      00076F 6F               [ 4] 1505 	ld	l, a
                                   1506 ;	spillPairReg hl
                                   1507 ;	spillPairReg hl
      000770 26 00            [ 8] 1508 	ld	h, #0x00
                                   1509 ;	spillPairReg hl
                                   1510 ;	spillPairReg hl
      000772 5D               [ 4] 1511 	ld	e, l
      000773 54               [ 4] 1512 	ld	d, h
      000774 29               [ 8] 1513 	add	hl, hl
      000775 29               [ 8] 1514 	add	hl, hl
      000776 19               [ 8] 1515 	add	hl, de
      000777 09               [ 8] 1516 	add	hl, bc
      000778 5D               [ 4] 1517 	ld	e, l
      000779 54               [ 4] 1518 	ld	d, h
      00077A 01 05 00         [12] 1519 	ld	bc, #0x0005
      00077D C5               [16] 1520 	push	bc
      00077E 21 02 00         [12] 1521 	ld	hl, #2
      000781 39               [ 8] 1522 	add	hl, sp
      000782 4D               [ 4] 1523 	ld	c, l
      000783 44               [ 4] 1524 	ld	b, h
      000784 CDr00r00         [24] 1525 	call	___memcpy
                                   1526 ;src/scene.c:377: collider = bot_info[window_components_on_current_floor[i] & 0x0F].collider;
      000787 3Er03            [ 8] 1527 	ld	a, #<(_window_components_on_current_floor)
      000789 21r00r00         [12] 1528 	ld	hl, #_i
      00078C 86               [ 8] 1529 	add	a, (hl)
      00078D 4F               [ 4] 1530 	ld	c, a
      00078E 3Es00            [ 8] 1531 	ld	a, #>(_window_components_on_current_floor)
      000790 CE 00            [ 8] 1532 	adc	a, #0x00
      000792 47               [ 4] 1533 	ld	b, a
      000793 0A               [ 8] 1534 	ld	a, (bc)
      000794 E6 0F            [ 8] 1535 	and	a, #0x0f
      000796 4F               [ 4] 1536 	ld	c, a
      000797 06 00            [ 8] 1537 	ld	b, #0x00
      000799 69               [ 4] 1538 	ld	l, c
      00079A 60               [ 4] 1539 	ld	h, b
      00079B 29               [ 8] 1540 	add	hl, hl
      00079C 29               [ 8] 1541 	add	hl, hl
      00079D 29               [ 8] 1542 	add	hl, hl
      00079E 09               [ 8] 1543 	add	hl, bc
      00079F 11rA5r00         [12] 1544 	ld	de, #_bot_info
      0007A2 19               [ 8] 1545 	add	hl, de
      0007A3 01 04 00         [12] 1546 	ld	bc, #0x0004
      0007A6 09               [ 8] 1547 	add	hl, bc
      0007A7 4D               [ 4] 1548 	ld	c, l
      0007A8 44               [ 4] 1549 	ld	b, h
      0007A9 11 05 00         [12] 1550 	ld	de, #0x0005
      0007AC D5               [16] 1551 	push	de
      0007AD 21 02 00         [12] 1552 	ld	hl, #2
      0007B0 39               [ 8] 1553 	add	hl, sp
      0007B1 5D               [ 4] 1554 	ld	e, l
      0007B2 54               [ 4] 1555 	ld	d, h
      0007B3 CDr00r00         [24] 1556 	call	___memcpy
                                   1557 ;src/scene.c:378: collider.x += (3 + (i<<2)) << 3;
      0007B6 F8 00            [12] 1558 	ldhl	sp,	#0
      0007B8 4E               [ 8] 1559 	ld	c, (hl)
      0007B9 FAr00r00         [16] 1560 	ld	a, (#_i)
      0007BC 87               [ 4] 1561 	add	a, a
      0007BD 87               [ 4] 1562 	add	a, a
      0007BE C6 03            [ 8] 1563 	add	a, #0x03
      0007C0 87               [ 4] 1564 	add	a, a
      0007C1 87               [ 4] 1565 	add	a, a
      0007C2 87               [ 4] 1566 	add	a, a
      0007C3 81               [ 4] 1567 	add	a, c
      0007C4 F8 00            [12] 1568 	ldhl	sp,	#0
                                   1569 ;src/scene.c:379: collider.y += (1 + y_draw) << 3;
      0007C6 22               [ 8] 1570 	ld	(hl+), a
      0007C7 7E               [ 8] 1571 	ld	a, (hl)
      0007C8 F8 08            [12] 1572 	ldhl	sp,	#8
      0007CA 86               [ 8] 1573 	add	a, (hl)
      0007CB F8 01            [12] 1574 	ldhl	sp,	#1
      0007CD 77               [ 8] 1575 	ld	(hl), a
                                   1576 ;src/scene.c:380: rect_list[camera_y_clamped][0x07 & (i<<1)] = collider;
      0007CE 21r09r00         [12] 1577 	ld	hl, #_camera_y_clamped
      0007D1 4E               [ 8] 1578 	ld	c, (hl)
      0007D2 06 00            [ 8] 1579 	ld	b, #0x00
      0007D4 69               [ 4] 1580 	ld	l, c
      0007D5 60               [ 4] 1581 	ld	h, b
      0007D6 29               [ 8] 1582 	add	hl, hl
      0007D7 29               [ 8] 1583 	add	hl, hl
      0007D8 09               [ 8] 1584 	add	hl, bc
      0007D9 29               [ 8] 1585 	add	hl, hl
      0007DA 29               [ 8] 1586 	add	hl, hl
      0007DB 29               [ 8] 1587 	add	hl, hl
      0007DC 01r10r00         [12] 1588 	ld	bc,#_rect_list
      0007DF 09               [ 8] 1589 	add	hl,bc
      0007E0 4D               [ 4] 1590 	ld	c, l
      0007E1 44               [ 4] 1591 	ld	b, h
      0007E2 FAr00r00         [16] 1592 	ld	a, (#_i)
      0007E5 87               [ 4] 1593 	add	a, a
      0007E6 F5               [16] 1594 	push	af
      0007E7 07               [ 4] 1595 	rlca
      0007E8 F1               [12] 1596 	pop	af
      0007E9 E6 07            [ 8] 1597 	and	a, #0x07
      0007EB 6F               [ 4] 1598 	ld	l, a
                                   1599 ;	spillPairReg hl
                                   1600 ;	spillPairReg hl
      0007EC 26 00            [ 8] 1601 	ld	h, #0x00
                                   1602 ;	spillPairReg hl
                                   1603 ;	spillPairReg hl
      0007EE 5D               [ 4] 1604 	ld	e, l
      0007EF 54               [ 4] 1605 	ld	d, h
      0007F0 29               [ 8] 1606 	add	hl, hl
      0007F1 29               [ 8] 1607 	add	hl, hl
      0007F2 19               [ 8] 1608 	add	hl, de
      0007F3 09               [ 8] 1609 	add	hl, bc
      0007F4 5D               [ 4] 1610 	ld	e, l
      0007F5 54               [ 4] 1611 	ld	d, h
      0007F6 01 05 00         [12] 1612 	ld	bc, #0x0005
      0007F9 C5               [16] 1613 	push	bc
      0007FA 21 02 00         [12] 1614 	ld	hl, #2
      0007FD 39               [ 8] 1615 	add	hl, sp
      0007FE 4D               [ 4] 1616 	ld	c, l
      0007FF 44               [ 4] 1617 	ld	b, h
      000800 CDr00r00         [24] 1618 	call	___memcpy
                                   1619 ;src/scene.c:384: temp_window.components = window_components_on_current_floor[i];
      000803 3Er03            [ 8] 1620 	ld	a, #<(_window_components_on_current_floor)
      000805 21r00r00         [12] 1621 	ld	hl, #_i
      000808 86               [ 8] 1622 	add	a, (hl)
      000809 4F               [ 4] 1623 	ld	c, a
      00080A 3Es00            [ 8] 1624 	ld	a, #>(_window_components_on_current_floor)
      00080C CE 00            [ 8] 1625 	adc	a, #0x00
      00080E 47               [ 4] 1626 	ld	b, a
      00080F 0A               [ 8] 1627 	ld	a, (bc)
      000810 F8 05            [12] 1628 	ldhl	sp,	#5
                                   1629 ;src/scene.c:385: temp_window.status = 0x00;
      000812 22               [ 8] 1630 	ld	(hl+), a
      000813 36 00            [12] 1631 	ld	(hl), #0x00
                                   1632 ;src/scene.c:388: if((window_components_on_current_floor[i] & 0x0F) == 0x05){
      000815 3Er03            [ 8] 1633 	ld	a, #<(_window_components_on_current_floor)
      000817 21r00r00         [12] 1634 	ld	hl, #_i
      00081A 86               [ 8] 1635 	add	a, (hl)
      00081B 4F               [ 4] 1636 	ld	c, a
      00081C 3Es00            [ 8] 1637 	ld	a, #>(_window_components_on_current_floor)
      00081E CE 00            [ 8] 1638 	adc	a, #0x00
      000820 47               [ 4] 1639 	ld	b, a
      000821 0A               [ 8] 1640 	ld	a, (bc)
      000822 E6 0F            [ 8] 1641 	and	a, #0x0f
      000824 D6 05            [ 8] 1642 	sub	a, #0x05
      000826 20 09            [12] 1643 	jr	NZ, 00111$
                                   1644 ;src/scene.c:389: add_clothes_to_rag(&temp_window);
      000828 21 05 00         [12] 1645 	ld	hl, #5
      00082B 39               [ 8] 1646 	add	hl, sp
      00082C 5D               [ 4] 1647 	ld	e, l
      00082D 54               [ 4] 1648 	ld	d, h
      00082E CDr66r08         [24] 1649 	call	_add_clothes_to_rag
      000831                       1650 00111$:
                                   1651 ;src/scene.c:391: map_components[camera_y_clamped][i] = temp_window;
      000831 21r09r00         [12] 1652 	ld	hl, #_camera_y_clamped
      000834 6E               [ 8] 1653 	ld	l, (hl)
                                   1654 ;	spillPairReg hl
                                   1655 ;	spillPairReg hl
      000835 26 00            [ 8] 1656 	ld	h, #0x00
                                   1657 ;	spillPairReg hl
                                   1658 ;	spillPairReg hl
      000837 29               [ 8] 1659 	add	hl, hl
      000838 29               [ 8] 1660 	add	hl, hl
      000839 29               [ 8] 1661 	add	hl, hl
      00083A 7D               [ 4] 1662 	ld	a, l
      00083B C6rB0            [ 8] 1663 	add	a, #<(_map_components)
      00083D 4F               [ 4] 1664 	ld	c, a
      00083E 7C               [ 4] 1665 	ld	a, h
      00083F CEs00            [ 8] 1666 	adc	a, #>(_map_components)
      000841 47               [ 4] 1667 	ld	b, a
      000842 FAr00r00         [16] 1668 	ld	a, (#_i)
      000845 87               [ 4] 1669 	add	a, a
      000846 81               [ 4] 1670 	add	a, c
      000847 5F               [ 4] 1671 	ld	e, a
      000848 3E 00            [ 8] 1672 	ld	a, #0x00
      00084A 88               [ 4] 1673 	adc	a, b
      00084B 57               [ 4] 1674 	ld	d, a
      00084C 01 02 00         [12] 1675 	ld	bc, #0x0002
      00084F C5               [16] 1676 	push	bc
      000850 21 07 00         [12] 1677 	ld	hl, #7
      000853 39               [ 8] 1678 	add	hl, sp
      000854 4D               [ 4] 1679 	ld	c, l
      000855 44               [ 4] 1680 	ld	b, h
      000856 CDr00r00         [24] 1681 	call	___memcpy
                                   1682 ;src/scene.c:367: for ( i = 0; i < 4; i++)
      000859 21r00r00         [12] 1683 	ld	hl, #_i
      00085C 34               [12] 1684 	inc	(hl)
      00085D 7E               [ 8] 1685 	ld	a, (hl)
      00085E D6 04            [ 8] 1686 	sub	a, #0x04
      000860 DAr05r07         [16] 1687 	jp	C, 00113$
                                   1688 ;src/scene.c:393: }
      000863 E8 09            [16] 1689 	add	sp, #9
      000865 C9               [16] 1690 	ret
                                   1691 ;src/scene.c:395: void add_clothes_to_rag(window_status* temp_window){
                                   1692 ;	---------------------------------
                                   1693 ; Function add_clothes_to_rag
                                   1694 ; ---------------------------------
      000866                       1695 _add_clothes_to_rag::
      000866 E8 F9            [16] 1696 	add	sp, #-7
      000868 F8 04            [12] 1697 	ldhl	sp,	#4
      00086A 7B               [ 4] 1698 	ld	a, e
      00086B 22               [ 8] 1699 	ld	(hl+), a
      00086C 72               [ 8] 1700 	ld	(hl), d
                                   1701 ;src/scene.c:396: if(game_ended_flag) return;
      00086D 21r0Fr00         [12] 1702 	ld	hl, #_game_ended_flag
      000870 CB 46            [12] 1703 	bit	0, (hl)
      000872 C2r06r0A         [16] 1704 	jp	NZ,00123$
                                   1705 ;src/scene.c:397: uint8_t temp_rand = rand();
      000875 CDr00r00         [24] 1706 	call	_rand
      000878 F8 02            [12] 1707 	ldhl	sp,	#2
      00087A 73               [ 8] 1708 	ld	(hl), e
                                   1709 ;src/scene.c:398: uint8_t particle_x = ((3 + (i<<2)) << 3) + 8u;
      00087B FAr00r00         [16] 1710 	ld	a, (#_i)
      00087E 87               [ 4] 1711 	add	a, a
      00087F 87               [ 4] 1712 	add	a, a
      000880 C6 03            [ 8] 1713 	add	a, #0x03
      000882 87               [ 4] 1714 	add	a, a
      000883 87               [ 4] 1715 	add	a, a
      000884 87               [ 4] 1716 	add	a, a
      000885 C6 08            [ 8] 1717 	add	a, #0x08
      000887 F8 01            [12] 1718 	ldhl	sp,	#1
      000889 77               [ 8] 1719 	ld	(hl), a
                                   1720 ;src/scene.c:399: uint8_t particle_y = (((camera_y_clamped << 3) + 5) << 3) + 17u;
      00088A FAr09r00         [16] 1721 	ld	a, (#_camera_y_clamped)
      00088D 87               [ 4] 1722 	add	a, a
      00088E 87               [ 4] 1723 	add	a, a
      00088F 87               [ 4] 1724 	add	a, a
      000890 C6 05            [ 8] 1725 	add	a, #0x05
      000892 87               [ 4] 1726 	add	a, a
      000893 87               [ 4] 1727 	add	a, a
      000894 87               [ 4] 1728 	add	a, a
      000895 C6 11            [ 8] 1729 	add	a, #0x11
      000897 F8 00            [12] 1730 	ldhl	sp,	#0
      000899 77               [ 8] 1731 	ld	(hl), a
                                   1732 ;src/scene.c:401: uint8_t rack_status = 0x00;
      00089A F8 06            [12] 1733 	ldhl	sp,	#6
      00089C 36 00            [12] 1734 	ld	(hl), #0x00
                                   1735 ;src/scene.c:402: if((temp_rand >> 1) & 0x01){
      00089E F8 02            [12] 1736 	ldhl	sp,	#2
      0008A0 7E               [ 8] 1737 	ld	a, (hl)
      0008A1 0F               [ 4] 1738 	rrca
      0008A2 E6 01            [ 8] 1739 	and	a,#0x01
      0008A4 CAr44r09         [16] 1740 	jp	Z, 00107$
                                   1741 ;src/scene.c:404: for(object_sprite = 0; object_sprite < 4; object_sprite++){
      0008A7 23               [ 8] 1742 	inc	hl
      0008A8 36 00            [12] 1743 	ld	(hl), #0x00
      0008AA 1E 00            [ 8] 1744 	ld	e, #0x00
      0008AC                       1745 00119$:
                                   1746 ;src/scene.c:405: if((deactivate_weeds_flag >> (object_sprite << 1)) & 0x03){
      0008AC 7B               [ 4] 1747 	ld	a, e
      0008AD 87               [ 4] 1748 	add	a, a
      0008AE 4F               [ 4] 1749 	ld	c, a
      0008AF 21r38r01         [12] 1750 	ld	hl, #_deactivate_weeds_flag
      0008B2 46               [ 8] 1751 	ld	b, (hl)
      0008B3 0C               [ 4] 1752 	inc	c
      0008B4 18 02            [12] 1753 	jr	00182$
      0008B6                       1754 00181$:
      0008B6 CB 38            [ 8] 1755 	srl	b
      0008B8                       1756 00182$:
      0008B8 0D               [ 4] 1757 	dec	c
      0008B9 20 FB            [12] 1758 	jr	NZ, 00181$
      0008BB 78               [ 4] 1759 	ld	a, b
      0008BC E6 03            [ 8] 1760 	and	a, #0x03
      0008BE 28 7A            [12] 1761 	jr	Z, 00120$
                                   1762 ;src/scene.c:407: deactivate_weeds_flag ^= 0b00000001 << (object_sprite << 1);
      0008C0 F8 03            [12] 1763 	ldhl	sp,	#3
      0008C2 5E               [ 8] 1764 	ld	e, (hl)
      0008C3 7B               [ 4] 1765 	ld	a, e
      0008C4 87               [ 4] 1766 	add	a, a
      0008C5 47               [ 4] 1767 	ld	b, a
      0008C6 3E 01            [ 8] 1768 	ld	a, #0x01
      0008C8 04               [ 4] 1769 	inc	b
      0008C9 18 01            [12] 1770 	jr	00185$
      0008CB                       1771 00184$:
      0008CB 87               [ 4] 1772 	add	a, a
      0008CC                       1773 00185$:
      0008CC 05               [ 4] 1774 	dec	b
      0008CD 20 FC            [12] 1775 	jr	NZ,00184$
      0008CF 21r38r01         [12] 1776 	ld	hl, #_deactivate_weeds_flag
      0008D2 AE               [ 8] 1777 	xor	a, (hl)
      0008D3 77               [ 8] 1778 	ld	(hl), a
                                   1779 ;src/scene.c:408: set_sprite_tile(16 + object_sprite, possible_clothes[(temp_rand & 0x01)]);
      0008D4 F8 02            [12] 1780 	ldhl	sp,	#2
      0008D6 7E               [ 8] 1781 	ld	a, (hl)
      0008D7 E6 01            [ 8] 1782 	and	a, #0x01
      0008D9 4F               [ 4] 1783 	ld	c, a
      0008DA 06 00            [ 8] 1784 	ld	b, #0x00
      0008DC 21r28r01         [12] 1785 	ld	hl, #_possible_clothes
      0008DF 09               [ 8] 1786 	add	hl, bc
      0008E0 4E               [ 8] 1787 	ld	c, (hl)
      0008E1 7B               [ 4] 1788 	ld	a, e
      0008E2 C6 10            [ 8] 1789 	add	a, #0x10
      0008E4 5F               [ 4] 1790 	ld	e, a
      0008E5 F8 06            [12] 1791 	ldhl	sp,	#6
      0008E7 73               [ 8] 1792 	ld	(hl), e
                                   1793 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1804: shadow_OAM[nb].tile=tile;
      0008E8 6E               [ 8] 1794 	ld	l, (hl)
      0008E9 26 00            [ 8] 1795 	ld	h, #0x00
      0008EB 29               [ 8] 1796 	add	hl, hl
      0008EC 29               [ 8] 1797 	add	hl, hl
      0008ED D5               [16] 1798 	push	de
      0008EE 11r00r00         [12] 1799 	ld	de, #_shadow_OAM
      0008F1 19               [ 8] 1800 	add	hl, de
      0008F2 23               [ 8] 1801 	inc	hl
      0008F3 23               [ 8] 1802 	inc	hl
      0008F4 D1               [12] 1803 	pop	de
      0008F5 71               [ 8] 1804 	ld	(hl), c
                                   1805 ;src/scene.c:409: clothes_position[object_sprite] = particle_y;
      0008F6 01r33r01         [12] 1806 	ld	bc, #_clothes_position+0
      0008F9 F8 03            [12] 1807 	ldhl	sp,	#3
      0008FB 6E               [ 8] 1808 	ld	l, (hl)
      0008FC 26 00            [ 8] 1809 	ld	h, #0x00
      0008FE 09               [ 8] 1810 	add	hl, bc
      0008FF 4D               [ 4] 1811 	ld	c, l
      000900 44               [ 4] 1812 	ld	b, h
      000901 F8 00            [12] 1813 	ldhl	sp,	#0
      000903 7E               [ 8] 1814 	ld	a, (hl)
      000904 02               [ 8] 1815 	ld	(bc), a
                                   1816 ;src/scene.c:410: move_sprite(16 + object_sprite, particle_x, particle_y - camera_y);
      000905 7E               [ 8] 1817 	ld	a, (hl)
      000906 21r07r00         [12] 1818 	ld	hl, #_camera_y
      000909 96               [ 8] 1819 	sub	a, (hl)
      00090A 4F               [ 4] 1820 	ld	c, a
                                   1821 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      00090B 6B               [ 4] 1822 	ld	l, e
                                   1823 ;	spillPairReg hl
                                   1824 ;	spillPairReg hl
      00090C 26 00            [ 8] 1825 	ld	h, #0x00
                                   1826 ;	spillPairReg hl
                                   1827 ;	spillPairReg hl
      00090E 29               [ 8] 1828 	add	hl, hl
      00090F 29               [ 8] 1829 	add	hl, hl
      000910 11r00r00         [12] 1830 	ld	de, #_shadow_OAM
      000913 19               [ 8] 1831 	add	hl, de
                                   1832 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1878: itm->y=y, itm->x=x;
      000914 79               [ 4] 1833 	ld	a, c
      000915 22               [ 8] 1834 	ld	(hl+), a
      000916 4D               [ 4] 1835 	ld	c, l
      000917 44               [ 4] 1836 	ld	b, h
      000918 F8 01            [12] 1837 	ldhl	sp,	#1
      00091A 7E               [ 8] 1838 	ld	a, (hl)
      00091B 02               [ 8] 1839 	ld	(bc), a
                                   1840 ;src/scene.c:411: clothes_speed &= ~(0b00000011 << (i<<1));
      00091C FAr00r00         [16] 1841 	ld	a, (#_i)
      00091F 87               [ 4] 1842 	add	a, a
      000920 47               [ 4] 1843 	ld	b, a
      000921 3E 03            [ 8] 1844 	ld	a, #0x03
      000923 04               [ 4] 1845 	inc	b
      000924 18 01            [12] 1846 	jr	00187$
      000926                       1847 00186$:
      000926 87               [ 4] 1848 	add	a, a
      000927                       1849 00187$:
      000927 05               [ 4] 1850 	dec	b
      000928 20 FC            [12] 1851 	jr	NZ,00186$
      00092A 2F               [ 4] 1852 	cpl
      00092B 21r37r01         [12] 1853 	ld	hl, #_clothes_speed
      00092E A6               [ 8] 1854 	and	a, (hl)
      00092F 77               [ 8] 1855 	ld	(hl), a
                                   1856 ;src/scene.c:414: rack_status |= object_sprite;
      000930 F8 03            [12] 1857 	ldhl	sp,	#3
      000932 7E               [ 8] 1858 	ld	a, (hl)
      000933 F6 08            [ 8] 1859 	or	a, #0x08
      000935 F8 06            [12] 1860 	ldhl	sp,	#6
      000937 77               [ 8] 1861 	ld	(hl), a
                                   1862 ;src/scene.c:415: break;
      000938 18 0A            [12] 1863 	jr	00107$
      00093A                       1864 00120$:
                                   1865 ;src/scene.c:404: for(object_sprite = 0; object_sprite < 4; object_sprite++){
      00093A 1C               [ 4] 1866 	inc	e
      00093B F8 03            [12] 1867 	ldhl	sp,	#3
      00093D 73               [ 8] 1868 	ld	(hl), e
      00093E 7B               [ 4] 1869 	ld	a, e
      00093F D6 04            [ 8] 1870 	sub	a, #0x04
      000941 DArACr08         [16] 1871 	jp	C, 00119$
      000944                       1872 00107$:
                                   1873 ;src/scene.c:420: particle_x += 8;
      000944 F8 01            [12] 1874 	ldhl	sp,	#1
      000946 7E               [ 8] 1875 	ld	a, (hl)
      000947 C6 08            [ 8] 1876 	add	a, #0x08
                                   1877 ;src/scene.c:421: if((temp_rand >> 3) & 0x01){
      000949 22               [ 8] 1878 	ld	(hl+), a
      00094A 7E               [ 8] 1879 	ld	a, (hl)
      00094B 0F               [ 4] 1880 	rrca
      00094C 0F               [ 4] 1881 	rrca
      00094D 0F               [ 4] 1882 	rrca
      00094E E6 01            [ 8] 1883 	and	a,#0x01
      000950 CArFAr09         [16] 1884 	jp	Z, 00114$
                                   1885 ;src/scene.c:423: for(object_sprite = 0; object_sprite < 4; object_sprite++){
      000953 0E 00            [ 8] 1886 	ld	c, #0x00
      000955 59               [ 4] 1887 	ld	e, c
      000956                       1888 00121$:
                                   1889 ;src/scene.c:424: if((deactivate_weeds_flag >> (object_sprite << 1)) & 0x03){
      000956 7B               [ 4] 1890 	ld	a, e
      000957 87               [ 4] 1891 	add	a, a
      000958 47               [ 4] 1892 	ld	b, a
      000959 21r38r01         [12] 1893 	ld	hl, #_deactivate_weeds_flag
      00095C 56               [ 8] 1894 	ld	d, (hl)
      00095D 04               [ 4] 1895 	inc	b
      00095E 18 02            [12] 1896 	jr	00189$
      000960                       1897 00188$:
      000960 CB 3A            [ 8] 1898 	srl	d
      000962                       1899 00189$:
      000962 05               [ 4] 1900 	dec	b
      000963 20 FB            [12] 1901 	jr	NZ, 00188$
      000965 7A               [ 4] 1902 	ld	a, d
      000966 E6 03            [ 8] 1903 	and	a, #0x03
      000968 CArF2r09         [16] 1904 	jp	Z,00122$
                                   1905 ;src/scene.c:426: deactivate_weeds_flag ^= 0b00000001 << (object_sprite << 1);
      00096B F8 03            [12] 1906 	ldhl	sp,	#3
      00096D 71               [ 8] 1907 	ld	(hl), c
      00096E 7E               [ 8] 1908 	ld	a, (hl)
      00096F 87               [ 4] 1909 	add	a, a
      000970 47               [ 4] 1910 	ld	b, a
      000971 3E 01            [ 8] 1911 	ld	a, #0x01
      000973 04               [ 4] 1912 	inc	b
      000974 18 01            [12] 1913 	jr	00192$
      000976                       1914 00191$:
      000976 87               [ 4] 1915 	add	a, a
      000977                       1916 00192$:
      000977 05               [ 4] 1917 	dec	b
      000978 20 FC            [12] 1918 	jr	NZ,00191$
      00097A 21r38r01         [12] 1919 	ld	hl, #_deactivate_weeds_flag
      00097D AE               [ 8] 1920 	xor	a, (hl)
      00097E 77               [ 8] 1921 	ld	(hl), a
                                   1922 ;src/scene.c:427: set_sprite_tile(16 + object_sprite, possible_clothes[((temp_rand>>2) & 0x01)]);
      00097F F8 02            [12] 1923 	ldhl	sp,	#2
      000981 7E               [ 8] 1924 	ld	a, (hl)
      000982 0F               [ 4] 1925 	rrca
      000983 0F               [ 4] 1926 	rrca
      000984 E6 01            [ 8] 1927 	and	a, #0x01
      000986 C6r28            [ 8] 1928 	add	a, #<(_possible_clothes)
      000988 5F               [ 4] 1929 	ld	e, a
      000989 3E 00            [ 8] 1930 	ld	a, #0x00
      00098B CEs01            [ 8] 1931 	adc	a, #>(_possible_clothes)
      00098D 57               [ 4] 1932 	ld	d, a
      00098E 1A               [ 8] 1933 	ld	a, (de)
      00098F 22               [ 8] 1934 	ld	(hl+), a
      000990 7E               [ 8] 1935 	ld	a, (hl)
      000991 C6 10            [ 8] 1936 	add	a, #0x10
      000993 77               [ 8] 1937 	ld	(hl), a
                                   1938 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1804: shadow_OAM[nb].tile=tile;
      000994 6E               [ 8] 1939 	ld	l, (hl)
      000995 11r00r00         [12] 1940 	ld	de, #_shadow_OAM+0
                                   1941 ;	spillPairReg hl
                                   1942 ;	spillPairReg hl
      000998 26 00            [ 8] 1943 	ld	h, #0x00
                                   1944 ;	spillPairReg hl
                                   1945 ;	spillPairReg hl
      00099A 29               [ 8] 1946 	add	hl, hl
      00099B 29               [ 8] 1947 	add	hl, hl
      00099C 19               [ 8] 1948 	add	hl, de
      00099D 23               [ 8] 1949 	inc	hl
      00099E 23               [ 8] 1950 	inc	hl
      00099F 5D               [ 4] 1951 	ld	e, l
      0009A0 54               [ 4] 1952 	ld	d, h
      0009A1 F8 02            [12] 1953 	ldhl	sp,	#2
                                   1954 ;src/scene.c:428: clothes_position[object_sprite] = particle_y;
      0009A3 3A               [ 8] 1955 	ld	a, (hl-)
      0009A4 2B               [ 8] 1956 	dec	hl
      0009A5 12               [ 8] 1957 	ld	(de), a
      0009A6 3Er33            [ 8] 1958 	ld	a, #<(_clothes_position)
      0009A8 81               [ 4] 1959 	add	a, c
      0009A9 5F               [ 4] 1960 	ld	e, a
      0009AA 3Es01            [ 8] 1961 	ld	a, #>(_clothes_position)
      0009AC CE 00            [ 8] 1962 	adc	a, #0x00
      0009AE 57               [ 4] 1963 	ld	d, a
      0009AF 7E               [ 8] 1964 	ld	a, (hl)
      0009B0 12               [ 8] 1965 	ld	(de), a
                                   1966 ;src/scene.c:429: move_sprite(16 + object_sprite, particle_x, particle_y - camera_y);
      0009B1 7E               [ 8] 1967 	ld	a, (hl)
      0009B2 21r07r00         [12] 1968 	ld	hl, #_camera_y
      0009B5 96               [ 8] 1969 	sub	a, (hl)
      0009B6 F8 02            [12] 1970 	ldhl	sp,	#2
      0009B8 22               [ 8] 1971 	ld	(hl+), a
                                   1972 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      0009B9 6E               [ 8] 1973 	ld	l, (hl)
      0009BA 11r00r00         [12] 1974 	ld	de, #_shadow_OAM+0
                                   1975 ;	spillPairReg hl
                                   1976 ;	spillPairReg hl
      0009BD 26 00            [ 8] 1977 	ld	h, #0x00
                                   1978 ;	spillPairReg hl
                                   1979 ;	spillPairReg hl
      0009BF 29               [ 8] 1980 	add	hl, hl
      0009C0 29               [ 8] 1981 	add	hl, hl
      0009C1 19               [ 8] 1982 	add	hl, de
      0009C2 5D               [ 4] 1983 	ld	e, l
      0009C3 54               [ 4] 1984 	ld	d, h
                                   1985 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1878: itm->y=y, itm->x=x;
      0009C4 F8 02            [12] 1986 	ldhl	sp,	#2
      0009C6 3A               [ 8] 1987 	ld	a, (hl-)
      0009C7 12               [ 8] 1988 	ld	(de), a
      0009C8 13               [ 8] 1989 	inc	de
      0009C9 7E               [ 8] 1990 	ld	a, (hl)
      0009CA 12               [ 8] 1991 	ld	(de), a
                                   1992 ;src/scene.c:430: clothes_speed &= ~(0b00000011 << (i<<1));
      0009CB FAr00r00         [16] 1993 	ld	a, (#_i)
      0009CE 87               [ 4] 1994 	add	a, a
      0009CF 47               [ 4] 1995 	ld	b, a
      0009D0 3E 03            [ 8] 1996 	ld	a, #0x03
      0009D2 04               [ 4] 1997 	inc	b
      0009D3 18 01            [12] 1998 	jr	00194$
      0009D5                       1999 00193$:
      0009D5 87               [ 4] 2000 	add	a, a
      0009D6                       2001 00194$:
      0009D6 05               [ 4] 2002 	dec	b
      0009D7 20 FC            [12] 2003 	jr	NZ,00193$
      0009D9 2F               [ 4] 2004 	cpl
      0009DA 21r37r01         [12] 2005 	ld	hl, #_clothes_speed
      0009DD A6               [ 8] 2006 	and	a, (hl)
      0009DE 77               [ 8] 2007 	ld	(hl), a
                                   2008 ;src/scene.c:432: rack_status |= 0b00000100;
      0009DF F8 06            [12] 2009 	ldhl	sp,	#6
      0009E1 7E               [ 8] 2010 	ld	a, (hl)
      0009E2 77               [ 8] 2011 	ld	(hl), a
      0009E3 CB D6            [16] 2012 	set	2, (hl)
                                   2013 ;src/scene.c:433: if((rack_status & 0b00001000) == 0x00){
      0009E5 E5               [16] 2014 	push	hl
      0009E6 CB 5E            [12] 2015 	bit	3, (hl)
      0009E8 E1               [12] 2016 	pop	hl
      0009E9 20 0F            [12] 2017 	jr	NZ, 00114$
                                   2018 ;src/scene.c:434: rack_status |= object_sprite;
      0009EB F8 06            [12] 2019 	ldhl	sp,	#6
      0009ED 7E               [ 8] 2020 	ld	a, (hl)
      0009EE B1               [ 4] 2021 	or	a, c
      0009EF 77               [ 8] 2022 	ld	(hl), a
                                   2023 ;src/scene.c:436: break;
      0009F0 18 08            [12] 2024 	jr	00114$
      0009F2                       2025 00122$:
                                   2026 ;src/scene.c:423: for(object_sprite = 0; object_sprite < 4; object_sprite++){
      0009F2 1C               [ 4] 2027 	inc	e
      0009F3 7B               [ 4] 2028 	ld	a,e
      0009F4 4F               [ 4] 2029 	ld	c,a
      0009F5 D6 04            [ 8] 2030 	sub	a, #0x04
      0009F7 DAr56r09         [16] 2031 	jp	C, 00121$
      0009FA                       2032 00114$:
                                   2033 ;src/scene.c:449: temp_window->status = (temp_window->status & 0xF0) | rack_status; 
      0009FA F8 04            [12] 2034 	ldhl	sp,	#4
      0009FC 2A               [ 8] 2035 	ld	a, (hl+)
      0009FD 4F               [ 4] 2036 	ld	c, a
      0009FE 2A               [ 8] 2037 	ld	a, (hl+)
      0009FF 47               [ 4] 2038 	ld	b, a
      000A00 03               [ 8] 2039 	inc	bc
      000A01 0A               [ 8] 2040 	ld	a, (bc)
      000A02 E6 F0            [ 8] 2041 	and	a, #0xf0
      000A04 B6               [ 8] 2042 	or	a, (hl)
      000A05 02               [ 8] 2043 	ld	(bc), a
      000A06                       2044 00123$:
                                   2045 ;src/scene.c:450: }
      000A06 E8 07            [16] 2046 	add	sp, #7
      000A08 C9               [16] 2047 	ret
                                   2048 ;src/scene.c:452: void next_map_gen_step(void){
                                   2049 ;	---------------------------------
                                   2050 ; Function next_map_gen_step
                                   2051 ; ---------------------------------
      000A09                       2052 _next_map_gen_step::
                                   2053 ;src/scene.c:459: if((walker_byte & 0x40) != 0x40){
      000A09 21rD1r00         [12] 2054 	ld	hl, #_walker_byte
      000A0C 4E               [ 8] 2055 	ld	c, (hl)
      000A0D 06 00            [ 8] 2056 	ld	b, #0x00
      000A0F 79               [ 4] 2057 	ld	a, c
      000A10 E6 40            [ 8] 2058 	and	a, #0x40
      000A12 5F               [ 4] 2059 	ld	e, a
      000A13 16 00            [ 8] 2060 	ld	d, #0x00
      000A15 7B               [ 4] 2061 	ld	a, e
      000A16 D6 40            [ 8] 2062 	sub	a, #0x40
      000A18 B2               [ 4] 2063 	or	a, d
                                   2064 ;src/scene.c:461: update_walker();
      000A19 C2r2Fr0A         [16] 2065 	jp	NZ,_update_walker
                                   2066 ;src/scene.c:462: } else if((walker_byte & 0x4F) != 0x4F){
      000A1C 79               [ 4] 2067 	ld	a, c
      000A1D E6 4F            [ 8] 2068 	and	a, #0x4f
      000A1F 4F               [ 4] 2069 	ld	c, a
      000A20 06 00            [ 8] 2070 	ld	b, #0x00
      000A22 79               [ 4] 2071 	ld	a, c
      000A23 D6 4F            [ 8] 2072 	sub	a, #0x4f
      000A25 B0               [ 4] 2073 	or	a, b
                                   2074 ;src/scene.c:464: fill_window();
      000A26 C2rDCr0B         [16] 2075 	jp	NZ,_fill_window
                                   2076 ;src/scene.c:467: mend_incorrect_windows();
      000A29 CDr49r0C         [24] 2077 	call	_mend_incorrect_windows
                                   2078 ;src/scene.c:469: fill_memory();
                                   2079 ;src/scene.c:471: }
      000A2C C3r99r0C         [16] 2080 	jp	_fill_memory
                                   2081 ;src/scene.c:473: void update_walker(void){
                                   2082 ;	---------------------------------
                                   2083 ; Function update_walker
                                   2084 ; ---------------------------------
      000A2F                       2085 _update_walker::
      000A2F E8 FC            [16] 2086 	add	sp, #-4
                                   2087 ;src/scene.c:475: if(!(walker_byte & 0x0F)){
      000A31 21rD1r00         [12] 2088 	ld	hl, #_walker_byte
      000A34 4E               [ 8] 2089 	ld	c, (hl)
      000A35 79               [ 4] 2090 	ld	a, c
      000A36 E6 0F            [ 8] 2091 	and	a, #0x0f
      000A38 20 4D            [12] 2092 	jr	NZ, 00118$
                                   2093 ;src/scene.c:476: walker_byte |= (0x01 << (CURRENT_WINDOW & 0x03));
      000A3A 21rD1r00         [12] 2094 	ld	hl, #_walker_byte
      000A3D 7E               [ 8] 2095 	ld	a, (hl)
      000A3E CB 37            [ 8] 2096 	swap	a
      000A40 E6 03            [ 8] 2097 	and	a, #0x3
      000A42 47               [ 4] 2098 	ld	b, a
      000A43 3E 01            [ 8] 2099 	ld	a, #0x01
      000A45 04               [ 4] 2100 	inc	b
      000A46 18 01            [12] 2101 	jr	00174$
      000A48                       2102 00173$:
      000A48 87               [ 4] 2103 	add	a, a
      000A49                       2104 00174$:
      000A49 05               [ 4] 2105 	dec	b
      000A4A 20 FC            [12] 2106 	jr	NZ,00173$
      000A4C B6               [ 8] 2107 	or	a, (hl)
                                   2108 ;src/scene.c:477: window_components_on_current_floor[CURRENT_WINDOW & 0x03] = (traversable_bots[rand() & 0x03]) | ((bulky_tops[rand() & 0x03]) << 4);
      000A4D 77               [ 8] 2109 	ld	(hl), a
      000A4E CB 37            [ 8] 2110 	swap	a
      000A50 E6 03            [ 8] 2111 	and	a, #0x3
      000A52 4F               [ 4] 2112 	ld	c, a
      000A53 06 00            [ 8] 2113 	ld	b, #0x00
      000A55 21r03r00         [12] 2114 	ld	hl, #_window_components_on_current_floor
      000A58 09               [ 8] 2115 	add	hl, bc
      000A59 E5               [16] 2116 	push	hl
      000A5A CDr00r00         [24] 2117 	call	_rand
      000A5D 7B               [ 4] 2118 	ld	a, e
      000A5E C1               [12] 2119 	pop	bc
      000A5F E6 03            [ 8] 2120 	and	a, #0x03
      000A61 5F               [ 4] 2121 	ld	e, a
      000A62 16 00            [ 8] 2122 	ld	d, #0x00
      000A64 21r08r01         [12] 2123 	ld	hl, #_traversable_bots
      000A67 19               [ 8] 2124 	add	hl, de
      000A68 5E               [ 8] 2125 	ld	e, (hl)
      000A69 C5               [16] 2126 	push	bc
      000A6A D5               [16] 2127 	push	de
      000A6B CDr00r00         [24] 2128 	call	_rand
      000A6E 6B               [ 4] 2129 	ld	l, e
                                   2130 ;	spillPairReg hl
                                   2131 ;	spillPairReg hl
      000A6F D1               [12] 2132 	pop	de
      000A70 C1               [12] 2133 	pop	bc
                                   2134 ;	spillPairReg hl
                                   2135 ;	spillPairReg hl
      000A71 7D               [ 4] 2136 	ld	a, l
      000A72 E6 03            [ 8] 2137 	and	a, #0x03
      000A74 16 00            [ 8] 2138 	ld	d, #0x00
      000A76 C6r14            [ 8] 2139 	add	a, #<(_bulky_tops)
      000A78 6F               [ 4] 2140 	ld	l, a
                                   2141 ;	spillPairReg hl
                                   2142 ;	spillPairReg hl
      000A79 7A               [ 4] 2143 	ld	a, d
      000A7A CEs01            [ 8] 2144 	adc	a, #>(_bulky_tops)
      000A7C 67               [ 4] 2145 	ld	h, a
                                   2146 ;	spillPairReg hl
                                   2147 ;	spillPairReg hl
      000A7D 7E               [ 8] 2148 	ld	a, (hl)
      000A7E CB 37            [ 8] 2149 	swap	a
      000A80 E6 F0            [ 8] 2150 	and	a, #0xf0
      000A82 B3               [ 4] 2151 	or	a, e
      000A83 02               [ 8] 2152 	ld	(bc), a
      000A84 C3rD9r0B         [16] 2153 	jp	00120$
      000A87                       2154 00118$:
                                   2155 ;src/scene.c:481: else if(((CURRENT_WINDOW & 0x01) && ((VISITED_WINDOWS & 0x05) == 0x05)) || (!(CURRENT_WINDOW & 0x01) && ((VISITED_WINDOWS & 0x0A) == 0x0A))){
      000A87 FArD1r00         [16] 2156 	ld	a, (#_walker_byte)
      000A8A CB 37            [ 8] 2157 	swap	a
      000A8C E6 01            [ 8] 2158 	and	a, #0x01
      000A8E 47               [ 4] 2159 	ld	b, a
      000A8F B7               [ 4] 2160 	or	a, a
      000A90 28 07            [12] 2161 	jr	Z, 00116$
      000A92 79               [ 4] 2162 	ld	a, c
      000A93 E6 05            [ 8] 2163 	and	a, #0x05
      000A95 D6 05            [ 8] 2164 	sub	a, #0x05
      000A97 28 0B            [12] 2165 	jr	Z, 00111$
      000A99                       2166 00116$:
      000A99 78               [ 4] 2167 	ld	a, b
      000A9A B7               [ 4] 2168 	or	a, a
      000A9B 20 3D            [12] 2169 	jr	NZ, 00112$
      000A9D 79               [ 4] 2170 	ld	a, c
      000A9E E6 0A            [ 8] 2171 	and	a, #0x0a
      000AA0 D6 0A            [ 8] 2172 	sub	a, #0x0a
      000AA2 20 36            [12] 2173 	jr	NZ, 00112$
      000AA4                       2174 00111$:
                                   2175 ;src/scene.c:482: walker_byte |= 0x40;
      000AA4 21rD1r00         [12] 2176 	ld	hl, #_walker_byte
      000AA7 7E               [ 8] 2177 	ld	a, (hl)
      000AA8 F6 40            [ 8] 2178 	or	a, #0x40
                                   2179 ;src/scene.c:483: window_components_on_current_floor[CURRENT_WINDOW & 0x03] = (window_components_on_current_floor[CURRENT_WINDOW & 0x03] & 0x0F) | (uint8_t)((traversable_tops[(rand() & 0x03)]) << 4);   
      000AAA 77               [ 8] 2180 	ld	(hl), a
      000AAB 11r03r00         [12] 2181 	ld	de, #_window_components_on_current_floor+0
      000AAE CB 37            [ 8] 2182 	swap	a
      000AB0 E6 03            [ 8] 2183 	and	a, #0x3
      000AB2 6F               [ 4] 2184 	ld	l, a
                                   2185 ;	spillPairReg hl
                                   2186 ;	spillPairReg hl
      000AB3 26 00            [ 8] 2187 	ld	h, #0x00
                                   2188 ;	spillPairReg hl
                                   2189 ;	spillPairReg hl
      000AB5 19               [ 8] 2190 	add	hl, de
      000AB6 4D               [ 4] 2191 	ld	c, l
      000AB7 44               [ 4] 2192 	ld	b, h
      000AB8 0A               [ 8] 2193 	ld	a, (bc)
      000AB9 E6 0F            [ 8] 2194 	and	a, #0x0f
      000ABB 5F               [ 4] 2195 	ld	e, a
      000ABC C5               [16] 2196 	push	bc
      000ABD D5               [16] 2197 	push	de
      000ABE CDr00r00         [24] 2198 	call	_rand
      000AC1 6B               [ 4] 2199 	ld	l, e
                                   2200 ;	spillPairReg hl
                                   2201 ;	spillPairReg hl
      000AC2 D1               [12] 2202 	pop	de
      000AC3 C1               [12] 2203 	pop	bc
                                   2204 ;	spillPairReg hl
                                   2205 ;	spillPairReg hl
      000AC4 7D               [ 4] 2206 	ld	a, l
      000AC5 E6 03            [ 8] 2207 	and	a, #0x03
      000AC7 16 00            [ 8] 2208 	ld	d, #0x00
      000AC9 C6r0C            [ 8] 2209 	add	a, #<(_traversable_tops)
      000ACB 6F               [ 4] 2210 	ld	l, a
                                   2211 ;	spillPairReg hl
                                   2212 ;	spillPairReg hl
      000ACC 7A               [ 4] 2213 	ld	a, d
      000ACD CEs01            [ 8] 2214 	adc	a, #>(_traversable_tops)
      000ACF 67               [ 4] 2215 	ld	h, a
                                   2216 ;	spillPairReg hl
                                   2217 ;	spillPairReg hl
      000AD0 7E               [ 8] 2218 	ld	a, (hl)
      000AD1 CB 37            [ 8] 2219 	swap	a
      000AD3 E6 F0            [ 8] 2220 	and	a, #0xf0
      000AD5 B3               [ 4] 2221 	or	a, e
      000AD6 02               [ 8] 2222 	ld	(bc), a
      000AD7 C3rD9r0B         [16] 2223 	jp	00120$
      000ADA                       2224 00112$:
                                   2225 ;src/scene.c:487: else if(TURNING_PROB < (UBYTE)rand()){
      000ADA CDr00r00         [24] 2226 	call	_rand
      000ADD 3E AF            [ 8] 2227 	ld	a, #0xaf
      000ADF 93               [ 4] 2228 	sub	a, e
      000AE0 30 36            [12] 2229 	jr	NC, 00109$
                                   2230 ;src/scene.c:489: walker_byte |= 0x40;
      000AE2 21rD1r00         [12] 2231 	ld	hl, #_walker_byte
      000AE5 7E               [ 8] 2232 	ld	a, (hl)
      000AE6 F6 40            [ 8] 2233 	or	a, #0x40
                                   2234 ;src/scene.c:490: window_components_on_current_floor[CURRENT_WINDOW & 0x03] = (window_components_on_current_floor[CURRENT_WINDOW & 0x03] & 0x0F) | (uint8_t)((traversable_tops[(rand() & 0x03)]) << 4);
      000AE8 77               [ 8] 2235 	ld	(hl), a
      000AE9 CB 37            [ 8] 2236 	swap	a
      000AEB E6 03            [ 8] 2237 	and	a, #0x3
      000AED 4F               [ 4] 2238 	ld	c, a
      000AEE 06 00            [ 8] 2239 	ld	b, #0x00
      000AF0 21r03r00         [12] 2240 	ld	hl, #_window_components_on_current_floor
      000AF3 09               [ 8] 2241 	add	hl, bc
      000AF4 4D               [ 4] 2242 	ld	c, l
      000AF5 44               [ 4] 2243 	ld	b, h
      000AF6 0A               [ 8] 2244 	ld	a, (bc)
      000AF7 E6 0F            [ 8] 2245 	and	a, #0x0f
      000AF9 5F               [ 4] 2246 	ld	e, a
      000AFA C5               [16] 2247 	push	bc
      000AFB D5               [16] 2248 	push	de
      000AFC CDr00r00         [24] 2249 	call	_rand
      000AFF 6B               [ 4] 2250 	ld	l, e
                                   2251 ;	spillPairReg hl
                                   2252 ;	spillPairReg hl
      000B00 D1               [12] 2253 	pop	de
      000B01 C1               [12] 2254 	pop	bc
                                   2255 ;	spillPairReg hl
                                   2256 ;	spillPairReg hl
      000B02 7D               [ 4] 2257 	ld	a, l
      000B03 E6 03            [ 8] 2258 	and	a, #0x03
      000B05 16 00            [ 8] 2259 	ld	d, #0x00
      000B07 C6r0C            [ 8] 2260 	add	a, #<(_traversable_tops)
      000B09 6F               [ 4] 2261 	ld	l, a
                                   2262 ;	spillPairReg hl
                                   2263 ;	spillPairReg hl
      000B0A 7A               [ 4] 2264 	ld	a, d
      000B0B CEs01            [ 8] 2265 	adc	a, #>(_traversable_tops)
      000B0D 67               [ 4] 2266 	ld	h, a
                                   2267 ;	spillPairReg hl
                                   2268 ;	spillPairReg hl
      000B0E 7E               [ 8] 2269 	ld	a, (hl)
      000B0F CB 37            [ 8] 2270 	swap	a
      000B11 E6 F0            [ 8] 2271 	and	a, #0xf0
      000B13 B3               [ 4] 2272 	or	a, e
      000B14 02               [ 8] 2273 	ld	(bc), a
      000B15 C3rD9r0B         [16] 2274 	jp	00120$
      000B18                       2275 00109$:
                                   2276 ;src/scene.c:494: if((rand() & 0x01) && !((VISITED_WINDOWS >> ((CURRENT_WINDOW + 1) & 0x03)) & 0x01)) { //if we want to go right and right is empty
      000B18 CDr00r00         [24] 2277 	call	_rand
                                   2278 ;src/scene.c:476: walker_byte |= (0x01 << (CURRENT_WINDOW & 0x03));
      000B1B FArD1r00         [16] 2279 	ld	a, (#_walker_byte)
      000B1E CB 37            [ 8] 2280 	swap	a
      000B20 E6 0F            [ 8] 2281 	and	a, #0x0f
      000B22 F8 00            [12] 2282 	ldhl	sp,	#0
      000B24 77               [ 8] 2283 	ld	(hl), a
                                   2284 ;src/scene.c:496: walker_byte = (walker_byte & 0xCF) | (((CURRENT_WINDOW + 1) & 0x03) << 4);
      000B25 21rD1r00         [12] 2285 	ld	hl, #_walker_byte
      000B28 4E               [ 8] 2286 	ld	c, (hl)
                                   2287 ;src/scene.c:499: walker_byte = (walker_byte & 0xCF) | (((CURRENT_WINDOW - 1) & 0x03) << 4);
      000B29 F8 00            [12] 2288 	ldhl	sp,	#0
      000B2B 2A               [ 8] 2289 	ld	a, (hl+)
                                   2290 ;src/scene.c:496: walker_byte = (walker_byte & 0xCF) | (((CURRENT_WINDOW + 1) & 0x03) << 4);
      000B2C 22               [ 8] 2291 	ld	(hl+), a
      000B2D 79               [ 4] 2292 	ld	a, c
      000B2E E6 CF            [ 8] 2293 	and	a, #0xcf
      000B30 32               [ 8] 2294 	ld	(hl-), a
      000B31 2A               [ 8] 2295 	ld	a, (hl+)
      000B32 3C               [ 4] 2296 	inc	a
      000B33 CB 37            [ 8] 2297 	swap	a
      000B35 E6 30            [ 8] 2298 	and	a, #0x30
      000B37 B6               [ 8] 2299 	or	a, (hl)
      000B38 23               [ 8] 2300 	inc	hl
      000B39 77               [ 8] 2301 	ld	(hl), a
                                   2302 ;src/scene.c:494: if((rand() & 0x01) && !((VISITED_WINDOWS >> ((CURRENT_WINDOW + 1) & 0x03)) & 0x01)) { //if we want to go right and right is empty
      000B3A CB 43            [ 8] 2303 	bit	0, e
      000B3C 28 1F            [12] 2304 	jr	Z, 00105$
      000B3E F8 00            [12] 2305 	ldhl	sp,	#0
      000B40 7E               [ 8] 2306 	ld	a, (hl)
      000B41 3C               [ 4] 2307 	inc	a
      000B42 E6 03            [ 8] 2308 	and	a, #0x03
      000B44 4F               [ 4] 2309 	ld	c, a
      000B45 21rD1r00         [12] 2310 	ld	hl, #_walker_byte
      000B48 46               [ 8] 2311 	ld	b, (hl)
      000B49 0C               [ 4] 2312 	inc	c
      000B4A 18 02            [12] 2313 	jr	00180$
      000B4C                       2314 00179$:
      000B4C CB 38            [ 8] 2315 	srl	b
      000B4E                       2316 00180$:
      000B4E 0D               [ 4] 2317 	dec	c
      000B4F 20 FB            [12] 2318 	jr	NZ, 00179$
      000B51 CB 40            [ 8] 2319 	bit	0, b
      000B53 20 08            [12] 2320 	jr	NZ, 00105$
                                   2321 ;src/scene.c:496: walker_byte = (walker_byte & 0xCF) | (((CURRENT_WINDOW + 1) & 0x03) << 4);
      000B55 F8 03            [12] 2322 	ldhl	sp,	#3
      000B57 7E               [ 8] 2323 	ld	a, (hl)
      000B58 EArD1r00         [16] 2324 	ld	(#_walker_byte),a
      000B5B 18 31            [12] 2325 	jr	00106$
      000B5D                       2326 00105$:
                                   2327 ;src/scene.c:497: } else if (!((VISITED_WINDOWS >> ((CURRENT_WINDOW - 1) & 0x03)) & 0x01)){ //if left is empty
      000B5D F8 00            [12] 2328 	ldhl	sp,	#0
      000B5F 7E               [ 8] 2329 	ld	a, (hl)
      000B60 3D               [ 4] 2330 	dec	a
      000B61 E6 03            [ 8] 2331 	and	a, #0x03
      000B63 4F               [ 4] 2332 	ld	c, a
      000B64 21rD1r00         [12] 2333 	ld	hl, #_walker_byte
      000B67 46               [ 8] 2334 	ld	b, (hl)
      000B68 0C               [ 4] 2335 	inc	c
      000B69 18 02            [12] 2336 	jr	00184$
      000B6B                       2337 00183$:
      000B6B CB 38            [ 8] 2338 	srl	b
      000B6D                       2339 00184$:
      000B6D 0D               [ 4] 2340 	dec	c
      000B6E 20 FB            [12] 2341 	jr	NZ, 00183$
      000B70 CB 40            [ 8] 2342 	bit	0, b
      000B72 20 14            [12] 2343 	jr	NZ, 00102$
                                   2344 ;src/scene.c:499: walker_byte = (walker_byte & 0xCF) | (((CURRENT_WINDOW - 1) & 0x03) << 4);
      000B74 F8 01            [12] 2345 	ldhl	sp,	#1
      000B76 2A               [ 8] 2346 	ld	a, (hl+)
      000B77 23               [ 8] 2347 	inc	hl
      000B78 3D               [ 4] 2348 	dec	a
      000B79 E6 03            [ 8] 2349 	and	a, #0x03
      000B7B 77               [ 8] 2350 	ld	(hl), a
      000B7C CB 37            [ 8] 2351 	swap	a
      000B7E E6 F0            [ 8] 2352 	and	a, #0xf0
      000B80 32               [ 8] 2353 	ld	(hl-), a
      000B81 2A               [ 8] 2354 	ld	a, (hl+)
      000B82 B6               [ 8] 2355 	or	a, (hl)
      000B83 EArD1r00         [16] 2356 	ld	(#_walker_byte),a
      000B86 18 06            [12] 2357 	jr	00106$
      000B88                       2358 00102$:
                                   2359 ;src/scene.c:502: walker_byte = (walker_byte & 0xCF) | (((CURRENT_WINDOW + 1) & 0x03) << 4);
      000B88 F8 03            [12] 2360 	ldhl	sp,	#3
      000B8A 7E               [ 8] 2361 	ld	a, (hl)
      000B8B EArD1r00         [16] 2362 	ld	(#_walker_byte),a
      000B8E                       2363 00106$:
                                   2364 ;src/scene.c:504: walker_byte |= (0x01 << CURRENT_WINDOW);
      000B8E 21rD1r00         [12] 2365 	ld	hl, #_walker_byte
      000B91 7E               [ 8] 2366 	ld	a, (hl)
      000B92 CB 37            [ 8] 2367 	swap	a
      000B94 E6 0F            [ 8] 2368 	and	a, #0x0f
      000B96 47               [ 4] 2369 	ld	b, a
      000B97 3E 01            [ 8] 2370 	ld	a, #0x01
      000B99 04               [ 4] 2371 	inc	b
      000B9A 18 01            [12] 2372 	jr	00188$
      000B9C                       2373 00187$:
      000B9C 87               [ 4] 2374 	add	a, a
      000B9D                       2375 00188$:
      000B9D 05               [ 4] 2376 	dec	b
      000B9E 20 FC            [12] 2377 	jr	NZ,00187$
      000BA0 B6               [ 8] 2378 	or	a, (hl)
                                   2379 ;src/scene.c:505: window_components_on_current_floor[CURRENT_WINDOW & 0x03] = (bulky_bots[rand() & 0x03]) | ((bulky_tops[rand() & 0x03]) << 4);
      000BA1 77               [ 8] 2380 	ld	(hl), a
      000BA2 CB 37            [ 8] 2381 	swap	a
      000BA4 E6 03            [ 8] 2382 	and	a, #0x3
      000BA6 0E 00            [ 8] 2383 	ld	c, #0x00
      000BA8 C6r03            [ 8] 2384 	add	a, #<(_window_components_on_current_floor)
      000BAA 5F               [ 4] 2385 	ld	e, a
      000BAB 79               [ 4] 2386 	ld	a, c
      000BAC CEs00            [ 8] 2387 	adc	a, #>(_window_components_on_current_floor)
      000BAE 57               [ 4] 2388 	ld	d, a
      000BAF D5               [16] 2389 	push	de
      000BB0 CDr00r00         [24] 2390 	call	_rand
      000BB3 7B               [ 4] 2391 	ld	a, e
      000BB4 D1               [12] 2392 	pop	de
      000BB5 E6 03            [ 8] 2393 	and	a, #0x03
      000BB7 6F               [ 4] 2394 	ld	l, a
                                   2395 ;	spillPairReg hl
                                   2396 ;	spillPairReg hl
      000BB8 26 00            [ 8] 2397 	ld	h, #0x00
                                   2398 ;	spillPairReg hl
                                   2399 ;	spillPairReg hl
      000BBA 01r10r01         [12] 2400 	ld	bc, #_bulky_bots
      000BBD 09               [ 8] 2401 	add	hl, bc
      000BBE 4E               [ 8] 2402 	ld	c, (hl)
      000BBF C5               [16] 2403 	push	bc
      000BC0 D5               [16] 2404 	push	de
      000BC1 CDr00r00         [24] 2405 	call	_rand
      000BC4 7B               [ 4] 2406 	ld	a, e
      000BC5 D1               [12] 2407 	pop	de
      000BC6 C1               [12] 2408 	pop	bc
      000BC7 E6 03            [ 8] 2409 	and	a, #0x03
      000BC9 06 00            [ 8] 2410 	ld	b, #0x00
      000BCB C6r14            [ 8] 2411 	add	a, #<(_bulky_tops)
      000BCD 6F               [ 4] 2412 	ld	l, a
                                   2413 ;	spillPairReg hl
                                   2414 ;	spillPairReg hl
      000BCE 78               [ 4] 2415 	ld	a, b
      000BCF CEs01            [ 8] 2416 	adc	a, #>(_bulky_tops)
      000BD1 67               [ 4] 2417 	ld	h, a
                                   2418 ;	spillPairReg hl
                                   2419 ;	spillPairReg hl
      000BD2 7E               [ 8] 2420 	ld	a, (hl)
      000BD3 CB 37            [ 8] 2421 	swap	a
      000BD5 E6 F0            [ 8] 2422 	and	a, #0xf0
      000BD7 B1               [ 4] 2423 	or	a, c
      000BD8 12               [ 8] 2424 	ld	(de), a
      000BD9                       2425 00120$:
                                   2426 ;src/scene.c:507: }
      000BD9 E8 04            [16] 2427 	add	sp, #4
      000BDB C9               [16] 2428 	ret
                                   2429 ;src/scene.c:509: void fill_window(void){
                                   2430 ;	---------------------------------
                                   2431 ; Function fill_window
                                   2432 ; ---------------------------------
      000BDC                       2433 _fill_window::
                                   2434 ;src/scene.c:511: for ( i = 0; i < 4; i++){
      000BDC 21r00r00         [12] 2435 	ld	hl, #_i
      000BDF 36 00            [12] 2436 	ld	(hl), #0x00
      000BE1                       2437 00105$:
                                   2438 ;src/scene.c:512: if((VISITED_WINDOWS >> i) & 0x01) {
      000BE1 FAr00r00         [16] 2439 	ld	a, (#_i)
      000BE4 F5               [16] 2440 	push	af
      000BE5 21rD1r00         [12] 2441 	ld	hl, #_walker_byte
      000BE8 4E               [ 8] 2442 	ld	c, (hl)
      000BE9 F1               [12] 2443 	pop	af
      000BEA 3C               [ 4] 2444 	inc	a
      000BEB 18 02            [12] 2445 	jr	00123$
      000BED                       2446 00122$:
      000BED CB 39            [ 8] 2447 	srl	c
      000BEF                       2448 00123$:
      000BEF 3D               [ 4] 2449 	dec	a
      000BF0 20 FB            [12] 2450 	jr	NZ, 00122$
      000BF2 CB 41            [ 8] 2451 	bit	0, c
      000BF4 20 49            [12] 2452 	jr	NZ, 00103$
                                   2453 ;src/scene.c:515: window_components_on_current_floor[i] = (all_bots[rand() & 0x07]) | ((all_tops[rand() & 0x07]) << 4);
      000BF6 01r03r00         [12] 2454 	ld	bc, #_window_components_on_current_floor+0
      000BF9 79               [ 4] 2455 	ld	a, c
      000BFA 21r00r00         [12] 2456 	ld	hl, #_i
      000BFD 86               [ 8] 2457 	add	a, (hl)
      000BFE 4F               [ 4] 2458 	ld	c, a
      000BFF 30 01            [12] 2459 	jr	NC, 00126$
      000C01 04               [ 4] 2460 	inc	b
      000C02                       2461 00126$:
      000C02 C5               [16] 2462 	push	bc
      000C03 CDr00r00         [24] 2463 	call	_rand
      000C06 7B               [ 4] 2464 	ld	a, e
      000C07 C1               [12] 2465 	pop	bc
      000C08 E6 07            [ 8] 2466 	and	a, #0x07
      000C0A 6F               [ 4] 2467 	ld	l, a
                                   2468 ;	spillPairReg hl
                                   2469 ;	spillPairReg hl
      000C0B 26 00            [ 8] 2470 	ld	h, #0x00
                                   2471 ;	spillPairReg hl
                                   2472 ;	spillPairReg hl
      000C0D 11r20r01         [12] 2473 	ld	de, #_all_bots
      000C10 19               [ 8] 2474 	add	hl, de
      000C11 5E               [ 8] 2475 	ld	e, (hl)
      000C12 C5               [16] 2476 	push	bc
      000C13 D5               [16] 2477 	push	de
      000C14 CDr00r00         [24] 2478 	call	_rand
      000C17 7B               [ 4] 2479 	ld	a, e
      000C18 D1               [12] 2480 	pop	de
      000C19 C1               [12] 2481 	pop	bc
      000C1A E6 07            [ 8] 2482 	and	a, #0x07
      000C1C 16 00            [ 8] 2483 	ld	d, #0x00
      000C1E C6r18            [ 8] 2484 	add	a, #<(_all_tops)
      000C20 6F               [ 4] 2485 	ld	l, a
                                   2486 ;	spillPairReg hl
                                   2487 ;	spillPairReg hl
      000C21 7A               [ 4] 2488 	ld	a, d
      000C22 CEs01            [ 8] 2489 	adc	a, #>(_all_tops)
      000C24 67               [ 4] 2490 	ld	h, a
                                   2491 ;	spillPairReg hl
                                   2492 ;	spillPairReg hl
      000C25 7E               [ 8] 2493 	ld	a, (hl)
      000C26 CB 37            [ 8] 2494 	swap	a
      000C28 E6 F0            [ 8] 2495 	and	a, #0xf0
      000C2A B3               [ 4] 2496 	or	a, e
      000C2B 02               [ 8] 2497 	ld	(bc), a
                                   2498 ;src/scene.c:516: walker_byte |= (0x01 << i);
      000C2C 21r00r00         [12] 2499 	ld	hl, #_i
      000C2F 46               [ 8] 2500 	ld	b, (hl)
      000C30 3E 01            [ 8] 2501 	ld	a, #0x01
      000C32 04               [ 4] 2502 	inc	b
      000C33 18 01            [12] 2503 	jr	00128$
      000C35                       2504 00127$:
      000C35 87               [ 4] 2505 	add	a, a
      000C36                       2506 00128$:
      000C36 05               [ 4] 2507 	dec	b
      000C37 20 FC            [12] 2508 	jr	NZ,00127$
      000C39 21rD1r00         [12] 2509 	ld	hl, #_walker_byte
      000C3C B6               [ 8] 2510 	or	a, (hl)
      000C3D 77               [ 8] 2511 	ld	(hl), a
                                   2512 ;src/scene.c:517: return;
      000C3E C9               [16] 2513 	ret
      000C3F                       2514 00103$:
                                   2515 ;src/scene.c:511: for ( i = 0; i < 4; i++){
      000C3F 21r00r00         [12] 2516 	ld	hl, #_i
      000C42 34               [12] 2517 	inc	(hl)
      000C43 7E               [ 8] 2518 	ld	a, (hl)
      000C44 D6 04            [ 8] 2519 	sub	a, #0x04
      000C46 38 99            [12] 2520 	jr	C, 00105$
                                   2521 ;src/scene.c:519: }
      000C48 C9               [16] 2522 	ret
                                   2523 ;src/scene.c:521: void mend_incorrect_windows(void){
                                   2524 ;	---------------------------------
                                   2525 ; Function mend_incorrect_windows
                                   2526 ; ---------------------------------
      000C49                       2527 _mend_incorrect_windows::
      000C49 3B               [ 8] 2528 	dec	sp
                                   2529 ;src/scene.c:522: if(malloc_i == 4){
      000C4A FArD2r00         [16] 2530 	ld	a, (#_malloc_i)
      000C4D D6 04            [ 8] 2531 	sub	a, #0x04
      000C4F 28 46            [12] 2532 	jr	Z, 00108$
                                   2533 ;src/scene.c:523: return;
                                   2534 ;src/scene.c:526: if(window_components_on_current_floor[malloc_i] == 0x45){
      000C51 01r03r00         [12] 2535 	ld	bc, #_window_components_on_current_floor+0
      000C54 79               [ 4] 2536 	ld	a, c
      000C55 21rD2r00         [12] 2537 	ld	hl, #_malloc_i
      000C58 86               [ 8] 2538 	add	a, (hl)
      000C59 4F               [ 4] 2539 	ld	c, a
      000C5A 30 01            [12] 2540 	jr	NC, 00140$
      000C5C 04               [ 4] 2541 	inc	b
      000C5D                       2542 00140$:
      000C5D 0A               [ 8] 2543 	ld	a, (bc)
      000C5E F8 00            [12] 2544 	ldhl	sp,	#0
      000C60 77               [ 8] 2545 	ld	(hl), a
      000C61 D6 45            [ 8] 2546 	sub	a, #0x45
      000C63 20 05            [12] 2547 	jr	NZ, 00104$
                                   2548 ;src/scene.c:527: window_components_on_current_floor[malloc_i] = 0x05; //no shingles above a cloth rack
      000C65 3E 05            [ 8] 2549 	ld	a, #0x05
      000C67 02               [ 8] 2550 	ld	(bc), a
                                   2551 ;src/scene.c:528: return;
      000C68 18 2D            [12] 2552 	jr	00108$
      000C6A                       2553 00104$:
                                   2554 ;src/scene.c:530: if((window_components_on_current_floor[malloc_i] & 0x0F) == 0x03 && (map_components[camera_y_clamped][malloc_i].components & 0xF0) == 0x30){
      000C6A F8 00            [12] 2555 	ldhl	sp,	#0
      000C6C 7E               [ 8] 2556 	ld	a, (hl)
      000C6D E6 0F            [ 8] 2557 	and	a, #0x0f
      000C6F D6 03            [ 8] 2558 	sub	a, #0x03
      000C71 20 24            [12] 2559 	jr	NZ, 00108$
      000C73 11rB0r00         [12] 2560 	ld	de, #_map_components+0
      000C76 21r09r00         [12] 2561 	ld	hl, #_camera_y_clamped
      000C79 6E               [ 8] 2562 	ld	l, (hl)
                                   2563 ;	spillPairReg hl
                                   2564 ;	spillPairReg hl
      000C7A 26 00            [ 8] 2565 	ld	h, #0x00
                                   2566 ;	spillPairReg hl
                                   2567 ;	spillPairReg hl
      000C7C 29               [ 8] 2568 	add	hl, hl
      000C7D 29               [ 8] 2569 	add	hl, hl
      000C7E 29               [ 8] 2570 	add	hl, hl
      000C7F 19               [ 8] 2571 	add	hl, de
      000C80 5D               [ 4] 2572 	ld	e, l
      000C81 54               [ 4] 2573 	ld	d, h
      000C82 FArD2r00         [16] 2574 	ld	a, (#_malloc_i)
      000C85 87               [ 4] 2575 	add	a, a
      000C86 6F               [ 4] 2576 	ld	l, a
      000C87 26 00            [ 8] 2577 	ld	h, #0x00
      000C89 19               [ 8] 2578 	add	hl, de
      000C8A 7E               [ 8] 2579 	ld	a, (hl)
      000C8B E6 F0            [ 8] 2580 	and	a, #0xf0
      000C8D D6 30            [ 8] 2581 	sub	a, #0x30
      000C8F 20 06            [12] 2582 	jr	NZ, 00108$
                                   2583 ;src/scene.c:531: window_components_on_current_floor[malloc_i] &= 0xF0; //no spikes above an awning
      000C91 F8 00            [12] 2584 	ldhl	sp,	#0
      000C93 7E               [ 8] 2585 	ld	a, (hl)
      000C94 E6 F0            [ 8] 2586 	and	a, #0xf0
      000C96 02               [ 8] 2587 	ld	(bc), a
                                   2588 ;src/scene.c:533: return;
      000C97                       2589 00108$:
                                   2590 ;src/scene.c:535: }
      000C97 33               [ 8] 2591 	inc	sp
      000C98 C9               [16] 2592 	ret
                                   2593 ;src/scene.c:537: void fill_memory(void){
                                   2594 ;	---------------------------------
                                   2595 ; Function fill_memory
                                   2596 ; ---------------------------------
      000C99                       2597 _fill_memory::
      000C99 E8 FD            [16] 2598 	add	sp, #-3
                                   2599 ;src/scene.c:539: if(malloc_i == 4){
      000C9B FArD2r00         [16] 2600 	ld	a, (#_malloc_i)
      000C9E D6 04            [ 8] 2601 	sub	a, #0x04
      000CA0 20 0A            [12] 2602 	jr	NZ, 00102$
                                   2603 ;src/scene.c:540: walker_byte |= 0x80;
      000CA2 21rD1r00         [12] 2604 	ld	hl, #_walker_byte
      000CA5 7E               [ 8] 2605 	ld	a, (hl)
      000CA6 F6 80            [ 8] 2606 	or	a, #0x80
      000CA8 77               [ 8] 2607 	ld	(hl), a
                                   2608 ;src/scene.c:541: return;
      000CA9 C3r4Er0D         [16] 2609 	jp	00103$
      000CAC                       2610 00102$:
                                   2611 ;src/scene.c:544: memcpy_rect((malloc_i << 2) + 16, base, 4, 12);
      000CAC FArD2r00         [16] 2612 	ld	a, (#_malloc_i)
      000CAF 87               [ 4] 2613 	add	a, a
      000CB0 87               [ 4] 2614 	add	a, a
      000CB1 C6 10            [ 8] 2615 	add	a, #0x10
      000CB3 4F               [ 4] 2616 	ld	c, a
      000CB4 21 04 0C         [12] 2617 	ld	hl, #0xc04
      000CB7 E5               [16] 2618 	push	hl
      000CB8 11r00r00         [12] 2619 	ld	de, #_base
      000CBB 79               [ 4] 2620 	ld	a, c
      000CBC CDr51r0D         [24] 2621 	call	_memcpy_rect
                                   2622 ;src/scene.c:545: memcpy_rect(malloc_i << 2, top_info[(uint8_t)(window_components_on_current_floor[malloc_i] >> 4)].map, 4, (top_info[(uint8_t)(window_components_on_current_floor[malloc_i] >> 4)].h)<<2);
      000CBF 3Er03            [ 8] 2623 	ld	a, #<(_window_components_on_current_floor)
      000CC1 21rD2r00         [12] 2624 	ld	hl, #_malloc_i
      000CC4 86               [ 8] 2625 	add	a, (hl)
      000CC5 4F               [ 4] 2626 	ld	c, a
      000CC6 3Es00            [ 8] 2627 	ld	a, #>(_window_components_on_current_floor)
      000CC8 CE 00            [ 8] 2628 	adc	a, #0x00
      000CCA 47               [ 4] 2629 	ld	b, a
      000CCB 0A               [ 8] 2630 	ld	a, (bc)
      000CCC CB 37            [ 8] 2631 	swap	a
      000CCE E6 0F            [ 8] 2632 	and	a, #0x0f
      000CD0 4F               [ 4] 2633 	ld	c, a
      000CD1 06 00            [ 8] 2634 	ld	b, #0x00
      000CD3 69               [ 4] 2635 	ld	l, c
      000CD4 60               [ 4] 2636 	ld	h, b
      000CD5 29               [ 8] 2637 	add	hl, hl
      000CD6 29               [ 8] 2638 	add	hl, hl
      000CD7 29               [ 8] 2639 	add	hl, hl
      000CD8 09               [ 8] 2640 	add	hl, bc
      000CD9 11rDBr00         [12] 2641 	ld	de, #_top_info
      000CDC 19               [ 8] 2642 	add	hl, de
      000CDD 4D               [ 4] 2643 	ld	c, l
      000CDE 44               [ 4] 2644 	ld	b, h
      000CDF 23               [ 8] 2645 	inc	hl
      000CE0 23               [ 8] 2646 	inc	hl
      000CE1 03               [ 8] 2647 	inc	bc
      000CE2 0A               [ 8] 2648 	ld	a, (bc)
      000CE3 87               [ 4] 2649 	add	a, a
      000CE4 87               [ 4] 2650 	add	a, a
      000CE5 4E               [ 8] 2651 	ld	c, (hl)
      000CE6 23               [ 8] 2652 	inc	hl
      000CE7 46               [ 8] 2653 	ld	b, (hl)
      000CE8 21rD2r00         [12] 2654 	ld	hl, #_malloc_i
      000CEB 6E               [ 8] 2655 	ld	l, (hl)
                                   2656 ;	spillPairReg hl
                                   2657 ;	spillPairReg hl
      000CEC CB 25            [ 8] 2658 	sla	l
      000CEE CB 25            [ 8] 2659 	sla	l
      000CF0 57               [ 4] 2660 	ld	d, a
      000CF1 1E 04            [ 8] 2661 	ld	e, #0x04
      000CF3 D5               [16] 2662 	push	de
      000CF4 59               [ 4] 2663 	ld	e, c
      000CF5 50               [ 4] 2664 	ld	d, b
      000CF6 7D               [ 4] 2665 	ld	a, l
      000CF7 CDr51r0D         [24] 2666 	call	_memcpy_rect
                                   2667 ;src/scene.c:546: memcpy_rect((malloc_i << 2) + ((bot_info[window_components_on_current_floor[malloc_i] & 0x0F].y_offset - 1)<<4), bot_info[window_components_on_current_floor[malloc_i] & 0x0F].map, 4, (bot_info[window_components_on_current_floor[malloc_i] & 0x0F].h)<<2);
      000CFA 01rA5r00         [12] 2668 	ld	bc, #_bot_info+0
      000CFD 3Er03            [ 8] 2669 	ld	a, #<(_window_components_on_current_floor)
      000CFF 21rD2r00         [12] 2670 	ld	hl, #_malloc_i
      000D02 86               [ 8] 2671 	add	a, (hl)
      000D03 5F               [ 4] 2672 	ld	e, a
      000D04 3Es00            [ 8] 2673 	ld	a, #>(_window_components_on_current_floor)
      000D06 CE 00            [ 8] 2674 	adc	a, #0x00
      000D08 57               [ 4] 2675 	ld	d, a
      000D09 1A               [ 8] 2676 	ld	a, (de)
      000D0A E6 0F            [ 8] 2677 	and	a, #0x0f
      000D0C 6F               [ 4] 2678 	ld	l, a
                                   2679 ;	spillPairReg hl
                                   2680 ;	spillPairReg hl
      000D0D 26 00            [ 8] 2681 	ld	h, #0x00
                                   2682 ;	spillPairReg hl
                                   2683 ;	spillPairReg hl
      000D0F 5D               [ 4] 2684 	ld	e, l
      000D10 54               [ 4] 2685 	ld	d, h
      000D11 29               [ 8] 2686 	add	hl, hl
      000D12 29               [ 8] 2687 	add	hl, hl
      000D13 29               [ 8] 2688 	add	hl, hl
      000D14 19               [ 8] 2689 	add	hl, de
      000D15 09               [ 8] 2690 	add	hl, bc
      000D16 4D               [ 4] 2691 	ld	c, l
      000D17 44               [ 4] 2692 	ld	b, h
      000D18 59               [ 4] 2693 	ld	e, c
      000D19 50               [ 4] 2694 	ld	d, b
      000D1A 13               [ 8] 2695 	inc	de
      000D1B 1A               [ 8] 2696 	ld	a, (de)
      000D1C 87               [ 4] 2697 	add	a, a
      000D1D 87               [ 4] 2698 	add	a, a
      000D1E F8 00            [12] 2699 	ldhl	sp,	#0
      000D20 77               [ 8] 2700 	ld	(hl), a
      000D21 69               [ 4] 2701 	ld	l, c
                                   2702 ;	spillPairReg hl
                                   2703 ;	spillPairReg hl
      000D22 60               [ 4] 2704 	ld	h, b
                                   2705 ;	spillPairReg hl
                                   2706 ;	spillPairReg hl
      000D23 23               [ 8] 2707 	inc	hl
      000D24 23               [ 8] 2708 	inc	hl
      000D25 5D               [ 4] 2709 	ld	e, l
      000D26 54               [ 4] 2710 	ld	d, h
      000D27 1A               [ 8] 2711 	ld	a, (de)
      000D28 F8 01            [12] 2712 	ldhl	sp,	#1
      000D2A 22               [ 8] 2713 	ld	(hl+), a
      000D2B 13               [ 8] 2714 	inc	de
      000D2C 1A               [ 8] 2715 	ld	a, (de)
      000D2D 77               [ 8] 2716 	ld	(hl), a
      000D2E FArD2r00         [16] 2717 	ld	a, (#_malloc_i)
      000D31 87               [ 4] 2718 	add	a, a
      000D32 87               [ 4] 2719 	add	a, a
      000D33 5F               [ 4] 2720 	ld	e, a
      000D34 0A               [ 8] 2721 	ld	a, (bc)
      000D35 3D               [ 4] 2722 	dec	a
      000D36 CB 37            [ 8] 2723 	swap	a
      000D38 E6 F0            [ 8] 2724 	and	a, #0xf0
      000D3A 83               [ 4] 2725 	add	a, e
      000D3B 4F               [ 4] 2726 	ld	c, a
      000D3C F8 00            [12] 2727 	ldhl	sp,	#0
      000D3E 2A               [ 8] 2728 	ld	a, (hl+)
      000D3F 57               [ 4] 2729 	ld	d, a
      000D40 1E 04            [ 8] 2730 	ld	e, #0x04
      000D42 D5               [16] 2731 	push	de
      000D43 2A               [ 8] 2732 	ld	a, (hl+)
      000D44 5F               [ 4] 2733 	ld	e, a
      000D45 56               [ 8] 2734 	ld	d, (hl)
      000D46 79               [ 4] 2735 	ld	a, c
      000D47 CDr51r0D         [24] 2736 	call	_memcpy_rect
                                   2737 ;src/scene.c:548: malloc_i++;
      000D4A 21rD2r00         [12] 2738 	ld	hl, #_malloc_i
      000D4D 34               [12] 2739 	inc	(hl)
      000D4E                       2740 00103$:
                                   2741 ;src/scene.c:549: }
      000D4E E8 03            [16] 2742 	add	sp, #3
      000D50 C9               [16] 2743 	ret
                                   2744 ;src/scene.c:551: void memcpy_rect(uint8_t wm_pos, uint8_t * p_src, uint8_t src_width, uint8_t size_bytes){
                                   2745 ;	---------------------------------
                                   2746 ; Function memcpy_rect
                                   2747 ; ---------------------------------
      000D51                       2748 _memcpy_rect::
      000D51 E8 FC            [16] 2749 	add	sp, #-4
      000D53 4F               [ 4] 2750 	ld	c, a
                                   2751 ;src/scene.c:555: uint8_t * map_pointer = window_map + wm_pos;
      000D54 21rD3r00         [12] 2752 	ld	hl, #_window_map
      000D57 06 00            [ 8] 2753 	ld	b, #0x00
      000D59 09               [ 8] 2754 	add	hl, bc
      000D5A 4D               [ 4] 2755 	ld	c, l
      000D5B 44               [ 4] 2756 	ld	b, h
                                   2757 ;src/scene.c:556: cur_row = src_width;
      000D5C F8 06            [12] 2758 	ldhl	sp,	#6
      000D5E 7E               [ 8] 2759 	ld	a, (hl)
      000D5F EAr3Br01         [16] 2760 	ld	(#_memcpy_rect_cur_row_65536_298),a
                                   2761 ;src/scene.c:557: uint8_t dest_next_row_start = 16U/*dest_width*/ - src_width; // only do this calc once
      000D62 3E 10            [ 8] 2762 	ld	a, #0x10
      000D64 F8 06            [12] 2763 	ldhl	sp,	#6
      000D66 96               [ 8] 2764 	sub	a, (hl)
      000D67 F8 00            [12] 2765 	ldhl	sp,	#0
      000D69 77               [ 8] 2766 	ld	(hl), a
                                   2767 ;src/scene.c:559: while (size_bytes--) {
      000D6A F8 06            [12] 2768 	ldhl	sp,	#6
      000D6C 7E               [ 8] 2769 	ld	a, (hl)
      000D6D F8 01            [12] 2770 	ldhl	sp,	#1
      000D6F 77               [ 8] 2771 	ld	(hl), a
      000D70 F8 07            [12] 2772 	ldhl	sp,	#7
      000D72 7E               [ 8] 2773 	ld	a, (hl)
      000D73 F8 03            [12] 2774 	ldhl	sp,	#3
      000D75 77               [ 8] 2775 	ld	(hl), a
      000D76                       2776 00103$:
      000D76 F8 03            [12] 2777 	ldhl	sp,	#3
      000D78 3A               [ 8] 2778 	ld	a, (hl-)
      000D79 22               [ 8] 2779 	ld	(hl+), a
      000D7A 35               [12] 2780 	dec	(hl)
      000D7B 2B               [ 8] 2781 	dec	hl
      000D7C 7E               [ 8] 2782 	ld	a, (hl)
      000D7D B7               [ 4] 2783 	or	a, a
      000D7E 28 1A            [12] 2784 	jr	Z, 00106$
                                   2785 ;src/scene.c:560: *map_pointer++ = *(p_src++);
      000D80 1A               [ 8] 2786 	ld	a, (de)
      000D81 13               [ 8] 2787 	inc	de
      000D82 02               [ 8] 2788 	ld	(bc), a
      000D83 03               [ 8] 2789 	inc	bc
                                   2790 ;src/scene.c:561: cur_row--;
      000D84 21r3Br01         [12] 2791 	ld	hl, #_memcpy_rect_cur_row_65536_298
                                   2792 ;src/scene.c:562: if (cur_row == 0) {
      000D87 35               [12] 2793 	dec	(hl)
      000D88 20 EC            [12] 2794 	jr	NZ, 00103$
                                   2795 ;src/scene.c:563: map_pointer += dest_next_row_start;   
      000D8A F8 00            [12] 2796 	ldhl	sp,	#0
      000D8C 6E               [ 8] 2797 	ld	l, (hl)
      000D8D 26 00            [ 8] 2798 	ld	h, #0x00
      000D8F 09               [ 8] 2799 	add	hl, bc
      000D90 4D               [ 4] 2800 	ld	c, l
      000D91 44               [ 4] 2801 	ld	b, h
                                   2802 ;src/scene.c:564: cur_row = src_width;
      000D92 F8 01            [12] 2803 	ldhl	sp,	#1
      000D94 7E               [ 8] 2804 	ld	a, (hl)
      000D95 EAr3Br01         [16] 2805 	ld	(#_memcpy_rect_cur_row_65536_298),a
      000D98 18 DC            [12] 2806 	jr	00103$
      000D9A                       2807 00106$:
                                   2808 ;src/scene.c:567: }
      000D9A E8 04            [16] 2809 	add	sp, #4
      000D9C E1               [12] 2810 	pop	hl
      000D9D F1               [12] 2811 	pop	af
      000D9E E9               [ 4] 2812 	jp	(hl)
                                   2813 	.area _CODE
                                   2814 	.area _INITIALIZER
                                   2815 	.area _CABS (ABS)
