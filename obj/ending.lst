                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module ending
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _LCD_isr
                                     12 	.globl _VBL_isr
                                     13 	.globl _itoa
                                     14 	.globl _set_win_tile_xy
                                     15 	.globl _set_win_tiles
                                     16 	.globl _set_interrupts
                                     17 	.globl _add_LCD
                                     18 	.globl _add_VBL
                                     19 	.globl _remove_LCD
                                     20 	.globl _remove_VBL
                                     21 	.globl _ending_flags
                                     22 	.globl _ending_init
                                     23 	.globl _compute_ending_frame
                                     24 ;--------------------------------------------------------
                                     25 ; special function registers
                                     26 ;--------------------------------------------------------
                                     27 ;--------------------------------------------------------
                                     28 ; ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area _DATA
      000000                         31 _ending_flags::
      000000                         32 	.ds 1
      000001                         33 _subpix_speed:
      000001                         34 	.ds 1
      000002                         35 _force:
      000002                         36 	.ds 1
      000003                         37 _win_height:
      000003                         38 	.ds 2
      000005                         39 _max_scan:
      000005                         40 	.ds 1
      000006                         41 _score_text:
      000006                         42 	.ds 5
      00000B                         43 _i:
      00000B                         44 	.ds 1
                                     45 ;--------------------------------------------------------
                                     46 ; ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area _INITIALIZED
                                     49 ;--------------------------------------------------------
                                     50 ; absolute external ram data
                                     51 ;--------------------------------------------------------
                                     52 	.area _DABS (ABS)
                                     53 ;--------------------------------------------------------
                                     54 ; global & static initialisations
                                     55 ;--------------------------------------------------------
                                     56 	.area _HOME
                                     57 	.area _GSINIT
                                     58 	.area _GSFINAL
                                     59 	.area _GSINIT
                                     60 ;--------------------------------------------------------
                                     61 ; Home
                                     62 ;--------------------------------------------------------
                                     63 	.area _HOME
                                     64 	.area _HOME
                                     65 ;--------------------------------------------------------
                                     66 ; code
                                     67 ;--------------------------------------------------------
                                     68 	.area _CODE
                                     69 ;src/ending.c:36: void VBL_isr(void) { 
                                     70 ;	---------------------------------
                                     71 ; Function VBL_isr
                                     72 ; ---------------------------------
      000000                         73 _VBL_isr::
                                     74 ;src/ending.c:37: SHOW_WIN;
      000000 F0r00            [12]   75 	ldh	a, (_LCDC_REG + 0)
      000002 F6 20            [ 8]   76 	or	a, #0x20
      000004 E0r00            [12]   77 	ldh	(_LCDC_REG + 0), a
                                     78 ;src/ending.c:38: LYC_REG = max_scan; 
      000006 FAr05r00         [16]   79 	ld	a, (#_max_scan)
      000009 E0r00            [12]   80 	ldh	(_LYC_REG + 0), a
                                     81 ;src/ending.c:39: }
      00000B C9               [16]   82 	ret
                                     83 ;src/ending.c:40: void LCD_isr(void) {
                                     84 ;	---------------------------------
                                     85 ; Function LCD_isr
                                     86 ; ---------------------------------
      00000C                         87 _LCD_isr::
                                     88 ;src/ending.c:41: if (LY_REG < 144) {
      00000C F0r00            [12]   89 	ldh	a, (_LY_REG + 0)
      00000E D6 90            [ 8]   90 	sub	a, #0x90
      000010 D0               [20]   91 	ret	NC
                                     92 ;src/ending.c:42: HIDE_WIN;
      000011 F0r00            [12]   93 	ldh	a, (_LCDC_REG + 0)
      000013 E6 DF            [ 8]   94 	and	a, #0xdf
      000015 E0r00            [12]   95 	ldh	(_LCDC_REG + 0), a
                                     96 ;src/ending.c:43: WX_REG = 160; //THIS IS TO COVER A BUG ON THE DMG!!! REMOVE IT FOR THE GBC VERSION
      000017 3E A0            [ 8]   97 	ld	a, #0xa0
      000019 E0r00            [12]   98 	ldh	(_WX_REG + 0), a
                                     99 ;src/ending.c:45: }
      00001B C9               [16]  100 	ret
                                    101 ;src/ending.c:47: void ending_init(void){
                                    102 ;	---------------------------------
                                    103 ; Function ending_init
                                    104 ; ---------------------------------
      00001C                        105 _ending_init::
                                    106 ;src/ending.c:48: ending_flags = 0b10000000;
      00001C 21r00r00         [12]  107 	ld	hl, #_ending_flags
      00001F 36 80            [12]  108 	ld	(hl), #0x80
                                    109 ;src/ending.c:51: remove_VBL(VBL_isr);
      000021 11r00r00         [12]  110 	ld	de, #_VBL_isr
      000024 CDr00r00         [24]  111 	call	_remove_VBL
                                    112 ;src/ending.c:52: remove_LCD(LCD_isr);
      000027 11r0Cr00         [12]  113 	ld	de, #_LCD_isr
      00002A CDr00r00         [24]  114 	call	_remove_LCD
                                    115 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1905: shadow_OAM[nb].y = 0;
      00002D 21r50r00         [12]  116 	ld	hl, #(_shadow_OAM + 80)
      000030 36 00            [12]  117 	ld	(hl), #0x00
      000032 21r54r00         [12]  118 	ld	hl, #(_shadow_OAM + 84)
      000035 36 00            [12]  119 	ld	(hl), #0x00
      000037 21r58r00         [12]  120 	ld	hl, #(_shadow_OAM + 88)
      00003A 36 00            [12]  121 	ld	(hl), #0x00
      00003C 21r5Cr00         [12]  122 	ld	hl, #(_shadow_OAM + 92)
      00003F 36 00            [12]  123 	ld	(hl), #0x00
      000041 21r60r00         [12]  124 	ld	hl, #(_shadow_OAM + 96)
      000044 36 00            [12]  125 	ld	(hl), #0x00
      000046 21r64r00         [12]  126 	ld	hl, #(_shadow_OAM + 100)
      000049 36 00            [12]  127 	ld	(hl), #0x00
                                    128 ;src/ending.c:59: hide_sprite(25);
                                    129 ;src/ending.c:60: }
      00004B C9               [16]  130 	ret
                                    131 ;src/ending.c:62: void prepare_ending_frame(void){
                                    132 ;	---------------------------------
                                    133 ; Function prepare_ending_frame
                                    134 ; ---------------------------------
      00004C                        135 _prepare_ending_frame:
      00004C 3B               [ 8]  136 	dec	sp
                                    137 ;src/ending.c:64: if(IS_ANIMATION_STARTED) {return;}
      00004D FAr00r00         [16]  138 	ld	a, (#_ending_flags)
      000050 CB 57            [ 8]  139 	bit	2, a
      000052 C2r30r01         [16]  140 	jp	NZ,00116$
                                    141 ;src/ending.c:66: ending_flags |= 0x04; //mark is_ended as true
      000055 21r00r00         [12]  142 	ld	hl, #_ending_flags
      000058 7E               [ 8]  143 	ld	a, (hl)
      000059 F6 04            [ 8]  144 	or	a, #0x04
      00005B 77               [ 8]  145 	ld	(hl), a
                                    146 ;src/ending.c:67: win_height = 0xB000u;
      00005C 21r03r00         [12]  147 	ld	hl, #_win_height
      00005F AF               [ 4]  148 	xor	a, a
      000060 22               [ 8]  149 	ld	(hl+), a
      000061 36 B0            [12]  150 	ld	(hl), #0xb0
                                    151 ;src/ending.c:69: force = 4u; //initial force is 4u
      000063 21r02r00         [12]  152 	ld	hl, #_force
      000066 36 04            [12]  153 	ld	(hl), #0x04
                                    154 ;src/ending.c:72: set_win_tiles(0,0, 20U, 3U, hud_map);
      000068 11r00r00         [12]  155 	ld	de, #_hud_map
      00006B D5               [16]  156 	push	de
      00006C 21 14 03         [12]  157 	ld	hl, #0x314
      00006F E5               [16]  158 	push	hl
      000070 AF               [ 4]  159 	xor	a, a
      000071 0F               [ 4]  160 	rrca
      000072 F5               [16]  161 	push	af
      000073 CDr00r00         [24]  162 	call	_set_win_tiles
      000076 E8 06            [16]  163 	add	sp, #6
                                    164 ;src/ending.c:73: itoa(score, score_text, 10);
      000078 01r06r00         [12]  165 	ld	bc, #_score_text+0
      00007B 59               [ 4]  166 	ld	e, c
      00007C 50               [ 4]  167 	ld	d, b
      00007D 21r00r00         [12]  168 	ld	hl, #_score
      000080 6E               [ 8]  169 	ld	l, (hl)
                                    170 ;	spillPairReg hl
                                    171 ;	spillPairReg hl
      000081 FAr01r00         [16]  172 	ld	a, (_score + 1)
      000084 67               [ 4]  173 	ld	h, a
                                    174 ;	spillPairReg hl
                                    175 ;	spillPairReg hl
      000085 C5               [16]  176 	push	bc
      000086 3E 0A            [ 8]  177 	ld	a, #0x0a
      000088 F5               [16]  178 	push	af
      000089 33               [ 8]  179 	inc	sp
      00008A D5               [16]  180 	push	de
      00008B E5               [16]  181 	push	hl
      00008C CDr00r00         [24]  182 	call	_itoa
      00008F E8 05            [16]  183 	add	sp, #5
      000091 C1               [12]  184 	pop	bc
                                    185 ;src/ending.c:74: for(i=0; score_text[i] != 0 && i < 5; i++){
      000092 21r0Br00         [12]  186 	ld	hl, #_i
      000095 36 00            [12]  187 	ld	(hl), #0x00
      000097                        188 00114$:
      000097 79               [ 4]  189 	ld	a, c
      000098 21r0Br00         [12]  190 	ld	hl, #_i
      00009B 86               [ 8]  191 	add	a, (hl)
      00009C 5F               [ 4]  192 	ld	e, a
      00009D 78               [ 4]  193 	ld	a, b
      00009E CE 00            [ 8]  194 	adc	a, #0x00
      0000A0 57               [ 4]  195 	ld	d, a
      0000A1 1A               [ 8]  196 	ld	a, (de)
      0000A2 F8 00            [12]  197 	ldhl	sp,	#0
      0000A4 77               [ 8]  198 	ld	(hl), a
      0000A5 7E               [ 8]  199 	ld	a, (hl)
      0000A6 B7               [ 4]  200 	or	a, a
      0000A7 28 13            [12]  201 	jr	Z, 00103$
      0000A9 FAr0Br00         [16]  202 	ld	a, (#_i)
      0000AC D6 05            [ 8]  203 	sub	a, #0x05
      0000AE 30 0C            [12]  204 	jr	NC, 00103$
                                    205 ;src/ending.c:75: score_text[i] += 64U;
      0000B0 F8 00            [12]  206 	ldhl	sp,	#0
      0000B2 7E               [ 8]  207 	ld	a, (hl)
      0000B3 C6 40            [ 8]  208 	add	a, #0x40
      0000B5 12               [ 8]  209 	ld	(de), a
                                    210 ;src/ending.c:74: for(i=0; score_text[i] != 0 && i < 5; i++){
      0000B6 21r0Br00         [12]  211 	ld	hl, #_i
      0000B9 34               [12]  212 	inc	(hl)
      0000BA 18 DB            [12]  213 	jr	00114$
      0000BC                        214 00103$:
                                    215 ;src/ending.c:77: set_win_tiles(8, 1, i, 1, score_text);
      0000BC C5               [16]  216 	push	bc
      0000BD 3E 01            [ 8]  217 	ld	a, #0x01
      0000BF F5               [16]  218 	push	af
      0000C0 33               [ 8]  219 	inc	sp
      0000C1 FAr0Br00         [16]  220 	ld	a, (#_i)
      0000C4 67               [ 4]  221 	ld	h, a
      0000C5 2E 01            [ 8]  222 	ld	l, #0x01
      0000C7 E5               [16]  223 	push	hl
      0000C8 3E 08            [ 8]  224 	ld	a, #0x08
      0000CA F5               [16]  225 	push	af
      0000CB 33               [ 8]  226 	inc	sp
      0000CC CDr00r00         [24]  227 	call	_set_win_tiles
      0000CF E8 06            [16]  228 	add	sp, #6
                                    229 ;src/ending.c:78: set_win_tile_xy(8 + i, 1, 0x7A);
      0000D1 21r0Br00         [12]  230 	ld	hl, #_i
      0000D4 7E               [ 8]  231 	ld	a, (hl)
      0000D5 C6 08            [ 8]  232 	add	a, #0x08
      0000D7 26 7A            [ 8]  233 	ld	h, #0x7a
                                    234 ;	spillPairReg hl
                                    235 ;	spillPairReg hl
      0000D9 E5               [16]  236 	push	hl
      0000DA 33               [ 8]  237 	inc	sp
      0000DB 26 01            [ 8]  238 	ld	h, #0x01
                                    239 ;	spillPairReg hl
                                    240 ;	spillPairReg hl
      0000DD E5               [16]  241 	push	hl
      0000DE 33               [ 8]  242 	inc	sp
      0000DF F5               [16]  243 	push	af
      0000E0 33               [ 8]  244 	inc	sp
      0000E1 CDr00r00         [24]  245 	call	_set_win_tile_xy
      0000E4 E8 03            [16]  246 	add	sp, #3
                                    247 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1804: shadow_OAM[nb].tile=tile;
      0000E6 21r52r00         [12]  248 	ld	hl, #(_shadow_OAM + 82)
      0000E9 36 81            [12]  249 	ld	(hl), #0x81
                                    250 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1850: shadow_OAM[nb].prop=prop;
      0000EB 21r53r00         [12]  251 	ld	hl, #(_shadow_OAM + 83)
      0000EE 36 40            [12]  252 	ld	(hl), #0x40
                                    253 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1804: shadow_OAM[nb].tile=tile;
      0000F0 21r56r00         [12]  254 	ld	hl, #(_shadow_OAM + 86)
      0000F3 36 80            [12]  255 	ld	(hl), #0x80
                                    256 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1850: shadow_OAM[nb].prop=prop;
      0000F5 21r57r00         [12]  257 	ld	hl, #(_shadow_OAM + 87)
      0000F8 36 40            [12]  258 	ld	(hl), #0x40
                                    259 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1804: shadow_OAM[nb].tile=tile;
      0000FA 21r5Ar00         [12]  260 	ld	hl, #(_shadow_OAM + 90)
      0000FD 36 23            [12]  261 	ld	(hl), #0x23
      0000FF 21r5Er00         [12]  262 	ld	hl, #(_shadow_OAM + 94)
      000102 36 23            [12]  263 	ld	(hl), #0x23
      000104 21r62r00         [12]  264 	ld	hl, #(_shadow_OAM + 98)
      000107 36 24            [12]  265 	ld	(hl), #0x24
      000109 21r66r00         [12]  266 	ld	hl, #(_shadow_OAM + 102)
      00010C 36 24            [12]  267 	ld	(hl), #0x24
                                    268 ;src/ending.c:91: subpix_speed = 252u;
      00010E 21r01r00         [12]  269 	ld	hl, #_subpix_speed
      000111 36 FC            [12]  270 	ld	(hl), #0xfc
                                    271 ;src/ending.c:99: }
      000113 F3               [ 4]  272 	di
                                    273 ;src/ending.c:94: add_VBL(VBL_isr);
      000114 11r00r00         [12]  274 	ld	de, #_VBL_isr
      000117 CDr00r00         [24]  275 	call	_add_VBL
                                    276 ;src/ending.c:95: add_LCD(LCD_isr);
      00011A 11r0Cr00         [12]  277 	ld	de, #_LCD_isr
      00011D CDr00r00         [24]  278 	call	_add_LCD
                                    279 ;src/ending.c:96: set_interrupts(VBL_IFLAG | LCD_IFLAG);
      000120 3E 03            [ 8]  280 	ld	a, #0x03
      000122 CDr00r00         [24]  281 	call	_set_interrupts
                                    282 ;src/ending.c:97: STAT_REG |= 0x40; // enable LY == LYC mode 
      000125 F0r00            [12]  283 	ldh	a, (_STAT_REG + 0)
      000127 F6 40            [ 8]  284 	or	a, #0x40
      000129 E0r00            [12]  285 	ldh	(_STAT_REG + 0), a
                                    286 ;src/ending.c:98: LYC_REG = 160u;   // make it never fire
      00012B 3E A0            [ 8]  287 	ld	a, #0xa0
      00012D E0r00            [12]  288 	ldh	(_LYC_REG + 0), a
      00012F FB               [ 4]  289 	ei
      000130                        290 00116$:
                                    291 ;src/ending.c:100: }
      000130 33               [ 8]  292 	inc	sp
      000131 C9               [16]  293 	ret
                                    294 ;src/ending.c:102: void compute_ending_frame(void){
                                    295 ;	---------------------------------
                                    296 ; Function compute_ending_frame
                                    297 ; ---------------------------------
      000132                        298 _compute_ending_frame::
                                    299 ;src/ending.c:103: prepare_ending_frame();
      000132 CDr4Cr00         [24]  300 	call	_prepare_ending_frame
                                    301 ;src/ending.c:104: move_win(7u, WIN_PIXEL);
      000135 21r04r00         [12]  302 	ld	hl, #_win_height + 1
      000138 4E               [ 8]  303 	ld	c, (hl)
      000139 41               [ 4]  304 	ld	b, c
                                    305 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1656: WX_REG=x, WY_REG=y;
      00013A 3E 07            [ 8]  306 	ld	a, #0x07
      00013C E0r00            [12]  307 	ldh	(_WX_REG + 0), a
      00013E 78               [ 4]  308 	ld	a, b
      00013F E0r00            [12]  309 	ldh	(_WY_REG + 0), a
                                    310 ;src/ending.c:105: move_sprite(20, 8, WIN_PIXEL + 8u);
      000141 79               [ 4]  311 	ld	a, c
      000142 C6 08            [ 8]  312 	add	a, #0x08
                                    313 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
                                    314 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1878: itm->y=y, itm->x=x;
      000144 21r50r00         [12]  315 	ld	hl, #(_shadow_OAM + 80)
      000147 22               [ 8]  316 	ld	(hl+), a
      000148 36 08            [12]  317 	ld	(hl), #0x08
                                    318 ;src/ending.c:106: move_sprite(21, 160, WIN_PIXEL + 8u);
      00014A FAr04r00         [16]  319 	ld	a, (#_win_height + 1)
      00014D C6 08            [ 8]  320 	add	a, #0x08
      00014F 4F               [ 4]  321 	ld	c, a
                                    322 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      000150 21r54r00         [12]  323 	ld	hl, #(_shadow_OAM + 84)
                                    324 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1878: itm->y=y, itm->x=x;
      000153 71               [ 8]  325 	ld	(hl), c
      000154 23               [ 8]  326 	inc	hl
      000155 36 A0            [12]  327 	ld	(hl), #0xa0
                                    328 ;src/ending.c:107: move_sprite(22, 8, WIN_PIXEL - 8);
      000157 FAr04r00         [16]  329 	ld	a, (#_win_height + 1)
      00015A C6 F8            [ 8]  330 	add	a, #0xf8
                                    331 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
                                    332 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1878: itm->y=y, itm->x=x;
      00015C 21r58r00         [12]  333 	ld	hl, #(_shadow_OAM + 88)
      00015F 22               [ 8]  334 	ld	(hl+), a
      000160 36 08            [12]  335 	ld	(hl), #0x08
                                    336 ;src/ending.c:108: move_sprite(23, 160, WIN_PIXEL - 8);
      000162 FAr04r00         [16]  337 	ld	a, (#_win_height + 1)
      000165 C6 F8            [ 8]  338 	add	a, #0xf8
      000167 4F               [ 4]  339 	ld	c, a
                                    340 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      000168 21r5Cr00         [12]  341 	ld	hl, #(_shadow_OAM + 92)
                                    342 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1878: itm->y=y, itm->x=x;
      00016B 71               [ 8]  343 	ld	(hl), c
      00016C 23               [ 8]  344 	inc	hl
      00016D 36 A0            [12]  345 	ld	(hl), #0xa0
                                    346 ;src/ending.c:109: move_sprite(24, 8, WIN_PIXEL);
      00016F 21r04r00         [12]  347 	ld	hl, #_win_height + 1
      000172 4E               [ 8]  348 	ld	c, (hl)
                                    349 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      000173 21r60r00         [12]  350 	ld	hl, #(_shadow_OAM + 96)
                                    351 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1878: itm->y=y, itm->x=x;
      000176 71               [ 8]  352 	ld	(hl), c
      000177 23               [ 8]  353 	inc	hl
      000178 36 08            [12]  354 	ld	(hl), #0x08
                                    355 ;src/ending.c:110: move_sprite(25, 160, WIN_PIXEL);
      00017A 21r04r00         [12]  356 	ld	hl, #_win_height + 1
      00017D 4E               [ 8]  357 	ld	c, (hl)
                                    358 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      00017E 21r64r00         [12]  359 	ld	hl, #(_shadow_OAM + 100)
                                    360 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1878: itm->y=y, itm->x=x;
      000181 71               [ 8]  361 	ld	(hl), c
      000182 23               [ 8]  362 	inc	hl
      000183 36 A0            [12]  363 	ld	(hl), #0xa0
                                    364 ;src/ending.c:113: if(subpix_speed > MAX_SPEED) {
      000185 3E 0D            [ 8]  365 	ld	a, #0x0d
      000187 21r01r00         [12]  366 	ld	hl, #_subpix_speed
      00018A 96               [ 8]  367 	sub	a, (hl)
      00018B 30 13            [12]  368 	jr	NC, 00104$
                                    369 ;src/ending.c:114: ending_flags &= 0b11110111; //IS_FORCE_ADDED = false
      00018D 21r00r00         [12]  370 	ld	hl, #_ending_flags
      000190 7E               [ 8]  371 	ld	a, (hl)
      000191 E6 F7            [ 8]  372 	and	a, #0xf7
      000193 77               [ 8]  373 	ld	(hl), a
                                    374 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1850: shadow_OAM[nb].prop=prop;
      000194 21r63r00         [12]  375 	ld	hl, #(_shadow_OAM + 99)
      000197 36 20            [12]  376 	ld	(hl), #0x20
      000199 21r67r00         [12]  377 	ld	hl, #(_shadow_OAM + 103)
      00019C 36 20            [12]  378 	ld	(hl), #0x20
                                    379 ;src/ending.c:116: set_sprite_prop(25, S_FLIPX);
      00019E 18 20            [12]  380 	jr	00105$
      0001A0                        381 00104$:
                                    382 ;src/ending.c:118: else if(subpix_speed == 0) {
      0001A0 FAr01r00         [16]  383 	ld	a, (#_subpix_speed)
      0001A3 B7               [ 4]  384 	or	a, a
      0001A4 20 1A            [12]  385 	jr	NZ, 00105$
                                    386 ;src/ending.c:120: ending_flags |= 0b00001001; //IS_FORCE_ADDED = true, IS_ANIMATION_FINISHED = true
      0001A6 21r00r00         [12]  387 	ld	hl, #_ending_flags
      0001A9 7E               [ 8]  388 	ld	a, (hl)
      0001AA F6 09            [ 8]  389 	or	a, #0x09
      0001AC 77               [ 8]  390 	ld	(hl), a
                                    391 ;src/ending.c:121: ending_flags ^= 0b00000010; //swap WIN_DIRECTION
      0001AD 7E               [ 8]  392 	ld	a, (hl)
      0001AE EE 02            [ 8]  393 	xor	a, #0x02
      0001B0 77               [ 8]  394 	ld	(hl), a
                                    395 ;src/ending.c:122: force = 0x00; //make the force smaller for the sway, 0 so it turns to 1 now
      0001B1 21r02r00         [12]  396 	ld	hl, #_force
      0001B4 36 00            [12]  397 	ld	(hl), #0x00
                                    398 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1850: shadow_OAM[nb].prop=prop;
      0001B6 21r63r00         [12]  399 	ld	hl, #(_shadow_OAM + 99)
      0001B9 36 00            [12]  400 	ld	(hl), #0x00
      0001BB 21r67r00         [12]  401 	ld	hl, #(_shadow_OAM + 103)
      0001BE 36 00            [12]  402 	ld	(hl), #0x00
                                    403 ;src/ending.c:124: set_sprite_prop(25, 0x00);
      0001C0                        404 00105$:
                                    405 ;src/ending.c:127: if(IS_ANIMATION_FINISHED){      
      0001C0 21r00r00         [12]  406 	ld	hl, #_ending_flags
      0001C3 5E               [ 8]  407 	ld	e, (hl)
      0001C4 CB 43            [ 8]  408 	bit	0, e
      0001C6 28 07            [12]  409 	jr	Z, 00107$
                                    410 ;src/ending.c:128: force ^= 0x01; //make the force smaller for the sway, either 1 or 0
      0001C8 21r02r00         [12]  411 	ld	hl, #_force
      0001CB 7E               [ 8]  412 	ld	a, (hl)
      0001CC EE 01            [ 8]  413 	xor	a, #0x01
      0001CE 77               [ 8]  414 	ld	(hl), a
      0001CF                        415 00107$:
                                    416 ;src/ending.c:130: subpix_speed = (IS_FORCE_ADDED) ? subpix_speed + force : subpix_speed - force;
      0001CF CB 5B            [ 8]  417 	bit	3, e
      0001D1 28 09            [12]  418 	jr	Z, 00121$
      0001D3 FAr01r00         [16]  419 	ld	a, (#_subpix_speed)
      0001D6 21r02r00         [12]  420 	ld	hl, #_force
      0001D9 86               [ 8]  421 	add	a, (hl)
      0001DA 18 07            [12]  422 	jr	00122$
      0001DC                        423 00121$:
      0001DC FAr01r00         [16]  424 	ld	a, (#_subpix_speed)
      0001DF 21r02r00         [12]  425 	ld	hl, #_force
      0001E2 96               [ 8]  426 	sub	a, (hl)
      0001E3                        427 00122$:
      0001E3 21r01r00         [12]  428 	ld	hl, #_subpix_speed
      0001E6 77               [ 8]  429 	ld	(hl), a
                                    430 ;src/ending.c:131: win_height = WIN_DIRECTION ? win_height + ((uint16_t)(subpix_speed) << 2) : win_height - ((uint16_t)(subpix_speed) << 2);
      0001E7 6E               [ 8]  431 	ld	l, (hl)
                                    432 ;	spillPairReg hl
                                    433 ;	spillPairReg hl
      0001E8 26 00            [ 8]  434 	ld	h, #0x00
                                    435 ;	spillPairReg hl
                                    436 ;	spillPairReg hl
      0001EA 29               [ 8]  437 	add	hl, hl
      0001EB 29               [ 8]  438 	add	hl, hl
      0001EC 4D               [ 4]  439 	ld	c, l
      0001ED 44               [ 4]  440 	ld	b, h
      0001EE CB 4B            [ 8]  441 	bit	1, e
      0001F0 28 0C            [12]  442 	jr	Z, 00123$
      0001F2 79               [ 4]  443 	ld	a, c
      0001F3 21r03r00         [12]  444 	ld	hl, #_win_height
      0001F6 86               [ 8]  445 	add	a, (hl)
      0001F7 23               [ 8]  446 	inc	hl
      0001F8 4F               [ 4]  447 	ld	c, a
      0001F9 78               [ 4]  448 	ld	a, b
      0001FA 8E               [ 8]  449 	adc	a, (hl)
      0001FB 47               [ 4]  450 	ld	b, a
      0001FC 18 09            [12]  451 	jr	00124$
      0001FE                        452 00123$:
      0001FE 21r03r00         [12]  453 	ld	hl, #_win_height
      000201 2A               [ 8]  454 	ld	a, (hl+)
      000202 91               [ 4]  455 	sub	a, c
      000203 4F               [ 4]  456 	ld	c, a
      000204 7E               [ 8]  457 	ld	a, (hl)
      000205 98               [ 4]  458 	sbc	a, b
      000206 47               [ 4]  459 	ld	b, a
      000207                        460 00124$:
      000207 21r03r00         [12]  461 	ld	hl, #_win_height
      00020A 79               [ 4]  462 	ld	a, c
      00020B 22               [ 8]  463 	ld	(hl+), a
      00020C 70               [ 8]  464 	ld	(hl), b
                                    465 ;src/ending.c:132: max_scan = WIN_PIXEL + 24U; //REMOVE THE 1PX PADDING FOR THE CGB VERSION (23U)
      00020D 7E               [ 8]  466 	ld	a, (hl)
      00020E C6 18            [ 8]  467 	add	a, #0x18
      000210 EAr05r00         [16]  468 	ld	(#_max_scan),a
                                    469 ;src/ending.c:133: }
      000213 C9               [16]  470 	ret
                                    471 	.area _CODE
                                    472 	.area _INITIALIZER
                                    473 	.area _CABS (ABS)
