                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module player
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _hide_sprites_range
                                     12 	.globl _set_sprite_data
                                     13 	.globl _set_bkg_tiles
                                     14 	.globl _joypad
                                     15 	.globl _play_boing_sfx
                                     16 	.globl _stop_hurt_sfx
                                     17 	.globl _play_hurt_sfx
                                     18 	.globl _play_break_sfx
                                     19 	.globl _play_bump_sfx
                                     20 	.globl _stop_jump_sfx
                                     21 	.globl _play_jump_sfx
                                     22 	.globl _stop_sfx
                                     23 	.globl _score
                                     24 	.globl _current_state
                                     25 	.globl _player_y
                                     26 	.globl _player_x
                                     27 	.globl _is_facing_right
                                     28 	.globl _a_not_pressed
                                     29 	.globl _player_dead_flag
                                     30 	.globl _clamp_y_velocity
                                     31 	.globl _clamp_x_velocity
                                     32 	.globl _jump_power
                                     33 	.globl _impulse
                                     34 	.globl _fall_g
                                     35 	.globl _jump_g
                                     36 	.globl _player_init
                                     37 	.globl _compute_player_frame
                                     38 	.globl _render_player
                                     39 	.globl _end_frame
                                     40 ;--------------------------------------------------------
                                     41 ; special function registers
                                     42 ;--------------------------------------------------------
                                     43 ;--------------------------------------------------------
                                     44 ; ram data
                                     45 ;--------------------------------------------------------
                                     46 	.area _DATA
      000000                         47 _player_dead_flag::
      000000                         48 	.ds 1
      000001                         49 _frame_counter:
      000001                         50 	.ds 1
      000002                         51 _current_frame:
      000002                         52 	.ds 1
      000003                         53 _a_not_pressed::
      000003                         54 	.ds 1
      000004                         55 _i:
      000004                         56 	.ds 1
      000005                         57 _joy:
      000005                         58 	.ds 1
      000006                         59 _x_force:
      000006                         60 	.ds 1
      000007                         61 _x_speed:
      000007                         62 	.ds 2
      000009                         63 _is_facing_right::
      000009                         64 	.ds 1
      00000A                         65 _is_grounded:
      00000A                         66 	.ds 1
      00000B                         67 _is_jumping:
      00000B                         68 	.ds 1
      00000C                         69 _y_speed:
      00000C                         70 	.ds 1
      00000D                         71 _player_x::
      00000D                         72 	.ds 2
      00000F                         73 _player_y::
      00000F                         74 	.ds 1
      000010                         75 _last_x:
      000010                         76 	.ds 2
      000012                         77 _last_y:
      000012                         78 	.ds 1
      000013                         79 _current_state::
      000013                         80 	.ds 1
      000014                         81 _current_coyote_frames:
      000014                         82 	.ds 1
      000015                         83 _score::
      000015                         84 	.ds 2
      000017                         85 _max_player_y:
      000017                         86 	.ds 1
      000018                         87 _test_max_player_y:
      000018                         88 	.ds 1
      000019                         89 _highest_visited_floor:
      000019                         90 	.ds 1
      00001A                         91 _next_free_puff:
      00001A                         92 	.ds 1
      00001B                         93 _brick_frame:
      00001B                         94 	.ds 1
      00001C                         95 _brick_y_speed:
      00001C                         96 	.ds 1
                                     97 ;--------------------------------------------------------
                                     98 ; ram data
                                     99 ;--------------------------------------------------------
                                    100 	.area _INITIALIZED
      000000                        101 _puff_frame:
      000000                        102 	.ds 4
      000004                        103 _rect_functions:
      000004                        104 	.ds 14
                                    105 ;--------------------------------------------------------
                                    106 ; absolute external ram data
                                    107 ;--------------------------------------------------------
                                    108 	.area _DABS (ABS)
                                    109 ;--------------------------------------------------------
                                    110 ; global & static initialisations
                                    111 ;--------------------------------------------------------
                                    112 	.area _HOME
                                    113 	.area _GSINIT
                                    114 	.area _GSFINAL
                                    115 	.area _GSINIT
                                    116 ;--------------------------------------------------------
                                    117 ; Home
                                    118 ;--------------------------------------------------------
                                    119 	.area _HOME
                                    120 	.area _HOME
                                    121 ;--------------------------------------------------------
                                    122 ; code
                                    123 ;--------------------------------------------------------
                                    124 	.area _CODE
                                    125 ;src/player.c:129: void player_init(void)
                                    126 ;	---------------------------------
                                    127 ; Function player_init
                                    128 ; ---------------------------------
      000000                        129 _player_init::
                                    130 ;src/player.c:131: player_dead_flag = false;
      000000 21r00r00         [12]  131 	ld	hl, #_player_dead_flag
      000003 36 00            [12]  132 	ld	(hl), #0x00
                                    133 ;src/player.c:133: OBP0_REG = 0xE4; //11100100
      000005 3E E4            [ 8]  134 	ld	a, #0xe4
      000007 E0r00            [12]  135 	ldh	(_OBP0_REG + 0), a
                                    136 ;src/player.c:136: set_sprite_data(TILE_NUM_START, PLAYER_SPRITES, playerSprites);
      000009 11r00r00         [12]  137 	ld	de, #_playerSprites
      00000C D5               [16]  138 	push	de
      00000D 21 00 18         [12]  139 	ld	hl, #0x1800
      000010 E5               [16]  140 	push	hl
      000011 CDr00r00         [24]  141 	call	_set_sprite_data
      000014 E8 04            [16]  142 	add	sp, #4
                                    143 ;src/player.c:137: set_sprite_data(PLAYER_SPRITES, 3, Sfx);
      000016 11r00r00         [12]  144 	ld	de, #_Sfx
      000019 D5               [16]  145 	push	de
      00001A 21 18 03         [12]  146 	ld	hl, #0x318
      00001D E5               [16]  147 	push	hl
      00001E CDr00r00         [24]  148 	call	_set_sprite_data
      000021 E8 04            [16]  149 	add	sp, #4
                                    150 ;src/player.c:139: frame_counter = 0;
      000023 21r01r00         [12]  151 	ld	hl, #_frame_counter
      000026 36 00            [12]  152 	ld	(hl), #0x00
                                    153 ;src/player.c:140: current_frame = 0;
      000028 21r02r00         [12]  154 	ld	hl, #_current_frame
      00002B 36 00            [12]  155 	ld	(hl), #0x00
                                    156 ;src/player.c:141: current_state = PLAYER_STATE_IDLE;
      00002D 21r13r00         [12]  157 	ld	hl, #_current_state
      000030 36 00            [12]  158 	ld	(hl), #0x00
                                    159 ;src/player.c:142: x_force = 0U;
      000032 21r06r00         [12]  160 	ld	hl, #_x_force
      000035 36 00            [12]  161 	ld	(hl), #0x00
                                    162 ;src/player.c:143: x_speed = 0U;
      000037 AF               [ 4]  163 	xor	a, a
      000038 21r07r00         [12]  164 	ld	hl, #_x_speed
      00003B 22               [ 8]  165 	ld	(hl+), a
      00003C 77               [ 8]  166 	ld	(hl), a
                                    167 ;src/player.c:144: y_speed = 0;
      00003D 21r0Cr00         [12]  168 	ld	hl, #_y_speed
      000040 36 00            [12]  169 	ld	(hl), #0x00
                                    170 ;src/player.c:145: player_x = last_x = PX_TO_SUB(16U);
      000042 21r10r00         [12]  171 	ld	hl, #_last_x
      000045 AF               [ 4]  172 	xor	a, a
      000046 22               [ 8]  173 	ld	(hl+), a
      000047 36 10            [12]  174 	ld	(hl), #0x10
      000049 21r0Dr00         [12]  175 	ld	hl, #_player_x
      00004C AF               [ 4]  176 	xor	a, a
      00004D 22               [ 8]  177 	ld	(hl+), a
      00004E 36 10            [12]  178 	ld	(hl), #0x10
                                    179 ;src/player.c:146: player_y = last_y = 128U;
      000050 21r12r00         [12]  180 	ld	hl, #_last_y
      000053 36 80            [12]  181 	ld	(hl), #0x80
      000055 21r0Fr00         [12]  182 	ld	hl, #_player_y
      000058 36 80            [12]  183 	ld	(hl), #0x80
                                    184 ;src/player.c:147: is_facing_right = true;
      00005A 21r09r00         [12]  185 	ld	hl, #_is_facing_right
      00005D 36 01            [12]  186 	ld	(hl), #0x01
                                    187 ;src/player.c:148: is_grounded = true;
      00005F 21r0Ar00         [12]  188 	ld	hl, #_is_grounded
      000062 36 01            [12]  189 	ld	(hl), #0x01
                                    190 ;src/player.c:149: next_free_puff = 0;
      000064 21r1Ar00         [12]  191 	ld	hl, #_next_free_puff
      000067 36 00            [12]  192 	ld	(hl), #0x00
                                    193 ;src/player.c:150: score = 0;
      000069 AF               [ 4]  194 	xor	a, a
      00006A 21r15r00         [12]  195 	ld	hl, #_score
      00006D 22               [ 8]  196 	ld	(hl+), a
      00006E 77               [ 8]  197 	ld	(hl), a
                                    198 ;src/player.c:151: highest_visited_floor = 1;
      00006F 21r19r00         [12]  199 	ld	hl, #_highest_visited_floor
      000072 36 01            [12]  200 	ld	(hl), #0x01
                                    201 ;src/player.c:152: max_player_y = 0;
      000074 21r17r00         [12]  202 	ld	hl, #_max_player_y
      000077 36 00            [12]  203 	ld	(hl), #0x00
                                    204 ;src/player.c:153: a_not_pressed = true;
      000079 21r03r00         [12]  205 	ld	hl, #_a_not_pressed
      00007C 36 01            [12]  206 	ld	(hl), #0x01
                                    207 ;src/player.c:154: current_coyote_frames = 0;
      00007E 21r14r00         [12]  208 	ld	hl, #_current_coyote_frames
      000081 36 00            [12]  209 	ld	(hl), #0x00
                                    210 ;src/player.c:155: joy = 0;
      000083 21r05r00         [12]  211 	ld	hl, #_joy
      000086 36 00            [12]  212 	ld	(hl), #0x00
                                    213 ;src/player.c:156: move_metasprite(idle_metasprites[0], TILE_NUM_START, SPR_NUM_START, (uint8_t)SUB_TO_PX(player_x), player_y);
      000088 21r00r00         [12]  214 	ld	hl, #_idle_metasprites
      00008B 2A               [ 8]  215 	ld	a, (hl+)
      00008C 4F               [ 4]  216 	ld	c, a
      00008D 7E               [ 8]  217 	ld	a, (hl)
                                    218 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:160: __current_metasprite = metasprite;
      00008E 21r00r00         [12]  219 	ld	hl, #___current_metasprite
      000091 71               [ 8]  220 	ld	(hl), c
      000092 23               [ 8]  221 	inc	hl
      000093 77               [ 8]  222 	ld	(hl), a
                                    223 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:161: __current_base_tile = base_tile;
      000094 21r00r00         [12]  224 	ld	hl, #___current_base_tile
      000097 36 00            [12]  225 	ld	(hl), #0x00
                                    226 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:162: __current_base_prop = 0;
      000099 21r00r00         [12]  227 	ld	hl, #___current_base_prop
      00009C 36 00            [12]  228 	ld	(hl), #0x00
                                    229 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:163: return __move_metasprite(base_sprite, (y << 8) | (uint8_t)x);
      00009E 11 10 80         [12]  230 	ld	de, #0x8010
      0000A1 AF               [ 4]  231 	xor	a, a
      0000A2 CDr00r00         [24]  232 	call	___move_metasprite
                                    233 ;src/player.c:158: set_sprite_data(0x1B, 2, brick_particle);
      0000A5 11r00r00         [12]  234 	ld	de, #_brick_particle
      0000A8 D5               [16]  235 	push	de
      0000A9 3E 02            [ 8]  236 	ld	a, #0x02
      0000AB F5               [16]  237 	push	af
      0000AC 33               [ 8]  238 	inc	sp
      0000AD 3E 1B            [ 8]  239 	ld	a, #0x1b
      0000AF F5               [16]  240 	push	af
      0000B0 33               [ 8]  241 	inc	sp
      0000B1 CDr00r00         [24]  242 	call	_set_sprite_data
      0000B4 E8 04            [16]  243 	add	sp, #4
                                    244 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1804: shadow_OAM[nb].tile=tile;
      0000B6 21r32r00         [12]  245 	ld	hl, #(_shadow_OAM + 50)
      0000B9 36 1B            [12]  246 	ld	(hl), #0x1b
      0000BB 21r36r00         [12]  247 	ld	hl, #(_shadow_OAM + 54)
      0000BE 36 1B            [12]  248 	ld	(hl), #0x1b
      0000C0 21r3Ar00         [12]  249 	ld	hl, #(_shadow_OAM + 58)
      0000C3 36 1C            [12]  250 	ld	(hl), #0x1c
      0000C5 21r3Er00         [12]  251 	ld	hl, #(_shadow_OAM + 62)
      0000C8 36 1C            [12]  252 	ld	(hl), #0x1c
                                    253 ;src/player.c:163: brick_frame = 0;
      0000CA 21r1Br00         [12]  254 	ld	hl, #_brick_frame
      0000CD 36 00            [12]  255 	ld	(hl), #0x00
                                    256 ;src/player.c:164: }
      0000CF C9               [16]  257 	ret
      0000D0                        258 _jump_g:
      0000D0 02                     259 	.db #0x02	; 2
      0000D1                        260 _fall_g:
      0000D1 04                     261 	.db #0x04	; 4
      0000D2                        262 _impulse:
      0000D2 18                     263 	.db #0x18	; 24
      0000D3                        264 _jump_power:
      0000D3 DD                     265 	.db #0xdd	; -35
      0000D4                        266 _clamp_x_velocity:
      0000D4 00 02                  267 	.dw #0x0200
      0000D6                        268 _clamp_y_velocity:
      0000D6 14                     269 	.db #0x14	;  20
                                    270 ;src/player.c:166: void compute_player_frame(void)
                                    271 ;	---------------------------------
                                    272 ; Function compute_player_frame
                                    273 ; ---------------------------------
      0000D7                        274 _compute_player_frame::
                                    275 ;src/player.c:168: if(current_state == PLAYER_STATE_HURT){
      0000D7 FAr13r00         [16]  276 	ld	a, (#_current_state)
      0000DA D6 04            [ 8]  277 	sub	a, #0x04
      0000DC 20 05            [12]  278 	jr	NZ, 00104$
                                    279 ;src/player.c:169: hurt_frame();
      0000DE CDr56r09         [24]  280 	call	_hurt_frame
      0000E1 18 0C            [12]  281 	jr	00105$
      0000E3                        282 00104$:
                                    283 ;src/player.c:172: retrieve_input();
      0000E3 CDr53r01         [24]  284 	call	_retrieve_input
                                    285 ;src/player.c:174: if(player_dead_flag) return;
      0000E6 21r00r00         [12]  286 	ld	hl, #_player_dead_flag
      0000E9 CB 46            [12]  287 	bit	0, (hl)
      0000EB C0               [20]  288 	ret	NZ
                                    289 ;src/player.c:176: calculate_physics();
      0000EC CDr50r02         [24]  290 	call	_calculate_physics
      0000EF                        291 00105$:
                                    292 ;src/player.c:182: check_collisions();
      0000EF CDr35r0A         [24]  293 	call	_check_collisions
                                    294 ;src/player.c:183: if(y_speed > 0 && (current_state != PLAYER_STATE_HURT && current_state != PLAYER_STATE_FALLING)){
      0000F2 21r0Cr00         [12]  295 	ld	hl, #_y_speed
      0000F5 5E               [ 8]  296 	ld	e, (hl)
      0000F6 AF               [ 4]  297 	xor	a, a
      0000F7 57               [ 4]  298 	ld	d, a
      0000F8 96               [ 8]  299 	sub	a, (hl)
      0000F9 CB 7B            [ 8]  300 	bit	7, e
      0000FB 28 07            [12]  301 	jr	Z, 00166$
      0000FD CB 7A            [ 8]  302 	bit	7, d
      0000FF 20 08            [12]  303 	jr	NZ, 00167$
      000101 BF               [ 4]  304 	cp	a, a
      000102 18 05            [12]  305 	jr	00167$
      000104                        306 00166$:
      000104 CB 7A            [ 8]  307 	bit	7, d
      000106 28 01            [12]  308 	jr	Z, 00167$
      000108 37               [ 4]  309 	scf
      000109                        310 00167$:
      000109 30 1A            [12]  311 	jr	NC, 00107$
      00010B FAr13r00         [16]  312 	ld	a,(#_current_state)
      00010E FE 04            [ 8]  313 	cp	a,#0x04
      000110 28 13            [12]  314 	jr	Z, 00107$
      000112 D6 03            [ 8]  315 	sub	a, #0x03
      000114 28 0F            [12]  316 	jr	Z, 00107$
                                    317 ;src/player.c:184: switch_state(PLAYER_STATE_FALLING);
      000116 3E 03            [ 8]  318 	ld	a, #0x03
      000118 CDr17r0A         [24]  319 	call	_switch_state
                                    320 ;src/player.c:185: is_grounded = false;
      00011B 21r0Ar00         [12]  321 	ld	hl, #_is_grounded
      00011E 36 00            [12]  322 	ld	(hl), #0x00
                                    323 ;src/player.c:186: is_jumping = false;
      000120 21r0Br00         [12]  324 	ld	hl, #_is_jumping
      000123 36 00            [12]  325 	ld	(hl), #0x00
      000125                        326 00107$:
                                    327 ;src/player.c:189: if(current_state == PLAYER_STATE_FALLING && current_coyote_frames < COYOTE_FRAMES) current_coyote_frames++;
      000125 FAr13r00         [16]  328 	ld	a, (#_current_state)
      000128 D6 03            [ 8]  329 	sub	a, #0x03
      00012A 20 09            [12]  330 	jr	NZ, 00111$
      00012C 21r14r00         [12]  331 	ld	hl, #_current_coyote_frames
      00012F 7E               [ 8]  332 	ld	a, (hl)
      000130 D6 04            [ 8]  333 	sub	a, #0x04
      000132 30 01            [12]  334 	jr	NC, 00111$
      000134 34               [12]  335 	inc	(hl)
      000135                        336 00111$:
                                    337 ;src/player.c:191: update_score();
      000135 CDr14r10         [24]  338 	call	_update_score
                                    339 ;src/player.c:193: last_x = player_x;
      000138 FAr0Dr00         [16]  340 	ld	a, (#_player_x)
      00013B EAr10r00         [16]  341 	ld	(#_last_x),a
      00013E FAr0Er00         [16]  342 	ld	a, (#_player_x + 1)
      000141 EAr11r00         [16]  343 	ld	(#_last_x + 1),a
                                    344 ;src/player.c:194: last_y = player_y;
      000144 FAr0Fr00         [16]  345 	ld	a, (#_player_y)
      000147 EAr12r00         [16]  346 	ld	(#_last_y),a
                                    347 ;src/player.c:196: render_all_particles();
      00014A CDrE9r06         [24]  348 	call	_render_all_particles
                                    349 ;src/player.c:198: render_player();
      00014D CDr4Br03         [24]  350 	call	_render_player
                                    351 ;src/player.c:200: end_frame();
                                    352 ;src/player.c:201: }
      000150 C3rAFr09         [16]  353 	jp	_end_frame
                                    354 ;src/player.c:203: static void retrieve_input(void){
                                    355 ;	---------------------------------
                                    356 ; Function retrieve_input
                                    357 ; ---------------------------------
      000153                        358 _retrieve_input:
                                    359 ;src/player.c:204: joy = joypad();
      000153 CDr00r00         [24]  360 	call	_joypad
                                    361 ;src/player.c:205: if (joy & J_RIGHT)
      000156 EAr05r00         [16]  362 	ld	(#_joy),a
      000159 CB 47            [ 8]  363 	bit	0, a
      00015B 28 2D            [12]  364 	jr	Z, 00120$
                                    365 ;src/player.c:207: if(is_grounded)switch_state(PLAYER_STATE_RUNNING);
      00015D 21r0Ar00         [12]  366 	ld	hl, #_is_grounded
      000160 CB 46            [12]  367 	bit	0, (hl)
      000162 28 05            [12]  368 	jr	Z, 00102$
      000164 3E 01            [ 8]  369 	ld	a, #0x01
      000166 CDr17r0A         [24]  370 	call	_switch_state
      000169                        371 00102$:
                                    372 ;src/player.c:208: if (!is_facing_right && x_speed)
      000169 21r09r00         [12]  373 	ld	hl, #_is_facing_right
      00016C CB 46            [12]  374 	bit	0, (hl)
      00016E 20 0E            [12]  375 	jr	NZ, 00104$
      000170 21r08r00         [12]  376 	ld	hl, #_x_speed + 1
      000173 3A               [ 8]  377 	ld	a, (hl-)
      000174 B6               [ 8]  378 	or	a, (hl)
      000175 28 07            [12]  379 	jr	Z, 00104$
                                    380 ;src/player.c:210: x_force = 0;
      000177 21r06r00         [12]  381 	ld	hl, #_x_force
      00017A 36 00            [12]  382 	ld	(hl), #0x00
      00017C 18 52            [12]  383 	jr	00121$
      00017E                        384 00104$:
                                    385 ;src/player.c:214: is_facing_right = true;
      00017E 21r09r00         [12]  386 	ld	hl, #_is_facing_right
      000181 36 01            [12]  387 	ld	(hl), #0x01
                                    388 ;src/player.c:215: x_force = impulse;
      000183 21r06r00         [12]  389 	ld	hl, #_x_force
      000186 36 18            [12]  390 	ld	(hl), #0x18
      000188 18 46            [12]  391 	jr	00121$
      00018A                        392 00120$:
                                    393 ;src/player.c:218: else if (joy & J_LEFT)
      00018A CB 4F            [ 8]  394 	bit	1, a
      00018C 28 2D            [12]  395 	jr	Z, 00117$
                                    396 ;src/player.c:220: if(is_grounded)switch_state(PLAYER_STATE_RUNNING);
      00018E 21r0Ar00         [12]  397 	ld	hl, #_is_grounded
      000191 CB 46            [12]  398 	bit	0, (hl)
      000193 28 05            [12]  399 	jr	Z, 00108$
      000195 3E 01            [ 8]  400 	ld	a, #0x01
      000197 CDr17r0A         [24]  401 	call	_switch_state
      00019A                        402 00108$:
                                    403 ;src/player.c:221: if (is_facing_right && x_speed)
      00019A 21r09r00         [12]  404 	ld	hl, #_is_facing_right
      00019D CB 46            [12]  405 	bit	0, (hl)
      00019F 28 0E            [12]  406 	jr	Z, 00110$
      0001A1 21r08r00         [12]  407 	ld	hl, #_x_speed + 1
      0001A4 3A               [ 8]  408 	ld	a, (hl-)
      0001A5 B6               [ 8]  409 	or	a, (hl)
      0001A6 28 07            [12]  410 	jr	Z, 00110$
                                    411 ;src/player.c:223: x_force = 0;
      0001A8 21r06r00         [12]  412 	ld	hl, #_x_force
      0001AB 36 00            [12]  413 	ld	(hl), #0x00
      0001AD 18 21            [12]  414 	jr	00121$
      0001AF                        415 00110$:
                                    416 ;src/player.c:227: is_facing_right = false;
      0001AF 21r09r00         [12]  417 	ld	hl, #_is_facing_right
      0001B2 36 00            [12]  418 	ld	(hl), #0x00
                                    419 ;src/player.c:228: x_force = impulse;
      0001B4 21r06r00         [12]  420 	ld	hl, #_x_force
      0001B7 36 18            [12]  421 	ld	(hl), #0x18
      0001B9 18 15            [12]  422 	jr	00121$
      0001BB                        423 00117$:
                                    424 ;src/player.c:233: x_force = 0;
      0001BB 21r06r00         [12]  425 	ld	hl, #_x_force
      0001BE 36 00            [12]  426 	ld	(hl), #0x00
                                    427 ;src/player.c:234: if((!x_speed) && (!y_speed)) switch_state(PLAYER_STATE_IDLE);
      0001C0 21r08r00         [12]  428 	ld	hl, #_x_speed + 1
      0001C3 3A               [ 8]  429 	ld	a, (hl-)
      0001C4 B6               [ 8]  430 	or	a, (hl)
      0001C5 20 09            [12]  431 	jr	NZ, 00121$
      0001C7 FAr0Cr00         [16]  432 	ld	a, (#_y_speed)
      0001CA B7               [ 4]  433 	or	a,a
      0001CB 20 03            [12]  434 	jr	NZ, 00121$
      0001CD CDr17r0A         [24]  435 	call	_switch_state
      0001D0                        436 00121$:
                                    437 ;src/player.c:205: if (joy & J_RIGHT)
      0001D0 FAr05r00         [16]  438 	ld	a, (#_joy)
                                    439 ;src/player.c:236: if ((joy & J_A && a_not_pressed) && (is_grounded || current_coyote_frames < COYOTE_FRAMES) && (y_speed >= 0))
      0001D3 E6 10            [ 8]  440 	and	a, #0x10
      0001D5 4F               [ 4]  441 	ld	c, a
      0001D6 B7               [ 4]  442 	or	a, a
      0001D7 28 3A            [12]  443 	jr	Z, 00127$
      0001D9 21r03r00         [12]  444 	ld	hl, #_a_not_pressed
      0001DC CB 46            [12]  445 	bit	0, (hl)
      0001DE 28 33            [12]  446 	jr	Z, 00127$
      0001E0 21r0Ar00         [12]  447 	ld	hl, #_is_grounded
      0001E3 CB 46            [12]  448 	bit	0, (hl)
      0001E5 20 07            [12]  449 	jr	NZ, 00132$
      0001E7 FAr14r00         [16]  450 	ld	a, (#_current_coyote_frames)
      0001EA D6 04            [ 8]  451 	sub	a, #0x04
      0001EC 30 25            [12]  452 	jr	NC, 00127$
      0001EE                        453 00132$:
      0001EE FAr0Cr00         [16]  454 	ld	a, (#_y_speed)
      0001F1 CB 7F            [ 8]  455 	bit	7, a
      0001F3 20 1E            [12]  456 	jr	NZ, 00127$
                                    457 ;src/player.c:238: switch_state(PLAYER_STATE_JUMPING);
      0001F5 3E 02            [ 8]  458 	ld	a, #0x02
      0001F7 CDr17r0A         [24]  459 	call	_switch_state
                                    460 ;src/player.c:239: play_jump_sfx();
      0001FA CDr00r00         [24]  461 	call	_play_jump_sfx
                                    462 ;src/player.c:240: a_not_pressed = false;
      0001FD 21r03r00         [12]  463 	ld	hl, #_a_not_pressed
      000200 36 00            [12]  464 	ld	(hl), #0x00
                                    465 ;src/player.c:241: y_speed = jump_power;
      000202 21r0Cr00         [12]  466 	ld	hl, #_y_speed
      000205 36 DD            [12]  467 	ld	(hl), #0xdd
                                    468 ;src/player.c:242: is_grounded = false;
      000207 21r0Ar00         [12]  469 	ld	hl, #_is_grounded
      00020A 36 00            [12]  470 	ld	(hl), #0x00
                                    471 ;src/player.c:243: is_jumping = true;
      00020C 21r0Br00         [12]  472 	ld	hl, #_is_jumping
      00020F 36 01            [12]  473 	ld	(hl), #0x01
      000211 18 31            [12]  474 	jr	00128$
      000213                        475 00127$:
                                    476 ;src/player.c:245: else if ((!(joy & J_A) || y_speed > 0) && !is_grounded)
      000213 79               [ 4]  477 	ld	a, c
      000214 B7               [ 4]  478 	or	a, a
      000215 28 19            [12]  479 	jr	Z, 00125$
      000217 21r0Cr00         [12]  480 	ld	hl, #_y_speed
      00021A 5E               [ 8]  481 	ld	e, (hl)
      00021B AF               [ 4]  482 	xor	a, a
      00021C 57               [ 4]  483 	ld	d, a
      00021D 96               [ 8]  484 	sub	a, (hl)
      00021E CB 7B            [ 8]  485 	bit	7, e
      000220 28 07            [12]  486 	jr	Z, 00258$
      000222 CB 7A            [ 8]  487 	bit	7, d
      000224 20 08            [12]  488 	jr	NZ, 00259$
      000226 BF               [ 4]  489 	cp	a, a
      000227 18 05            [12]  490 	jr	00259$
      000229                        491 00258$:
      000229 CB 7A            [ 8]  492 	bit	7, d
      00022B 28 01            [12]  493 	jr	Z, 00259$
      00022D 37               [ 4]  494 	scf
      00022E                        495 00259$:
      00022E 30 14            [12]  496 	jr	NC, 00128$
      000230                        497 00125$:
      000230 21r0Ar00         [12]  498 	ld	hl, #_is_grounded
      000233 CB 46            [12]  499 	bit	0, (hl)
      000235 20 0D            [12]  500 	jr	NZ, 00128$
                                    501 ;src/player.c:247: switch_state(PLAYER_STATE_FALLING);
      000237 3E 03            [ 8]  502 	ld	a, #0x03
      000239 CDr17r0A         [24]  503 	call	_switch_state
                                    504 ;src/player.c:248: stop_jump_sfx();
      00023C CDr00r00         [24]  505 	call	_stop_jump_sfx
                                    506 ;src/player.c:249: is_jumping = false;
      00023F 21r0Br00         [12]  507 	ld	hl, #_is_jumping
      000242 36 00            [12]  508 	ld	(hl), #0x00
      000244                        509 00128$:
                                    510 ;src/player.c:251: if(!(joy & J_A)) a_not_pressed = true;
      000244 FAr05r00         [16]  511 	ld	a, (#_joy)
      000247 CB 67            [ 8]  512 	bit	4, a
      000249 C0               [20]  513 	ret	NZ
      00024A 21r03r00         [12]  514 	ld	hl, #_a_not_pressed
      00024D 36 01            [12]  515 	ld	(hl), #0x01
                                    516 ;src/player.c:252: }
      00024F C9               [16]  517 	ret
                                    518 ;src/player.c:254: static void calculate_physics(void){
                                    519 ;	---------------------------------
                                    520 ; Function calculate_physics
                                    521 ; ---------------------------------
      000250                        522 _calculate_physics:
      000250 3B               [ 8]  523 	dec	sp
      000251 3B               [ 8]  524 	dec	sp
                                    525 ;src/player.c:259: player_x = is_facing_right ? player_x + (x_speed) /*+ (x_force >> 2)*/ : player_x - (x_speed) /*- (x_force >> 2)*/;
      000252 FAr07r00         [16]  526 	ld	a, (#_x_speed)
      000255 F8 00            [12]  527 	ldhl	sp,	#0
      000257 77               [ 8]  528 	ld	(hl), a
      000258 FAr08r00         [16]  529 	ld	a, (#_x_speed + 1)
      00025B F8 01            [12]  530 	ldhl	sp,	#1
      00025D 77               [ 8]  531 	ld	(hl), a
      00025E 21r09r00         [12]  532 	ld	hl, #_is_facing_right
      000261 CB 46            [12]  533 	bit	0, (hl)
      000263 28 0D            [12]  534 	jr	Z, 00111$
      000265 D1               [12]  535 	pop	de
      000266 D5               [16]  536 	push	de
      000267 21r0Dr00         [12]  537 	ld	hl, #_player_x
      00026A 2A               [ 8]  538 	ld	a,	(hl+)
      00026B 66               [ 8]  539 	ld	h, (hl)
      00026C 6F               [ 4]  540 	ld	l, a
      00026D 19               [ 8]  541 	add	hl, de
      00026E 4D               [ 4]  542 	ld	c, l
      00026F 44               [ 4]  543 	ld	b, h
      000270 18 0F            [12]  544 	jr	00112$
      000272                        545 00111$:
      000272 21r0Dr00         [12]  546 	ld	hl, #_player_x
      000275 2A               [ 8]  547 	ld	a, (hl+)
      000276 5F               [ 4]  548 	ld	e, a
      000277 56               [ 8]  549 	ld	d, (hl)
      000278 E1               [12]  550 	pop	hl
      000279 E5               [16]  551 	push	hl
      00027A 7B               [ 4]  552 	ld	a, e
      00027B 95               [ 4]  553 	sub	a, l
      00027C 5F               [ 4]  554 	ld	e, a
      00027D 7A               [ 4]  555 	ld	a, d
      00027E 9C               [ 4]  556 	sbc	a, h
      00027F 47               [ 4]  557 	ld	b, a
      000280 4B               [ 4]  558 	ld	c, e
      000281                        559 00112$:
      000281 21r0Dr00         [12]  560 	ld	hl, #_player_x
      000284 79               [ 4]  561 	ld	a, c
      000285 22               [ 8]  562 	ld	(hl+), a
      000286 70               [ 8]  563 	ld	(hl), b
                                    564 ;src/player.c:260: if((uint8_t)(SUB_TO_PX(player_x) - 10U) > 160U) {
      000287 7E               [ 8]  565 	ld	a, (hl)
      000288 C6 F6            [ 8]  566 	add	a, #0xf6
      00028A 4F               [ 4]  567 	ld	c, a
      00028B 3E A0            [ 8]  568 	ld	a, #0xa0
      00028D 91               [ 4]  569 	sub	a, c
      00028E 30 1C            [12]  570 	jr	NC, 00105$
                                    571 ;src/player.c:261: if((uint8_t)(SUB_TO_PX(player_x) - 10U) < 200) player_x = player_x - (160U << 8); //right exit
      000290 2B               [ 8]  572 	dec	hl
      000291 2A               [ 8]  573 	ld	a, (hl+)
      000292 5F               [ 4]  574 	ld	e, a
      000293 46               [ 8]  575 	ld	b, (hl)
      000294 79               [ 4]  576 	ld	a, c
      000295 D6 C8            [ 8]  577 	sub	a, #0xc8
      000297 30 0A            [12]  578 	jr	NC, 00102$
      000299 2B               [ 8]  579 	dec	hl
      00029A 4B               [ 4]  580 	ld	c, e
      00029B 78               [ 4]  581 	ld	a,b
      00029C C6 60            [ 8]  582 	add	a,#0x60
      00029E 71               [ 8]  583 	ld	(hl), c
      00029F 23               [ 8]  584 	inc	hl
      0002A0 77               [ 8]  585 	ld	(hl), a
      0002A1 18 09            [12]  586 	jr	00105$
      0002A3                        587 00102$:
                                    588 ;src/player.c:262: else player_x = player_x + (160U << 8); //left exit
      0002A3 78               [ 4]  589 	ld	a, b
      0002A4 C6 A0            [ 8]  590 	add	a, #0xa0
      0002A6 21r0Dr00         [12]  591 	ld	hl, #_player_x
      0002A9 73               [ 8]  592 	ld	(hl), e
      0002AA 23               [ 8]  593 	inc	hl
      0002AB 77               [ 8]  594 	ld	(hl), a
      0002AC                        595 00105$:
                                    596 ;src/player.c:267: x_speed = x_speed >= clamp_x_velocity ? clamp_x_velocity : x_speed + x_force;
      0002AC 21r07r00         [12]  597 	ld	hl, #_x_speed
      0002AF 2A               [ 8]  598 	ld	a, (hl+)
      0002B0 4F               [ 4]  599 	ld	c, a
      0002B1 46               [ 8]  600 	ld	b, (hl)
                                    601 ;src/player.c:264: if (x_force)
      0002B2 FAr06r00         [16]  602 	ld	a, (#_x_force)
      0002B5 B7               [ 4]  603 	or	a, a
      0002B6 28 20            [12]  604 	jr	Z, 00107$
                                    605 ;src/player.c:267: x_speed = x_speed >= clamp_x_velocity ? clamp_x_velocity : x_speed + x_force;
      0002B8 F8 00            [12]  606 	ldhl	sp,	#0
      0002BA 2A               [ 8]  607 	ld	a, (hl+)
      0002BB D6 00            [ 8]  608 	sub	a, #0x00
      0002BD 7E               [ 8]  609 	ld	a, (hl)
      0002BE DE 02            [ 8]  610 	sbc	a, #0x02
      0002C0 38 05            [12]  611 	jr	C, 00113$
      0002C2 01 00 02         [12]  612 	ld	bc, #0x0200
      0002C5 18 09            [12]  613 	jr	00114$
      0002C7                        614 00113$:
      0002C7 21r06r00         [12]  615 	ld	hl, #_x_force
      0002CA 6E               [ 8]  616 	ld	l, (hl)
                                    617 ;	spillPairReg hl
                                    618 ;	spillPairReg hl
      0002CB 26 00            [ 8]  619 	ld	h, #0x00
                                    620 ;	spillPairReg hl
                                    621 ;	spillPairReg hl
      0002CD 09               [ 8]  622 	add	hl, bc
      0002CE 4D               [ 4]  623 	ld	c, l
      0002CF 44               [ 4]  624 	ld	b, h
      0002D0                        625 00114$:
      0002D0 21r07r00         [12]  626 	ld	hl, #_x_speed
      0002D3 79               [ 4]  627 	ld	a, c
      0002D4 22               [ 8]  628 	ld	(hl+), a
      0002D5 70               [ 8]  629 	ld	(hl), b
      0002D6 18 31            [12]  630 	jr	00108$
      0002D8                        631 00107$:
                                    632 ;src/player.c:272: x_speed = x_speed <= 0 ? 0 : MAX(0, x_speed - (impulse<<1));
      0002D8 58               [ 4]  633 	ld	e, b
      0002D9 AF               [ 4]  634 	xor	a, a
      0002DA 57               [ 4]  635 	ld	d, a
      0002DB B9               [ 4]  636 	cp	a, c
      0002DC 98               [ 4]  637 	sbc	a, b
      0002DD CB 7B            [ 8]  638 	bit	7, e
      0002DF 28 07            [12]  639 	jr	Z, 00195$
      0002E1 CB 7A            [ 8]  640 	bit	7, d
      0002E3 20 08            [12]  641 	jr	NZ, 00196$
      0002E5 BF               [ 4]  642 	cp	a, a
      0002E6 18 05            [12]  643 	jr	00196$
      0002E8                        644 00195$:
      0002E8 CB 7A            [ 8]  645 	bit	7, d
      0002EA 28 01            [12]  646 	jr	Z, 00196$
      0002EC 37               [ 4]  647 	scf
      0002ED                        648 00196$:
      0002ED 38 05            [12]  649 	jr	C, 00115$
      0002EF 01 00 00         [12]  650 	ld	bc, #0x0000
      0002F2 18 0F            [12]  651 	jr	00116$
      0002F4                        652 00115$:
      0002F4 79               [ 4]  653 	ld	a, c
      0002F5 C6 D0            [ 8]  654 	add	a, #0xd0
      0002F7 4F               [ 4]  655 	ld	c, a
      0002F8 78               [ 4]  656 	ld	a, b
      0002F9 CE FF            [ 8]  657 	adc	a, #0xff
      0002FB 47               [ 4]  658 	ld	b, a
      0002FC CB 78            [ 8]  659 	bit	7, b
      0002FE 28 03            [12]  660 	jr	Z, 00117$
      000300 01 00 00         [12]  661 	ld	bc, #0x0000
      000303                        662 00117$:
      000303                        663 00116$:
      000303 21r07r00         [12]  664 	ld	hl, #_x_speed
      000306 79               [ 4]  665 	ld	a, c
      000307 22               [ 8]  666 	ld	(hl+), a
      000308 70               [ 8]  667 	ld	(hl), b
      000309                        668 00108$:
                                    669 ;src/player.c:275: player_y += (y_speed >> (PHYSICS_DAMPNER + 1)) + ((is_jumping ? jump_g : fall_g) >> 2);
      000309 21r0Cr00         [12]  670 	ld	hl, #_y_speed
      00030C 4E               [ 8]  671 	ld	c, (hl)
      00030D CB 29            [ 8]  672 	sra	c
      00030F CB 29            [ 8]  673 	sra	c
      000311 CB 29            [ 8]  674 	sra	c
      000313 21r0Br00         [12]  675 	ld	hl, #_is_jumping
      000316 CB 46            [12]  676 	bit	0, (hl)
      000318 3E 02            [ 8]  677 	ld	a, #0x02
      00031A 20 02            [12]  678 	jr	NZ, 00120$
      00031C 3E 04            [ 8]  679 	ld	a, #0x04
      00031E                        680 00120$:
      00031E 0F               [ 4]  681 	rrca
      00031F 0F               [ 4]  682 	rrca
      000320 E6 3F            [ 8]  683 	and	a, #0x3f
      000322 81               [ 4]  684 	add	a, c
      000323 21r0Fr00         [12]  685 	ld	hl, #_player_y
      000326 4E               [ 8]  686 	ld	c, (hl)
      000327 81               [ 4]  687 	add	a, c
      000328 77               [ 8]  688 	ld	(hl), a
                                    689 ;src/player.c:278: y_speed = y_speed >= clamp_y_velocity ? clamp_y_velocity : y_speed + (is_jumping ? jump_g : fall_g);
      000329 FAr0Cr00         [16]  690 	ld	a, (#_y_speed)
      00032C EE 80            [ 8]  691 	xor	a, #0x80
      00032E D6 94            [ 8]  692 	sub	a, #0x94
      000330 38 04            [12]  693 	jr	C, 00121$
      000332 3E 14            [ 8]  694 	ld	a, #0x14
      000334 18 0F            [12]  695 	jr	00122$
      000336                        696 00121$:
      000336 21r0Br00         [12]  697 	ld	hl, #_is_jumping
      000339 CB 46            [12]  698 	bit	0, (hl)
      00033B 3E 02            [ 8]  699 	ld	a, #0x02
      00033D 20 02            [12]  700 	jr	NZ, 00124$
      00033F 3E 04            [ 8]  701 	ld	a, #0x04
      000341                        702 00124$:
      000341 21r0Cr00         [12]  703 	ld	hl, #_y_speed
      000344 86               [ 8]  704 	add	a, (hl)
      000345                        705 00122$:
      000345 EAr0Cr00         [16]  706 	ld	(#_y_speed),a
                                    707 ;src/player.c:279: }
      000348 33               [ 8]  708 	inc	sp
      000349 33               [ 8]  709 	inc	sp
      00034A C9               [16]  710 	ret
                                    711 ;src/player.c:281: void render_player(void){
                                    712 ;	---------------------------------
                                    713 ; Function render_player
                                    714 ; ---------------------------------
      00034B                        715 _render_player::
      00034B E8 F8            [16]  716 	add	sp, #-8
                                    717 ;src/player.c:285: if(!player_dead_flag && (uint8_t)(player_y - camera_y) > 160U) {
      00034D FAr0Fr00         [16]  718 	ld	a, (#_player_y)
      000350 21r00r00         [12]  719 	ld	hl, #_camera_y
      000353 96               [ 8]  720 	sub	a, (hl)
      000354 F8 07            [12]  721 	ldhl	sp,	#7
      000356 77               [ 8]  722 	ld	(hl), a
      000357 21r00r00         [12]  723 	ld	hl, #_player_dead_flag
      00035A CB 46            [12]  724 	bit	0, (hl)
      00035C 20 20            [12]  725 	jr	NZ, 00102$
      00035E 3E A0            [ 8]  726 	ld	a, #0xa0
      000360 F8 07            [12]  727 	ldhl	sp,	#7
      000362 96               [ 8]  728 	sub	a, (hl)
      000363 30 19            [12]  729 	jr	NC, 00102$
                                    730 ;src/player.c:286: player_dead_flag = true;
      000365 21r00r00         [12]  731 	ld	hl, #_player_dead_flag
      000368 36 01            [12]  732 	ld	(hl), #0x01
                                    733 ;src/player.c:287: game_ended_flag = true;
      00036A 21r00r00         [12]  734 	ld	hl, #_game_ended_flag
      00036D 36 01            [12]  735 	ld	(hl), #0x01
                                    736 ;src/player.c:288: calculate_final_score();
      00036F CDr8Br10         [24]  737 	call	_calculate_final_score
                                    738 ;src/player.c:289: stop_sfx();
      000372 CDr00r00         [24]  739 	call	_stop_sfx
                                    740 ;src/player.c:292: hide_sprites_range(0, 20);
      000375 1E 14            [ 8]  741 	ld	e, #0x14
      000377 AF               [ 4]  742 	xor	a, a
      000378 CDr00r00         [24]  743 	call	_hide_sprites_range
                                    744 ;src/player.c:293: return;
      00037B C3rE6r06         [16]  745 	jp	00127$
      00037E                        746 00102$:
                                    747 ;src/player.c:296: hide_metasprite(metasprites_states[current_state][current_frame], 0);
      00037E 21r13r00         [12]  748 	ld	hl, #_current_state
      000381 46               [ 8]  749 	ld	b, (hl)
      000382 1E 00            [ 8]  750 	ld	e, #0x00
      000384 FAr02r00         [16]  751 	ld	a, (#_current_frame)
      000387 0E 00            [ 8]  752 	ld	c, #0x00
      000389 CB 20            [ 8]  753 	sla	b
      00038B CB 13            [ 8]  754 	rl	e
      00038D F8 04            [12]  755 	ldhl	sp,	#4
      00038F 70               [ 8]  756 	ld	(hl), b
      000390 23               [ 8]  757 	inc	hl
      000391 73               [ 8]  758 	ld	(hl), e
      000392 87               [ 4]  759 	add	a, a
      000393 CB 11            [ 8]  760 	rl	c
      000395 F8 00            [12]  761 	ldhl	sp,	#0
      000397 22               [ 8]  762 	ld	(hl+), a
      000398 71               [ 8]  763 	ld	(hl), c
                                    764 ;src/player.c:295: if(current_state == PLAYER_STATE_HURT && (frame_counter & 0x02)){
      000399 FAr13r00         [16]  765 	ld	a, (#_current_state)
      00039C D6 04            [ 8]  766 	sub	a, #0x04
      00039E 20 52            [12]  767 	jr	NZ, 00107$
      0003A0 FAr01r00         [16]  768 	ld	a, (#_frame_counter)
      0003A3 CB 4F            [ 8]  769 	bit	1, a
      0003A5 28 4B            [12]  770 	jr	Z, 00107$
                                    771 ;src/player.c:296: hide_metasprite(metasprites_states[current_state][current_frame], 0);
      0003A7 11r00r00         [12]  772 	ld	de, #_metasprites_states
      0003AA F8 04            [12]  773 	ldhl	sp,	#4
      0003AC 2A               [ 8]  774 	ld	a,	(hl+)
      0003AD 66               [ 8]  775 	ld	h, (hl)
      0003AE 6F               [ 4]  776 	ld	l, a
      0003AF 19               [ 8]  777 	add	hl, de
      0003B0 2A               [ 8]  778 	ld	a, (hl+)
      0003B1 4F               [ 4]  779 	ld	c, a
      0003B2 46               [ 8]  780 	ld	b, (hl)
      0003B3 E1               [12]  781 	pop	hl
      0003B4 E5               [16]  782 	push	hl
      0003B5 09               [ 8]  783 	add	hl, bc
      0003B6 2A               [ 8]  784 	ld	a, (hl+)
      0003B7 4F               [ 4]  785 	ld	c, a
      0003B8 7E               [ 8]  786 	ld	a, (hl)
                                    787 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:297: __current_metasprite = metasprite;
      0003B9 21r00r00         [12]  788 	ld	hl, #___current_metasprite
      0003BC 71               [ 8]  789 	ld	(hl), c
      0003BD 23               [ 8]  790 	inc	hl
      0003BE 77               [ 8]  791 	ld	(hl), a
                                    792 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:298: __hide_metasprite(base_sprite);
      0003BF AF               [ 4]  793 	xor	a, a
      0003C0 CDr00r00         [24]  794 	call	___hide_metasprite
                                    795 ;src/player.c:297: hide_metasprite(metasprites_states[current_state][current_frame], 4);
      0003C3 21r13r00         [12]  796 	ld	hl, #_current_state
      0003C6 6E               [ 8]  797 	ld	l, (hl)
                                    798 ;	spillPairReg hl
                                    799 ;	spillPairReg hl
      0003C7 26 00            [ 8]  800 	ld	h, #0x00
                                    801 ;	spillPairReg hl
                                    802 ;	spillPairReg hl
      0003C9 29               [ 8]  803 	add	hl, hl
      0003CA 11r00r00         [12]  804 	ld	de, #_metasprites_states
      0003CD 19               [ 8]  805 	add	hl, de
      0003CE 2A               [ 8]  806 	ld	a, (hl+)
      0003CF 4F               [ 4]  807 	ld	c, a
      0003D0 46               [ 8]  808 	ld	b, (hl)
      0003D1 21r02r00         [12]  809 	ld	hl, #_current_frame
      0003D4 6E               [ 8]  810 	ld	l, (hl)
                                    811 ;	spillPairReg hl
                                    812 ;	spillPairReg hl
      0003D5 26 00            [ 8]  813 	ld	h, #0x00
                                    814 ;	spillPairReg hl
                                    815 ;	spillPairReg hl
      0003D7 29               [ 8]  816 	add	hl, hl
      0003D8 09               [ 8]  817 	add	hl, bc
      0003D9 2A               [ 8]  818 	ld	a, (hl+)
      0003DA 4E               [ 8]  819 	ld	c, (hl)
      0003DB 21r00r00         [12]  820 	ld	hl, #___current_metasprite
      0003DE 22               [ 8]  821 	ld	(hl+), a
      0003DF 71               [ 8]  822 	ld	(hl), c
                                    823 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:298: __hide_metasprite(base_sprite);
      0003E0 3E 04            [ 8]  824 	ld	a, #0x04
      0003E2 CDr00r00         [24]  825 	call	___hide_metasprite
      0003E5 FAr01r00         [16]  826 	ld	a, (#_frame_counter)
      0003E8 0F               [ 4]  827 	rrca
      0003E9 D2rE6r06         [16]  828 	jp	NC,00127$
      0003EC CDr00r00         [24]  829 	call	_play_hurt_sfx
                                    830 ;src/player.c:299: return;
      0003EF C3rE6r06         [16]  831 	jp	00127$
      0003F2                        832 00107$:
                                    833 ;src/player.c:302: is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, SPR_NUM_START, SUB_TO_PX(player_x), (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, SPR_NUM_START, SUB_TO_PX(player_x), (uint8_t)(player_y - camera_y));
      0003F2 21r09r00         [12]  834 	ld	hl, #_is_facing_right
      0003F5 CB 46            [12]  835 	bit	0, (hl)
      0003F7 CAr7Fr04         [16]  836 	jp	Z, 00129$
      0003FA F8 07            [12]  837 	ldhl	sp,	#7
      0003FC 7E               [ 8]  838 	ld	a, (hl)
      0003FD F8 02            [12]  839 	ldhl	sp,	#2
      0003FF 77               [ 8]  840 	ld	(hl), a
      000400 FAr0Er00         [16]  841 	ld	a, (#_player_x + 1)
      000403 F8 03            [12]  842 	ldhl	sp,	#3
      000405 22               [ 8]  843 	ld	(hl+), a
      000406 2A               [ 8]  844 	ld	a, (hl+)
      000407 5F               [ 4]  845 	ld	e, a
      000408 56               [ 8]  846 	ld	d, (hl)
      000409 21r00r00         [12]  847 	ld	hl, #_metasprites_states
      00040C 19               [ 8]  848 	add	hl, de
      00040D E5               [16]  849 	push	hl
      00040E 7D               [ 4]  850 	ld	a, l
      00040F F8 08            [12]  851 	ldhl	sp,	#8
      000411 77               [ 8]  852 	ld	(hl), a
      000412 E1               [12]  853 	pop	hl
      000413 7C               [ 4]  854 	ld	a, h
      000414 F8 07            [12]  855 	ldhl	sp,	#7
      000416 32               [ 8]  856 	ld	(hl-), a
      000417 2A               [ 8]  857 	ld	a, (hl+)
      000418 5F               [ 4]  858 	ld	e, a
      000419 56               [ 8]  859 	ld	d, (hl)
      00041A 1A               [ 8]  860 	ld	a, (de)
      00041B F8 04            [12]  861 	ldhl	sp,	#4
      00041D 22               [ 8]  862 	ld	(hl+), a
      00041E 13               [ 8]  863 	inc	de
      00041F 1A               [ 8]  864 	ld	a, (de)
      000420 32               [ 8]  865 	ld	(hl-), a
      000421 2A               [ 8]  866 	ld	a, (hl+)
      000422 5F               [ 4]  867 	ld	e, a
      000423 56               [ 8]  868 	ld	d, (hl)
      000424 E1               [12]  869 	pop	hl
      000425 E5               [16]  870 	push	hl
      000426 19               [ 8]  871 	add	hl, de
      000427 E5               [16]  872 	push	hl
      000428 7D               [ 4]  873 	ld	a, l
      000429 F8 08            [12]  874 	ldhl	sp,	#8
      00042B 77               [ 8]  875 	ld	(hl), a
      00042C E1               [12]  876 	pop	hl
      00042D 7C               [ 4]  877 	ld	a, h
      00042E F8 07            [12]  878 	ldhl	sp,	#7
      000430 32               [ 8]  879 	ld	(hl-), a
      000431 2A               [ 8]  880 	ld	a, (hl+)
      000432 5F               [ 4]  881 	ld	e, a
      000433 3A               [ 8]  882 	ld	a, (hl-)
      000434 57               [ 4]  883 	ld	d, a
      000435 1A               [ 8]  884 	ld	a, (de)
      000436 22               [ 8]  885 	ld	(hl+), a
      000437 13               [ 8]  886 	inc	de
      000438 1A               [ 8]  887 	ld	a, (de)
                                    888 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:160: __current_metasprite = metasprite;
      000439 32               [ 8]  889 	ld	(hl-), a
      00043A 7E               [ 8]  890 	ld	a, (hl)
      00043B EAr00r00         [16]  891 	ld	(#___current_metasprite),a
      00043E F8 07            [12]  892 	ldhl	sp,	#7
      000440 7E               [ 8]  893 	ld	a, (hl)
      000441 EAr01r00         [16]  894 	ld	(#___current_metasprite + 1),a
                                    895 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:161: __current_base_tile = base_tile;
      000444 21r00r00         [12]  896 	ld	hl, #___current_base_tile
      000447 36 00            [12]  897 	ld	(hl), #0x00
                                    898 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:162: __current_base_prop = 0;
      000449 21r00r00         [12]  899 	ld	hl, #___current_base_prop
      00044C 36 00            [12]  900 	ld	(hl), #0x00
                                    901 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:163: return __move_metasprite(base_sprite, (y << 8) | (uint8_t)x);
      00044E F8 02            [12]  902 	ldhl	sp,	#2
      000450 7E               [ 8]  903 	ld	a, (hl)
      000451 F8 06            [12]  904 	ldhl	sp,	#6
      000453 22               [ 8]  905 	ld	(hl+), a
      000454 AF               [ 4]  906 	xor	a, a
      000455 32               [ 8]  907 	ld	(hl-), a
      000456 2A               [ 8]  908 	ld	a, (hl+)
      000457 32               [ 8]  909 	ld	(hl-), a
      000458 36 00            [12]  910 	ld	(hl), #0x00
      00045A F8 03            [12]  911 	ldhl	sp,	#3
      00045C 2A               [ 8]  912 	ld	a, (hl+)
      00045D 22               [ 8]  913 	ld	(hl+), a
      00045E AF               [ 4]  914 	xor	a, a
      00045F 22               [ 8]  915 	ld	(hl+), a
      000460 3A               [ 8]  916 	ld	a, (hl-)
      000461 2B               [ 8]  917 	dec	hl
      000462 B6               [ 8]  918 	or	a, (hl)
      000463 2B               [ 8]  919 	dec	hl
      000464 2B               [ 8]  920 	dec	hl
      000465 77               [ 8]  921 	ld	(hl), a
      000466 F8 07            [12]  922 	ldhl	sp,	#7
      000468 7E               [ 8]  923 	ld	a, (hl)
      000469 F8 03            [12]  924 	ldhl	sp,	#3
      00046B 32               [ 8]  925 	ld	(hl-), a
      00046C 7E               [ 8]  926 	ld	a, (hl)
      00046D F8 06            [12]  927 	ldhl	sp,	#6
      00046F 77               [ 8]  928 	ld	(hl), a
      000470 F8 03            [12]  929 	ldhl	sp,	#3
      000472 7E               [ 8]  930 	ld	a, (hl)
      000473 F8 07            [12]  931 	ldhl	sp,	#7
      000475 32               [ 8]  932 	ld	(hl-), a
      000476 2A               [ 8]  933 	ld	a, (hl+)
      000477 5F               [ 4]  934 	ld	e, a
      000478 56               [ 8]  935 	ld	d, (hl)
      000479 AF               [ 4]  936 	xor	a, a
      00047A CDr00r00         [24]  937 	call	___move_metasprite
                                    938 ;src/player.c:302: is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, SPR_NUM_START, SUB_TO_PX(player_x), (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, SPR_NUM_START, SUB_TO_PX(player_x), (uint8_t)(player_y - camera_y));
      00047D 18 35            [12]  939 	jr	00130$
      00047F                        940 00129$:
      00047F FAr0Er00         [16]  941 	ld	a, (#_player_x + 1)
      000482 F8 06            [12]  942 	ldhl	sp,	#6
      000484 32               [ 8]  943 	ld	(hl-), a
      000485 11r00r00         [12]  944 	ld	de, #_metasprites_states
      000488 3A               [ 8]  945 	ld	a, (hl-)
      000489 6E               [ 8]  946 	ld	l, (hl)
      00048A 67               [ 4]  947 	ld	h, a
      00048B 19               [ 8]  948 	add	hl, de
      00048C 2A               [ 8]  949 	ld	a, (hl+)
      00048D 4F               [ 4]  950 	ld	c, a
      00048E 46               [ 8]  951 	ld	b, (hl)
      00048F E1               [12]  952 	pop	hl
      000490 E5               [16]  953 	push	hl
      000491 09               [ 8]  954 	add	hl, bc
      000492 2A               [ 8]  955 	ld	a, (hl+)
      000493 4F               [ 4]  956 	ld	c, a
      000494 7E               [ 8]  957 	ld	a, (hl)
                                    958 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:200: __current_metasprite = metasprite;
      000495 21r00r00         [12]  959 	ld	hl, #___current_metasprite
      000498 71               [ 8]  960 	ld	(hl), c
      000499 23               [ 8]  961 	inc	hl
      00049A 77               [ 8]  962 	ld	(hl), a
                                    963 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:201: __current_base_tile = base_tile;
      00049B 21r00r00         [12]  964 	ld	hl, #___current_base_tile
      00049E 36 00            [12]  965 	ld	(hl), #0x00
                                    966 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:202: __current_base_prop = 0;
      0004A0 21r00r00         [12]  967 	ld	hl, #___current_base_prop
      0004A3 36 00            [12]  968 	ld	(hl), #0x00
                                    969 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:203: return __move_metasprite_vflip(base_sprite, (y << 8) | (uint8_t)(x - 8u));
      0004A5 F8 07            [12]  970 	ldhl	sp,	#7
      0004A7 3A               [ 8]  971 	ld	a, (hl-)
      0004A8 57               [ 4]  972 	ld	d, a
      0004A9 1E 00            [ 8]  973 	ld	e, #0x00
      0004AB 7E               [ 8]  974 	ld	a, (hl)
      0004AC C6 F8            [ 8]  975 	add	a, #0xf8
      0004AE B3               [ 4]  976 	or	a,e
      0004AF 5F               [ 4]  977 	ld	e, a
      0004B0 AF               [ 4]  978 	xor	a, a
      0004B1 CDr00r00         [24]  979 	call	___move_metasprite_vflip
                                    980 ;src/player.c:302: is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, SPR_NUM_START, SUB_TO_PX(player_x), (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, SPR_NUM_START, SUB_TO_PX(player_x), (uint8_t)(player_y - camera_y));
      0004B4                        981 00130$:
                                    982 ;src/player.c:303: if((uint8_t)(SUB_TO_PX(player_x)) > 160U) {
      0004B4 FAr0Er00         [16]  983 	ld	a, (#_player_x + 1)
      0004B7 F8 03            [12]  984 	ldhl	sp,	#3
      0004B9 77               [ 8]  985 	ld	(hl), a
                                    986 ;src/player.c:296: hide_metasprite(metasprites_states[current_state][current_frame], 0);
      0004BA 21r13r00         [12]  987 	ld	hl, #_current_state
      0004BD 5E               [ 8]  988 	ld	e, (hl)
      0004BE 16 00            [ 8]  989 	ld	d, #0x00
      0004C0 21r02r00         [12]  990 	ld	hl, #_current_frame
      0004C3 4E               [ 8]  991 	ld	c, (hl)
      0004C4 06 00            [ 8]  992 	ld	b, #0x00
      0004C6 CB 23            [ 8]  993 	sla	e
      0004C8 CB 12            [ 8]  994 	rl	d
      0004CA F8 04            [12]  995 	ldhl	sp,	#4
      0004CC 7B               [ 4]  996 	ld	a, e
      0004CD 22               [ 8]  997 	ld	(hl+), a
                                    998 ;src/player.c:303: if((uint8_t)(SUB_TO_PX(player_x)) > 160U) {
      0004CE 7A               [ 4]  999 	ld	a, d
      0004CF 32               [ 8] 1000 	ld	(hl-), a
      0004D0 2B               [ 8] 1001 	dec	hl
      0004D1 CB 21            [ 8] 1002 	sla	c
      0004D3 CB 10            [ 8] 1003 	rl	b
      0004D5 33               [ 8] 1004 	inc	sp
      0004D6 33               [ 8] 1005 	inc	sp
      0004D7 C5               [16] 1006 	push	bc
      0004D8 3E A0            [ 8] 1007 	ld	a, #0xa0
      0004DA 96               [ 8] 1008 	sub	a, (hl)
      0004DB D2r85r06         [16] 1009 	jp	NC, 00113$
                                   1010 ;src/player.c:285: if(!player_dead_flag && (uint8_t)(player_y - camera_y) > 160U) {
      0004DE FAr0Fr00         [16] 1011 	ld	a, (#_player_y)
      0004E1 21r00r00         [12] 1012 	ld	hl, #_camera_y
      0004E4 96               [ 8] 1013 	sub	a, (hl)
      0004E5 F8 06            [12] 1014 	ldhl	sp,	#6
      0004E7 77               [ 8] 1015 	ld	(hl), a
                                   1016 ;src/player.c:304: if((uint8_t)(SUB_TO_PX(player_x)) < 200) is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, SUB_TO_PX(player_x) - 160U, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, SUB_TO_PX(player_x) - 160, (uint8_t)(player_y - camera_y)); //right exit
      0004E8 F8 03            [12] 1017 	ldhl	sp,	#3
      0004EA 7E               [ 8] 1018 	ld	a, (hl)
      0004EB F8 07            [12] 1019 	ldhl	sp,	#7
      0004ED 77               [ 8] 1020 	ld	(hl), a
      0004EE F8 03            [12] 1021 	ldhl	sp,	#3
      0004F0 7E               [ 8] 1022 	ld	a, (hl)
      0004F1 D6 C8            [ 8] 1023 	sub	a, #0xc8
      0004F3 D2r76r05         [16] 1024 	jp	NC, 00110$
      0004F6 21r09r00         [12] 1025 	ld	hl, #_is_facing_right
      0004F9 CB 46            [12] 1026 	bit	0, (hl)
      0004FB 28 3E            [12] 1027 	jr	Z, 00131$
      0004FD F8 06            [12] 1028 	ldhl	sp,	#6
      0004FF 2A               [ 8] 1029 	ld	a, (hl+)
      000500 77               [ 8] 1030 	ld	(hl), a
      000501 F8 03            [12] 1031 	ldhl	sp,	#3
      000503 7E               [ 8] 1032 	ld	a, (hl)
      000504 C6 60            [ 8] 1033 	add	a, #0x60
      000506 F8 06            [12] 1034 	ldhl	sp,	#6
      000508 32               [ 8] 1035 	ld	(hl-), a
      000509 11r00r00         [12] 1036 	ld	de, #_metasprites_states
      00050C 3A               [ 8] 1037 	ld	a, (hl-)
      00050D 6E               [ 8] 1038 	ld	l, (hl)
      00050E 67               [ 4] 1039 	ld	h, a
      00050F 19               [ 8] 1040 	add	hl, de
      000510 2A               [ 8] 1041 	ld	a, (hl+)
      000511 4F               [ 4] 1042 	ld	c, a
      000512 46               [ 8] 1043 	ld	b, (hl)
      000513 E1               [12] 1044 	pop	hl
      000514 E5               [16] 1045 	push	hl
      000515 09               [ 8] 1046 	add	hl, bc
      000516 2A               [ 8] 1047 	ld	a, (hl+)
      000517 4F               [ 4] 1048 	ld	c, a
      000518 46               [ 8] 1049 	ld	b, (hl)
                                   1050 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:160: __current_metasprite = metasprite;
      000519 21r00r00         [12] 1051 	ld	hl, #___current_metasprite
      00051C 79               [ 4] 1052 	ld	a, c
      00051D 22               [ 8] 1053 	ld	(hl+), a
      00051E 70               [ 8] 1054 	ld	(hl), b
                                   1055 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:161: __current_base_tile = base_tile;
      00051F 21r00r00         [12] 1056 	ld	hl, #___current_base_tile
      000522 36 00            [12] 1057 	ld	(hl), #0x00
                                   1058 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:162: __current_base_prop = 0;
      000524 21r00r00         [12] 1059 	ld	hl, #___current_base_prop
      000527 36 00            [12] 1060 	ld	(hl), #0x00
                                   1061 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:163: return __move_metasprite(base_sprite, (y << 8) | (uint8_t)x);
      000529 F8 07            [12] 1062 	ldhl	sp,	#7
      00052B 3A               [ 8] 1063 	ld	a, (hl-)
      00052C 57               [ 4] 1064 	ld	d, a
      00052D 1E 00            [ 8] 1065 	ld	e, #0x00
      00052F 4E               [ 8] 1066 	ld	c, (hl)
      000530 7B               [ 4] 1067 	ld	a, e
      000531 B1               [ 4] 1068 	or	a, c
      000532 5F               [ 4] 1069 	ld	e, a
      000533 3E 04            [ 8] 1070 	ld	a, #0x04
      000535 CDr00r00         [24] 1071 	call	___move_metasprite
                                   1072 ;src/player.c:304: if((uint8_t)(SUB_TO_PX(player_x)) < 200) is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, SUB_TO_PX(player_x) - 160U, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, SUB_TO_PX(player_x) - 160, (uint8_t)(player_y - camera_y)); //right exit
      000538 C3rC9r06         [16] 1073 	jp	00114$
      00053B                       1074 00131$:
      00053B F8 07            [12] 1075 	ldhl	sp,	#7
      00053D 7E               [ 8] 1076 	ld	a, (hl)
      00053E C6 60            [ 8] 1077 	add	a, #0x60
      000540 77               [ 8] 1078 	ld	(hl), a
      000541 11r00r00         [12] 1079 	ld	de, #_metasprites_states
      000544 F8 04            [12] 1080 	ldhl	sp,	#4
      000546 2A               [ 8] 1081 	ld	a,	(hl+)
      000547 66               [ 8] 1082 	ld	h, (hl)
      000548 6F               [ 4] 1083 	ld	l, a
      000549 19               [ 8] 1084 	add	hl, de
      00054A 2A               [ 8] 1085 	ld	a, (hl+)
      00054B 4F               [ 4] 1086 	ld	c, a
      00054C 46               [ 8] 1087 	ld	b, (hl)
      00054D E1               [12] 1088 	pop	hl
      00054E E5               [16] 1089 	push	hl
      00054F 09               [ 8] 1090 	add	hl, bc
      000550 2A               [ 8] 1091 	ld	a, (hl+)
      000551 4F               [ 4] 1092 	ld	c, a
      000552 46               [ 8] 1093 	ld	b, (hl)
                                   1094 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:200: __current_metasprite = metasprite;
      000553 21r00r00         [12] 1095 	ld	hl, #___current_metasprite
      000556 79               [ 4] 1096 	ld	a, c
      000557 22               [ 8] 1097 	ld	(hl+), a
      000558 70               [ 8] 1098 	ld	(hl), b
                                   1099 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:201: __current_base_tile = base_tile;
      000559 21r00r00         [12] 1100 	ld	hl, #___current_base_tile
      00055C 36 00            [12] 1101 	ld	(hl), #0x00
                                   1102 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:202: __current_base_prop = 0;
      00055E 21r00r00         [12] 1103 	ld	hl, #___current_base_prop
      000561 36 00            [12] 1104 	ld	(hl), #0x00
                                   1105 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:203: return __move_metasprite_vflip(base_sprite, (y << 8) | (uint8_t)(x - 8u));
      000563 F8 06            [12] 1106 	ldhl	sp,	#6
      000565 2A               [ 8] 1107 	ld	a, (hl+)
      000566 57               [ 4] 1108 	ld	d, a
      000567 1E 00            [ 8] 1109 	ld	e, #0x00
      000569 7E               [ 8] 1110 	ld	a, (hl)
      00056A C6 F8            [ 8] 1111 	add	a, #0xf8
      00056C B3               [ 4] 1112 	or	a, e
      00056D 5F               [ 4] 1113 	ld	e, a
      00056E 3E 04            [ 8] 1114 	ld	a, #0x04
      000570 CDr00r00         [24] 1115 	call	___move_metasprite_vflip
                                   1116 ;src/player.c:304: if((uint8_t)(SUB_TO_PX(player_x)) < 200) is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, SUB_TO_PX(player_x) - 160U, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, SUB_TO_PX(player_x) - 160, (uint8_t)(player_y - camera_y)); //right exit
      000573 C3rC9r06         [16] 1117 	jp	00114$
      000576                       1118 00110$:
                                   1119 ;src/player.c:305: else is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, SUB_TO_PX(player_x) + 160U, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, SUB_TO_PX(player_x) + 160, (uint8_t)(player_y - camera_y)); //left exit
      000576 21r09r00         [12] 1120 	ld	hl, #_is_facing_right
      000579 CB 46            [12] 1121 	bit	0, (hl)
      00057B 28 7B            [12] 1122 	jr	Z, 00133$
      00057D F8 06            [12] 1123 	ldhl	sp,	#6
      00057F 2A               [ 8] 1124 	ld	a, (hl+)
      000580 77               [ 8] 1125 	ld	(hl), a
      000581 F8 03            [12] 1126 	ldhl	sp,	#3
      000583 7E               [ 8] 1127 	ld	a, (hl)
      000584 C6 A0            [ 8] 1128 	add	a, #0xa0
      000586 F8 06            [12] 1129 	ldhl	sp,	#6
      000588 32               [ 8] 1130 	ld	(hl-), a
      000589 2B               [ 8] 1131 	dec	hl
      00058A 2A               [ 8] 1132 	ld	a, (hl+)
      00058B 5F               [ 4] 1133 	ld	e, a
      00058C 56               [ 8] 1134 	ld	d, (hl)
      00058D 21r00r00         [12] 1135 	ld	hl, #_metasprites_states
      000590 19               [ 8] 1136 	add	hl, de
      000591 E5               [16] 1137 	push	hl
      000592 7D               [ 4] 1138 	ld	a, l
      000593 F8 04            [12] 1139 	ldhl	sp,	#4
      000595 77               [ 8] 1140 	ld	(hl), a
      000596 E1               [12] 1141 	pop	hl
      000597 7C               [ 4] 1142 	ld	a, h
      000598 F8 03            [12] 1143 	ldhl	sp,	#3
      00059A 32               [ 8] 1144 	ld	(hl-), a
      00059B 2A               [ 8] 1145 	ld	a, (hl+)
      00059C 5F               [ 4] 1146 	ld	e, a
      00059D 2A               [ 8] 1147 	ld	a, (hl+)
      00059E 57               [ 4] 1148 	ld	d, a
      00059F 1A               [ 8] 1149 	ld	a, (de)
      0005A0 22               [ 8] 1150 	ld	(hl+), a
      0005A1 13               [ 8] 1151 	inc	de
      0005A2 1A               [ 8] 1152 	ld	a, (de)
      0005A3 32               [ 8] 1153 	ld	(hl-), a
      0005A4 2A               [ 8] 1154 	ld	a, (hl+)
      0005A5 5F               [ 4] 1155 	ld	e, a
      0005A6 56               [ 8] 1156 	ld	d, (hl)
      0005A7 E1               [12] 1157 	pop	hl
      0005A8 E5               [16] 1158 	push	hl
      0005A9 19               [ 8] 1159 	add	hl, de
      0005AA E5               [16] 1160 	push	hl
      0005AB 7D               [ 4] 1161 	ld	a, l
      0005AC F8 04            [12] 1162 	ldhl	sp,	#4
      0005AE 77               [ 8] 1163 	ld	(hl), a
      0005AF E1               [12] 1164 	pop	hl
      0005B0 7C               [ 4] 1165 	ld	a, h
      0005B1 F8 03            [12] 1166 	ldhl	sp,	#3
      0005B3 32               [ 8] 1167 	ld	(hl-), a
      0005B4 2A               [ 8] 1168 	ld	a, (hl+)
      0005B5 5F               [ 4] 1169 	ld	e, a
      0005B6 2A               [ 8] 1170 	ld	a, (hl+)
      0005B7 57               [ 4] 1171 	ld	d, a
      0005B8 1A               [ 8] 1172 	ld	a, (de)
      0005B9 22               [ 8] 1173 	ld	(hl+), a
      0005BA 13               [ 8] 1174 	inc	de
      0005BB 1A               [ 8] 1175 	ld	a, (de)
                                   1176 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:160: __current_metasprite = metasprite;
      0005BC 32               [ 8] 1177 	ld	(hl-), a
      0005BD 7E               [ 8] 1178 	ld	a, (hl)
      0005BE EAr00r00         [16] 1179 	ld	(#___current_metasprite),a
      0005C1 F8 05            [12] 1180 	ldhl	sp,	#5
      0005C3 7E               [ 8] 1181 	ld	a, (hl)
      0005C4 EAr01r00         [16] 1182 	ld	(#___current_metasprite + 1),a
                                   1183 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:161: __current_base_tile = base_tile;
      0005C7 21r00r00         [12] 1184 	ld	hl, #___current_base_tile
      0005CA 36 00            [12] 1185 	ld	(hl), #0x00
                                   1186 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:162: __current_base_prop = 0;
      0005CC 21r00r00         [12] 1187 	ld	hl, #___current_base_prop
      0005CF 36 00            [12] 1188 	ld	(hl), #0x00
                                   1189 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:163: return __move_metasprite(base_sprite, (y << 8) | (uint8_t)x);
      0005D1 F8 07            [12] 1190 	ldhl	sp,	#7
      0005D3 7E               [ 8] 1191 	ld	a, (hl)
      0005D4 F8 04            [12] 1192 	ldhl	sp,	#4
      0005D6 22               [ 8] 1193 	ld	(hl+), a
      0005D7 AF               [ 4] 1194 	xor	a, a
      0005D8 32               [ 8] 1195 	ld	(hl-), a
      0005D9 2A               [ 8] 1196 	ld	a, (hl+)
      0005DA 32               [ 8] 1197 	ld	(hl-), a
      0005DB AF               [ 4] 1198 	xor	a, a
      0005DC 22               [ 8] 1199 	ld	(hl+), a
      0005DD 23               [ 8] 1200 	inc	hl
      0005DE 7E               [ 8] 1201 	ld	a, (hl)
      0005DF F8 02            [12] 1202 	ldhl	sp,	#2
      0005E1 22               [ 8] 1203 	ld	(hl+), a
      0005E2 AF               [ 4] 1204 	xor	a, a
      0005E3 22               [ 8] 1205 	ld	(hl+), a
      0005E4 3A               [ 8] 1206 	ld	a, (hl-)
      0005E5 2B               [ 8] 1207 	dec	hl
      0005E6 B6               [ 8] 1208 	or	a, (hl)
      0005E7 F8 06            [12] 1209 	ldhl	sp,	#6
      0005E9 32               [ 8] 1210 	ld	(hl-), a
      0005EA 2A               [ 8] 1211 	ld	a, (hl+)
      0005EB 23               [ 8] 1212 	inc	hl
      0005EC 32               [ 8] 1213 	ld	(hl-), a
      0005ED 2A               [ 8] 1214 	ld	a, (hl+)
      0005EE 5F               [ 4] 1215 	ld	e, a
      0005EF 56               [ 8] 1216 	ld	d, (hl)
      0005F0 3E 04            [ 8] 1217 	ld	a, #0x04
      0005F2 CDr00r00         [24] 1218 	call	___move_metasprite
                                   1219 ;src/player.c:305: else is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, SUB_TO_PX(player_x) + 160U, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, SUB_TO_PX(player_x) + 160, (uint8_t)(player_y - camera_y)); //left exit
      0005F5 C3rC9r06         [16] 1220 	jp	00114$
      0005F8                       1221 00133$:
      0005F8 F8 06            [12] 1222 	ldhl	sp,	#6
      0005FA 7E               [ 8] 1223 	ld	a, (hl)
      0005FB F8 02            [12] 1224 	ldhl	sp,	#2
      0005FD 77               [ 8] 1225 	ld	(hl), a
      0005FE F8 07            [12] 1226 	ldhl	sp,	#7
      000600 7E               [ 8] 1227 	ld	a, (hl)
      000601 C6 A0            [ 8] 1228 	add	a, #0xa0
      000603 F8 03            [12] 1229 	ldhl	sp,	#3
      000605 22               [ 8] 1230 	ld	(hl+), a
      000606 2A               [ 8] 1231 	ld	a, (hl+)
      000607 5F               [ 4] 1232 	ld	e, a
      000608 56               [ 8] 1233 	ld	d, (hl)
      000609 21r00r00         [12] 1234 	ld	hl, #_metasprites_states
      00060C 19               [ 8] 1235 	add	hl, de
      00060D E5               [16] 1236 	push	hl
      00060E 7D               [ 4] 1237 	ld	a, l
      00060F F8 08            [12] 1238 	ldhl	sp,	#8
      000611 77               [ 8] 1239 	ld	(hl), a
      000612 E1               [12] 1240 	pop	hl
      000613 7C               [ 4] 1241 	ld	a, h
      000614 F8 07            [12] 1242 	ldhl	sp,	#7
      000616 32               [ 8] 1243 	ld	(hl-), a
      000617 2A               [ 8] 1244 	ld	a, (hl+)
      000618 5F               [ 4] 1245 	ld	e, a
      000619 56               [ 8] 1246 	ld	d, (hl)
      00061A 1A               [ 8] 1247 	ld	a, (de)
      00061B F8 04            [12] 1248 	ldhl	sp,	#4
      00061D 22               [ 8] 1249 	ld	(hl+), a
      00061E 13               [ 8] 1250 	inc	de
      00061F 1A               [ 8] 1251 	ld	a, (de)
      000620 32               [ 8] 1252 	ld	(hl-), a
      000621 2A               [ 8] 1253 	ld	a, (hl+)
      000622 5F               [ 4] 1254 	ld	e, a
      000623 56               [ 8] 1255 	ld	d, (hl)
      000624 E1               [12] 1256 	pop	hl
      000625 E5               [16] 1257 	push	hl
      000626 19               [ 8] 1258 	add	hl, de
      000627 E5               [16] 1259 	push	hl
      000628 7D               [ 4] 1260 	ld	a, l
      000629 F8 08            [12] 1261 	ldhl	sp,	#8
      00062B 77               [ 8] 1262 	ld	(hl), a
      00062C E1               [12] 1263 	pop	hl
      00062D 7C               [ 4] 1264 	ld	a, h
      00062E F8 07            [12] 1265 	ldhl	sp,	#7
      000630 32               [ 8] 1266 	ld	(hl-), a
      000631 2A               [ 8] 1267 	ld	a, (hl+)
      000632 5F               [ 4] 1268 	ld	e, a
      000633 3A               [ 8] 1269 	ld	a, (hl-)
      000634 57               [ 4] 1270 	ld	d, a
      000635 1A               [ 8] 1271 	ld	a, (de)
      000636 22               [ 8] 1272 	ld	(hl+), a
      000637 13               [ 8] 1273 	inc	de
      000638 1A               [ 8] 1274 	ld	a, (de)
                                   1275 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:200: __current_metasprite = metasprite;
      000639 32               [ 8] 1276 	ld	(hl-), a
      00063A 7E               [ 8] 1277 	ld	a, (hl)
      00063B EAr00r00         [16] 1278 	ld	(#___current_metasprite),a
      00063E F8 07            [12] 1279 	ldhl	sp,	#7
      000640 7E               [ 8] 1280 	ld	a, (hl)
      000641 EAr01r00         [16] 1281 	ld	(#___current_metasprite + 1),a
                                   1282 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:201: __current_base_tile = base_tile;
      000644 21r00r00         [12] 1283 	ld	hl, #___current_base_tile
      000647 36 00            [12] 1284 	ld	(hl), #0x00
                                   1285 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:202: __current_base_prop = 0;
      000649 21r00r00         [12] 1286 	ld	hl, #___current_base_prop
      00064C 36 00            [12] 1287 	ld	(hl), #0x00
                                   1288 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:203: return __move_metasprite_vflip(base_sprite, (y << 8) | (uint8_t)(x - 8u));
      00064E F8 02            [12] 1289 	ldhl	sp,	#2
      000650 7E               [ 8] 1290 	ld	a, (hl)
      000651 F8 06            [12] 1291 	ldhl	sp,	#6
      000653 22               [ 8] 1292 	ld	(hl+), a
      000654 AF               [ 4] 1293 	xor	a, a
      000655 32               [ 8] 1294 	ld	(hl-), a
      000656 2A               [ 8] 1295 	ld	a, (hl+)
      000657 32               [ 8] 1296 	ld	(hl-), a
      000658 36 00            [12] 1297 	ld	(hl), #0x00
      00065A F8 03            [12] 1298 	ldhl	sp,	#3
      00065C 2A               [ 8] 1299 	ld	a, (hl+)
      00065D 23               [ 8] 1300 	inc	hl
      00065E C6 F8            [ 8] 1301 	add	a, #0xf8
      000660 77               [ 8] 1302 	ld	(hl), a
      000661 3A               [ 8] 1303 	ld	a, (hl-)
      000662 22               [ 8] 1304 	ld	(hl+), a
      000663 AF               [ 4] 1305 	xor	a, a
      000664 22               [ 8] 1306 	ld	(hl+), a
      000665 3A               [ 8] 1307 	ld	a, (hl-)
      000666 2B               [ 8] 1308 	dec	hl
      000667 B6               [ 8] 1309 	or	a, (hl)
      000668 2B               [ 8] 1310 	dec	hl
      000669 2B               [ 8] 1311 	dec	hl
      00066A 77               [ 8] 1312 	ld	(hl), a
      00066B F8 07            [12] 1313 	ldhl	sp,	#7
      00066D 7E               [ 8] 1314 	ld	a, (hl)
      00066E F8 03            [12] 1315 	ldhl	sp,	#3
      000670 32               [ 8] 1316 	ld	(hl-), a
      000671 7E               [ 8] 1317 	ld	a, (hl)
      000672 F8 06            [12] 1318 	ldhl	sp,	#6
      000674 77               [ 8] 1319 	ld	(hl), a
      000675 F8 03            [12] 1320 	ldhl	sp,	#3
      000677 7E               [ 8] 1321 	ld	a, (hl)
      000678 F8 07            [12] 1322 	ldhl	sp,	#7
      00067A 32               [ 8] 1323 	ld	(hl-), a
      00067B 2A               [ 8] 1324 	ld	a, (hl+)
      00067C 5F               [ 4] 1325 	ld	e, a
      00067D 56               [ 8] 1326 	ld	d, (hl)
      00067E 3E 04            [ 8] 1327 	ld	a, #0x04
      000680 CDr00r00         [24] 1328 	call	___move_metasprite_vflip
                                   1329 ;src/player.c:305: else is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, SUB_TO_PX(player_x) + 160U, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, SUB_TO_PX(player_x) + 160, (uint8_t)(player_y - camera_y)); //left exit
      000683 18 44            [12] 1330 	jr	00114$
      000685                       1331 00113$:
                                   1332 ;src/player.c:307: hide_metasprite(metasprites_states[current_state][current_frame], 4);
      000685 11r00r00         [12] 1333 	ld	de, #_metasprites_states
      000688 F8 04            [12] 1334 	ldhl	sp,	#4
      00068A 2A               [ 8] 1335 	ld	a,	(hl+)
      00068B 66               [ 8] 1336 	ld	h, (hl)
      00068C 6F               [ 4] 1337 	ld	l, a
      00068D 19               [ 8] 1338 	add	hl, de
      00068E E5               [16] 1339 	push	hl
      00068F 7D               [ 4] 1340 	ld	a, l
      000690 F8 08            [12] 1341 	ldhl	sp,	#8
      000692 77               [ 8] 1342 	ld	(hl), a
      000693 E1               [12] 1343 	pop	hl
      000694 7C               [ 4] 1344 	ld	a, h
      000695 F8 07            [12] 1345 	ldhl	sp,	#7
      000697 32               [ 8] 1346 	ld	(hl-), a
      000698 2A               [ 8] 1347 	ld	a, (hl+)
      000699 5F               [ 4] 1348 	ld	e, a
      00069A 3A               [ 8] 1349 	ld	a, (hl-)
      00069B 57               [ 4] 1350 	ld	d, a
      00069C 1A               [ 8] 1351 	ld	a, (de)
      00069D 22               [ 8] 1352 	ld	(hl+), a
      00069E 13               [ 8] 1353 	inc	de
      00069F 1A               [ 8] 1354 	ld	a, (de)
      0006A0 32               [ 8] 1355 	ld	(hl-), a
      0006A1 2A               [ 8] 1356 	ld	a, (hl+)
      0006A2 5F               [ 4] 1357 	ld	e, a
      0006A3 56               [ 8] 1358 	ld	d, (hl)
      0006A4 E1               [12] 1359 	pop	hl
      0006A5 E5               [16] 1360 	push	hl
      0006A6 19               [ 8] 1361 	add	hl, de
      0006A7 E5               [16] 1362 	push	hl
      0006A8 7D               [ 4] 1363 	ld	a, l
      0006A9 F8 06            [12] 1364 	ldhl	sp,	#6
      0006AB 77               [ 8] 1365 	ld	(hl), a
      0006AC E1               [12] 1366 	pop	hl
      0006AD 7C               [ 4] 1367 	ld	a, h
      0006AE F8 05            [12] 1368 	ldhl	sp,	#5
      0006B0 32               [ 8] 1369 	ld	(hl-), a
      0006B1 2A               [ 8] 1370 	ld	a, (hl+)
      0006B2 5F               [ 4] 1371 	ld	e, a
      0006B3 2A               [ 8] 1372 	ld	a, (hl+)
      0006B4 57               [ 4] 1373 	ld	d, a
      0006B5 1A               [ 8] 1374 	ld	a, (de)
      0006B6 22               [ 8] 1375 	ld	(hl+), a
      0006B7 13               [ 8] 1376 	inc	de
      0006B8 1A               [ 8] 1377 	ld	a, (de)
                                   1378 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:297: __current_metasprite = metasprite;
      0006B9 32               [ 8] 1379 	ld	(hl-), a
      0006BA 7E               [ 8] 1380 	ld	a, (hl)
      0006BB EAr00r00         [16] 1381 	ld	(#___current_metasprite),a
      0006BE F8 07            [12] 1382 	ldhl	sp,	#7
      0006C0 7E               [ 8] 1383 	ld	a, (hl)
      0006C1 EAr01r00         [16] 1384 	ld	(#___current_metasprite + 1),a
                                   1385 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/metasprites.h:298: __hide_metasprite(base_sprite);
      0006C4 3E 04            [ 8] 1386 	ld	a, #0x04
      0006C6 CDr00r00         [24] 1387 	call	___hide_metasprite
                                   1388 ;src/player.c:307: hide_metasprite(metasprites_states[current_state][current_frame], 4);
      0006C9                       1389 00114$:
                                   1390 ;src/player.c:310: if((uint8_t)(player_y - camera_y) < MAX_SPRITE_HEIGHT && !player_dead_flag){
      0006C9 FAr0Fr00         [16] 1391 	ld	a, (#_player_y)
      0006CC 21r00r00         [12] 1392 	ld	hl, #_camera_y
      0006CF 96               [ 8] 1393 	sub	a, (hl)
      0006D0 4F               [ 4] 1394 	ld	c, a
      0006D1 D6 1A            [ 8] 1395 	sub	a, #0x1a
      0006D3 30 11            [12] 1396 	jr	NC, 00127$
      0006D5 21r00r00         [12] 1397 	ld	hl, #_player_dead_flag
      0006D8 CB 46            [12] 1398 	bit	0, (hl)
      0006DA 20 0A            [12] 1399 	jr	NZ, 00127$
                                   1400 ;src/player.c:311: camera_y -= MAX_SPRITE_HEIGHT - ((uint8_t)(player_y - camera_y));
      0006DC 3E 1A            [ 8] 1401 	ld	a, #0x1a
      0006DE 91               [ 4] 1402 	sub	a, c
      0006DF 4F               [ 4] 1403 	ld	c, a
      0006E0 21r00r00         [12] 1404 	ld	hl, #_camera_y
      0006E3 7E               [ 8] 1405 	ld	a, (hl)
      0006E4 91               [ 4] 1406 	sub	a, c
      0006E5 77               [ 8] 1407 	ld	(hl), a
      0006E6                       1408 00127$:
                                   1409 ;src/player.c:313: }
      0006E6 E8 08            [16] 1410 	add	sp, #8
      0006E8 C9               [16] 1411 	ret
                                   1412 ;src/player.c:315: static void render_all_particles(void){
                                   1413 ;	---------------------------------
                                   1414 ; Function render_all_particles
                                   1415 ; ---------------------------------
      0006E9                       1416 _render_all_particles:
      0006E9 E8 FA            [16] 1417 	add	sp, #-6
                                   1418 ;src/player.c:317: for(i = 0; i < MAX_PUFF; i++){
      0006EB 21r04r00         [12] 1419 	ld	hl, #_i
      0006EE 36 00            [12] 1420 	ld	(hl), #0x00
      0006F0                       1421 00127$:
                                   1422 ;src/player.c:318: if(puff_frame[i] == 0){
      0006F0 3Er00            [ 8] 1423 	ld	a, #<(_puff_frame)
      0006F2 21r04r00         [12] 1424 	ld	hl, #_i
      0006F5 86               [ 8] 1425 	add	a, (hl)
      0006F6 4F               [ 4] 1426 	ld	c, a
      0006F7 3Es00            [ 8] 1427 	ld	a, #>(_puff_frame)
      0006F9 CE 00            [ 8] 1428 	adc	a, #0x00
      0006FB 47               [ 4] 1429 	ld	b, a
      0006FC 0A               [ 8] 1430 	ld	a, (bc)
      0006FD 4F               [ 4] 1431 	ld	c, a
                                   1432 ;src/player.c:319: hide_sprite(FIRST_PUFF + i);
      0006FE 7E               [ 8] 1433 	ld	a, (hl)
      0006FF C6 08            [ 8] 1434 	add	a, #0x08
      000701 47               [ 4] 1435 	ld	b, a
                                   1436 ;src/player.c:318: if(puff_frame[i] == 0){
      000702 79               [ 4] 1437 	ld	a, c
      000703 B7               [ 4] 1438 	or	a, a
      000704 20 0D            [12] 1439 	jr	NZ, 00102$
                                   1440 ;src/player.c:319: hide_sprite(FIRST_PUFF + i);
                                   1441 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1905: shadow_OAM[nb].y = 0;
      000706 11r00r00         [12] 1442 	ld	de, #_shadow_OAM+0
      000709 68               [ 4] 1443 	ld	l, b
                                   1444 ;	spillPairReg hl
                                   1445 ;	spillPairReg hl
      00070A 26 00            [ 8] 1446 	ld	h, #0x00
                                   1447 ;	spillPairReg hl
                                   1448 ;	spillPairReg hl
      00070C 29               [ 8] 1449 	add	hl, hl
      00070D 29               [ 8] 1450 	add	hl, hl
      00070E 19               [ 8] 1451 	add	hl, de
      00070F 36 00            [12] 1452 	ld	(hl), #0x00
                                   1453 ;src/player.c:320: continue;
      000711 18 25            [12] 1454 	jr	00103$
      000713                       1455 00102$:
                                   1456 ;src/player.c:322: set_sprite_tile(FIRST_PUFF + i, PLAYER_SPRITES - 1 + (puff_frame[i] >> 2));
      000713 79               [ 4] 1457 	ld	a, c
      000714 0F               [ 4] 1458 	rrca
      000715 0F               [ 4] 1459 	rrca
      000716 E6 3F            [ 8] 1460 	and	a, #0x3f
      000718 C6 17            [ 8] 1461 	add	a, #0x17
      00071A 4F               [ 4] 1462 	ld	c, a
                                   1463 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1804: shadow_OAM[nb].tile=tile;
      00071B 68               [ 4] 1464 	ld	l, b
                                   1465 ;	spillPairReg hl
                                   1466 ;	spillPairReg hl
      00071C 26 00            [ 8] 1467 	ld	h, #0x00
                                   1468 ;	spillPairReg hl
                                   1469 ;	spillPairReg hl
      00071E 29               [ 8] 1470 	add	hl, hl
      00071F 29               [ 8] 1471 	add	hl, hl
      000720 11r00r00         [12] 1472 	ld	de, #_shadow_OAM
      000723 19               [ 8] 1473 	add	hl, de
      000724 23               [ 8] 1474 	inc	hl
      000725 23               [ 8] 1475 	inc	hl
      000726 71               [ 8] 1476 	ld	(hl), c
                                   1477 ;src/player.c:323: puff_frame[i] = (puff_frame[i] + 1) & 0x0f; //puff_frame[i]++ mod 16 
      000727 3Er00            [ 8] 1478 	ld	a, #<(_puff_frame)
      000729 21r04r00         [12] 1479 	ld	hl, #_i
      00072C 86               [ 8] 1480 	add	a, (hl)
      00072D 4F               [ 4] 1481 	ld	c, a
      00072E 3Es00            [ 8] 1482 	ld	a, #>(_puff_frame)
      000730 CE 00            [ 8] 1483 	adc	a, #0x00
      000732 47               [ 4] 1484 	ld	b, a
      000733 0A               [ 8] 1485 	ld	a, (bc)
      000734 3C               [ 4] 1486 	inc	a
      000735 E6 0F            [ 8] 1487 	and	a, #0x0f
      000737 02               [ 8] 1488 	ld	(bc), a
      000738                       1489 00103$:
                                   1490 ;src/player.c:317: for(i = 0; i < MAX_PUFF; i++){
      000738 21r04r00         [12] 1491 	ld	hl, #_i
      00073B 34               [12] 1492 	inc	(hl)
      00073C 7E               [ 8] 1493 	ld	a, (hl)
      00073D D6 04            [ 8] 1494 	sub	a, #0x04
      00073F 38 AF            [12] 1495 	jr	C, 00127$
                                   1496 ;src/player.c:327: if(brick_frame == 0){
      000741 FAr1Br00         [16] 1497 	ld	a, (#_brick_frame)
      000744 B7               [ 4] 1498 	or	a, a
      000745 20 09            [12] 1499 	jr	NZ, 00106$
                                   1500 ;src/player.c:328: hide_sprites_range(12, 16);
      000747 1E 10            [ 8] 1501 	ld	e, #0x10
      000749 3E 0C            [ 8] 1502 	ld	a, #0x0c
      00074B CDr00r00         [24] 1503 	call	_hide_sprites_range
      00074E 18 36            [12] 1504 	jr	00107$
      000750                       1505 00106$:
                                   1506 ;src/player.c:331: brick_frame--;
      000750 21r1Br00         [12] 1507 	ld	hl, #_brick_frame
      000753 35               [12] 1508 	dec	(hl)
                                   1509 ;src/player.c:332: scroll_sprite(12, 1, brick_y_speed>>1);
      000754 21r1Cr00         [12] 1510 	ld	hl, #_brick_y_speed
      000757 5E               [ 8] 1511 	ld	e, (hl)
      000758 CB 2B            [ 8] 1512 	sra	e
                                   1513 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1893: OAM_item_t * itm = &shadow_OAM[nb];
      00075A 01r30r00         [12] 1514 	ld	bc, #_shadow_OAM+48
                                   1515 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1894: itm->y+=y, itm->x+=x;
      00075D 0A               [ 8] 1516 	ld	a, (bc)
      00075E 83               [ 4] 1517 	add	a, e
      00075F 02               [ 8] 1518 	ld	(bc), a
      000760 03               [ 8] 1519 	inc	bc
      000761 0A               [ 8] 1520 	ld	a, (bc)
      000762 3C               [ 4] 1521 	inc	a
      000763 02               [ 8] 1522 	ld	(bc), a
                                   1523 ;src/player.c:333: scroll_sprite(13, -1, brick_y_speed>>1);
      000764 5E               [ 8] 1524 	ld	e, (hl)
      000765 CB 2B            [ 8] 1525 	sra	e
                                   1526 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1893: OAM_item_t * itm = &shadow_OAM[nb];
      000767 01r34r00         [12] 1527 	ld	bc, #_shadow_OAM+52
                                   1528 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1894: itm->y+=y, itm->x+=x;
      00076A 0A               [ 8] 1529 	ld	a, (bc)
      00076B 83               [ 4] 1530 	add	a, e
      00076C 02               [ 8] 1531 	ld	(bc), a
      00076D 03               [ 8] 1532 	inc	bc
      00076E 0A               [ 8] 1533 	ld	a, (bc)
      00076F 3D               [ 4] 1534 	dec	a
      000770 02               [ 8] 1535 	ld	(bc), a
                                   1536 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1893: OAM_item_t * itm = &shadow_OAM[nb];
      000771 01r38r00         [12] 1537 	ld	bc, #_shadow_OAM+56
                                   1538 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1894: itm->y+=y, itm->x+=x;
      000774 0A               [ 8] 1539 	ld	a, (bc)
      000775 3C               [ 4] 1540 	inc	a
      000776 02               [ 8] 1541 	ld	(bc), a
      000777 03               [ 8] 1542 	inc	bc
      000778 0A               [ 8] 1543 	ld	a, (bc)
      000779 3C               [ 4] 1544 	inc	a
      00077A 02               [ 8] 1545 	ld	(bc), a
                                   1546 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1893: OAM_item_t * itm = &shadow_OAM[nb];
      00077B 01r3Cr00         [12] 1547 	ld	bc, #_shadow_OAM+60
                                   1548 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1894: itm->y+=y, itm->x+=x;
      00077E 0A               [ 8] 1549 	ld	a, (bc)
      00077F 3C               [ 4] 1550 	inc	a
      000780 02               [ 8] 1551 	ld	(bc), a
      000781 03               [ 8] 1552 	inc	bc
      000782 0A               [ 8] 1553 	ld	a, (bc)
      000783 3D               [ 4] 1554 	dec	a
      000784 02               [ 8] 1555 	ld	(bc), a
                                   1556 ;src/player.c:336: brick_y_speed++;
      000785 34               [12] 1557 	inc	(hl)
      000786                       1558 00107$:
                                   1559 ;src/player.c:340: if(current_state != PLAYER_STATE_RUNNING) return;
      000786 FAr13r00         [16] 1560 	ld	a, (#_current_state)
      000789 3D               [ 4] 1561 	dec	a
      00078A C2r50r08         [16] 1562 	jp	NZ,00128$
                                   1563 ;src/player.c:341: if((frame_counter != 0) || (!(current_frame == 0 || current_frame == 3))) return;
      00078D FAr01r00         [16] 1564 	ld	a, (#_frame_counter)
      000790 B7               [ 4] 1565 	or	a, a
      000791 C2r50r08         [16] 1566 	jp	NZ,00128$
      000794 21r02r00         [12] 1567 	ld	hl, #_current_frame
      000797 7E               [ 8] 1568 	ld	a, (hl)
      000798 B7               [ 4] 1569 	or	a, a
      000799 28 06            [12] 1570 	jr	Z, 00111$
      00079B 7E               [ 8] 1571 	ld	a, (hl)
      00079C D6 03            [ 8] 1572 	sub	a, #0x03
      00079E C2r50r08         [16] 1573 	jp	NZ,00128$
      0007A1                       1574 00111$:
                                   1575 ;src/player.c:344: i = FIRST_PUFF + next_free_puff;
      0007A1 FAr1Ar00         [16] 1576 	ld	a, (#_next_free_puff)
      0007A4 C6 08            [ 8] 1577 	add	a, #0x08
      0007A6 21r04r00         [12] 1578 	ld	hl, #_i
      0007A9 77               [ 8] 1579 	ld	(hl), a
                                   1580 ;src/player.c:345: set_sprite_tile(i, PLAYER_SPRITES);
      0007AA 4E               [ 8] 1581 	ld	c, (hl)
                                   1582 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1804: shadow_OAM[nb].tile=tile;
      0007AB 26 00            [ 8] 1583 	ld	h, #0x00
                                   1584 ;	spillPairReg hl
                                   1585 ;	spillPairReg hl
      0007AD 69               [ 4] 1586 	ld	l, c
      0007AE 29               [ 8] 1587 	add	hl, hl
      0007AF 29               [ 8] 1588 	add	hl, hl
      0007B0 11r00r00         [12] 1589 	ld	de, #_shadow_OAM
      0007B3 19               [ 8] 1590 	add	hl, de
      0007B4 23               [ 8] 1591 	inc	hl
      0007B5 23               [ 8] 1592 	inc	hl
      0007B6 36 18            [12] 1593 	ld	(hl), #0x18
                                   1594 ;src/player.c:346: set_sprite_prop(i, get_sprite_prop(i) & 0xDF); // reset the flip
      0007B8 21r04r00         [12] 1595 	ld	hl, #_i
      0007BB 4E               [ 8] 1596 	ld	c, (hl)
                                   1597 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1860: return shadow_OAM[nb].prop;
      0007BC 26 00            [ 8] 1598 	ld	h, #0x00
                                   1599 ;	spillPairReg hl
                                   1600 ;	spillPairReg hl
      0007BE 69               [ 4] 1601 	ld	l, c
      0007BF 29               [ 8] 1602 	add	hl, hl
      0007C0 29               [ 8] 1603 	add	hl, hl
      0007C1 11r00r00         [12] 1604 	ld	de, #_shadow_OAM
      0007C4 19               [ 8] 1605 	add	hl, de
      0007C5 23               [ 8] 1606 	inc	hl
      0007C6 23               [ 8] 1607 	inc	hl
      0007C7 23               [ 8] 1608 	inc	hl
      0007C8 4E               [ 8] 1609 	ld	c, (hl)
                                   1610 ;src/player.c:346: set_sprite_prop(i, get_sprite_prop(i) & 0xDF); // reset the flip
      0007C9 CB A9            [ 8] 1611 	res	5, c
      0007CB 21r04r00         [12] 1612 	ld	hl, #_i
                                   1613 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1850: shadow_OAM[nb].prop=prop;
      0007CE 6E               [ 8] 1614 	ld	l, (hl)
                                   1615 ;	spillPairReg hl
                                   1616 ;	spillPairReg hl
      0007CF 26 00            [ 8] 1617 	ld	h, #0x00
                                   1618 ;	spillPairReg hl
                                   1619 ;	spillPairReg hl
      0007D1 29               [ 8] 1620 	add	hl, hl
      0007D2 29               [ 8] 1621 	add	hl, hl
      0007D3 11r00r00         [12] 1622 	ld	de, #_shadow_OAM
      0007D6 19               [ 8] 1623 	add	hl, de
      0007D7 23               [ 8] 1624 	inc	hl
      0007D8 23               [ 8] 1625 	inc	hl
      0007D9 23               [ 8] 1626 	inc	hl
      0007DA 71               [ 8] 1627 	ld	(hl), c
                                   1628 ;src/player.c:347: puff_frame[next_free_puff] = 4;
      0007DB 3Er00            [ 8] 1629 	ld	a, #<(_puff_frame)
      0007DD 21r1Ar00         [12] 1630 	ld	hl, #_next_free_puff
      0007E0 86               [ 8] 1631 	add	a, (hl)
      0007E1 4F               [ 4] 1632 	ld	c, a
      0007E2 3Es00            [ 8] 1633 	ld	a, #>(_puff_frame)
      0007E4 CE 00            [ 8] 1634 	adc	a, #0x00
      0007E6 47               [ 4] 1635 	ld	b, a
      0007E7 3E 04            [ 8] 1636 	ld	a, #0x04
      0007E9 02               [ 8] 1637 	ld	(bc), a
                                   1638 ;src/player.c:348: move_sprite(i, SUB_TO_PX(player_x) + X_OFFSET, (uint8_t)((player_y + Y_OFFSET) - camera_y));
      0007EA FAr0Fr00         [16] 1639 	ld	a, (#_player_y)
      0007ED C6 08            [ 8] 1640 	add	a, #0x08
      0007EF 21r00r00         [12] 1641 	ld	hl, #_camera_y
      0007F2 4E               [ 8] 1642 	ld	c, (hl)
      0007F3 91               [ 4] 1643 	sub	a, c
      0007F4 F8 02            [12] 1644 	ldhl	sp,	#2
      0007F6 77               [ 8] 1645 	ld	(hl), a
      0007F7 FAr0Er00         [16] 1646 	ld	a, (#_player_x + 1)
      0007FA C6 FC            [ 8] 1647 	add	a, #0xfc
      0007FC F8 03            [12] 1648 	ldhl	sp,	#3
      0007FE 77               [ 8] 1649 	ld	(hl), a
      0007FF 21r04r00         [12] 1650 	ld	hl, #_i
      000802 4E               [ 8] 1651 	ld	c, (hl)
                                   1652 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      000803 AF               [ 4] 1653 	xor	a, a
      000804 CB 21            [ 8] 1654 	sla	c
      000806 8F               [ 4] 1655 	adc	a, a
      000807 CB 21            [ 8] 1656 	sla	c
      000809 8F               [ 4] 1657 	adc	a, a
      00080A F8 00            [12] 1658 	ldhl	sp,	#0
      00080C 71               [ 8] 1659 	ld	(hl), c
      00080D 23               [ 8] 1660 	inc	hl
      00080E 77               [ 8] 1661 	ld	(hl), a
      00080F 11r00r00         [12] 1662 	ld	de, #_shadow_OAM
      000812 E1               [12] 1663 	pop	hl
      000813 E5               [16] 1664 	push	hl
      000814 19               [ 8] 1665 	add	hl, de
      000815 E5               [16] 1666 	push	hl
      000816 7D               [ 4] 1667 	ld	a, l
      000817 F8 06            [12] 1668 	ldhl	sp,	#6
      000819 77               [ 8] 1669 	ld	(hl), a
      00081A E1               [12] 1670 	pop	hl
      00081B 7C               [ 4] 1671 	ld	a, h
      00081C F8 05            [12] 1672 	ldhl	sp,	#5
                                   1673 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1878: itm->y=y, itm->x=x;
      00081E 32               [ 8] 1674 	ld	(hl-), a
      00081F 2A               [ 8] 1675 	ld	a, (hl+)
      000820 5F               [ 4] 1676 	ld	e, a
      000821 56               [ 8] 1677 	ld	d, (hl)
      000822 F8 02            [12] 1678 	ldhl	sp,	#2
      000824 2A               [ 8] 1679 	ld	a, (hl+)
      000825 23               [ 8] 1680 	inc	hl
      000826 12               [ 8] 1681 	ld	(de), a
      000827 2A               [ 8] 1682 	ld	a, (hl+)
      000828 4F               [ 4] 1683 	ld	c, a
      000829 3A               [ 8] 1684 	ld	a, (hl-)
      00082A 2B               [ 8] 1685 	dec	hl
      00082B 47               [ 4] 1686 	ld	b, a
      00082C 03               [ 8] 1687 	inc	bc
      00082D 7E               [ 8] 1688 	ld	a, (hl)
      00082E 02               [ 8] 1689 	ld	(bc), a
                                   1690 ;src/player.c:349: if(!is_facing_right) set_sprite_prop(i, S_FLIPX); //flip if facing left
      00082F 21r09r00         [12] 1691 	ld	hl, #_is_facing_right
      000832 CB 46            [12] 1692 	bit	0, (hl)
      000834 20 12            [12] 1693 	jr	NZ, 00115$
      000836 21r04r00         [12] 1694 	ld	hl, #_i
      000839 5E               [ 8] 1695 	ld	e, (hl)
                                   1696 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1850: shadow_OAM[nb].prop=prop;
      00083A 01r00r00         [12] 1697 	ld	bc, #_shadow_OAM+0
      00083D 6B               [ 4] 1698 	ld	l, e
                                   1699 ;	spillPairReg hl
                                   1700 ;	spillPairReg hl
      00083E 26 00            [ 8] 1701 	ld	h, #0x00
                                   1702 ;	spillPairReg hl
                                   1703 ;	spillPairReg hl
      000840 29               [ 8] 1704 	add	hl, hl
      000841 29               [ 8] 1705 	add	hl, hl
      000842 09               [ 8] 1706 	add	hl, bc
      000843 23               [ 8] 1707 	inc	hl
      000844 23               [ 8] 1708 	inc	hl
      000845 23               [ 8] 1709 	inc	hl
      000846 36 20            [12] 1710 	ld	(hl), #0x20
                                   1711 ;src/player.c:349: if(!is_facing_right) set_sprite_prop(i, S_FLIPX); //flip if facing left
      000848                       1712 00115$:
                                   1713 ;src/player.c:351: next_free_puff = (next_free_puff + 1) & 0x03;
      000848 21r1Ar00         [12] 1714 	ld	hl, #_next_free_puff
      00084B 7E               [ 8] 1715 	ld	a, (hl)
      00084C 3C               [ 4] 1716 	inc	a
      00084D E6 03            [ 8] 1717 	and	a, #0x03
      00084F 77               [ 8] 1718 	ld	(hl), a
      000850                       1719 00128$:
                                   1720 ;src/player.c:352: }
      000850 E8 06            [16] 1721 	add	sp, #6
      000852 C9               [16] 1722 	ret
                                   1723 ;src/player.c:354: static void instanciate_collision_puffs(void){
                                   1724 ;	---------------------------------
                                   1725 ; Function instanciate_collision_puffs
                                   1726 ; ---------------------------------
      000853                       1727 _instanciate_collision_puffs:
                                   1728 ;src/player.c:356: uint8_t i = FIRST_PUFF + next_free_puff;
      000853 FAr1Ar00         [16] 1729 	ld	a, (#_next_free_puff)
      000856 C6 08            [ 8] 1730 	add	a, #0x08
      000858 4F               [ 4] 1731 	ld	c, a
                                   1732 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1804: shadow_OAM[nb].tile=tile;
      000859 11r00r00         [12] 1733 	ld	de, #_shadow_OAM+0
      00085C 69               [ 4] 1734 	ld	l, c
                                   1735 ;	spillPairReg hl
                                   1736 ;	spillPairReg hl
      00085D 26 00            [ 8] 1737 	ld	h, #0x00
                                   1738 ;	spillPairReg hl
                                   1739 ;	spillPairReg hl
      00085F 29               [ 8] 1740 	add	hl, hl
      000860 29               [ 8] 1741 	add	hl, hl
      000861 19               [ 8] 1742 	add	hl, de
      000862 23               [ 8] 1743 	inc	hl
      000863 23               [ 8] 1744 	inc	hl
      000864 36 18            [12] 1745 	ld	(hl), #0x18
                                   1746 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1860: return shadow_OAM[nb].prop;
      000866 69               [ 4] 1747 	ld	l, c
                                   1748 ;	spillPairReg hl
                                   1749 ;	spillPairReg hl
      000867 26 00            [ 8] 1750 	ld	h, #0x00
                                   1751 ;	spillPairReg hl
                                   1752 ;	spillPairReg hl
      000869 29               [ 8] 1753 	add	hl, hl
      00086A 29               [ 8] 1754 	add	hl, hl
      00086B 5D               [ 4] 1755 	ld	e, l
      00086C 54               [ 4] 1756 	ld	d, h
      00086D 21r01r00         [12] 1757 	ld	hl,#_shadow_OAM + 1
      000870 19               [ 8] 1758 	add	hl,de
      000871 23               [ 8] 1759 	inc	hl
      000872 23               [ 8] 1760 	inc	hl
      000873 4E               [ 8] 1761 	ld	c, (hl)
                                   1762 ;src/player.c:358: set_sprite_prop(i, get_sprite_prop(i) & 0xDF); // remove flip
      000874 CB A9            [ 8] 1763 	res	5, c
                                   1764 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1850: shadow_OAM[nb].prop=prop;
      000876 21r01r00         [12] 1765 	ld	hl,#_shadow_OAM + 1
      000879 19               [ 8] 1766 	add	hl,de
      00087A 23               [ 8] 1767 	inc	hl
      00087B 23               [ 8] 1768 	inc	hl
      00087C 71               [ 8] 1769 	ld	(hl), c
                                   1770 ;src/player.c:359: puff_frame[next_free_puff] = 4;
      00087D 3Er00            [ 8] 1771 	ld	a, #<(_puff_frame)
      00087F 21r1Ar00         [12] 1772 	ld	hl, #_next_free_puff
      000882 86               [ 8] 1773 	add	a, (hl)
      000883 4F               [ 4] 1774 	ld	c, a
      000884 3Es00            [ 8] 1775 	ld	a, #>(_puff_frame)
      000886 CE 00            [ 8] 1776 	adc	a, #0x00
      000888 47               [ 4] 1777 	ld	b, a
      000889 3E 04            [ 8] 1778 	ld	a, #0x04
      00088B 02               [ 8] 1779 	ld	(bc), a
                                   1780 ;src/player.c:360: move_sprite(i, SUB_TO_PX(player_x) + X_OFFSET - 8U, (uint8_t)((player_y + Y_OFFSET) - camera_y));
      00088C FAr0Fr00         [16] 1781 	ld	a, (#_player_y)
      00088F C6 08            [ 8] 1782 	add	a, #0x08
      000891 21r00r00         [12] 1783 	ld	hl, #_camera_y
      000894 4E               [ 8] 1784 	ld	c, (hl)
      000895 91               [ 4] 1785 	sub	a, c
      000896 47               [ 4] 1786 	ld	b, a
      000897 FAr0Er00         [16] 1787 	ld	a, (#_player_x + 1)
      00089A C6 F4            [ 8] 1788 	add	a, #0xf4
      00089C 4F               [ 4] 1789 	ld	c, a
                                   1790 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      00089D 21r00r00         [12] 1791 	ld	hl, #_shadow_OAM
      0008A0 19               [ 8] 1792 	add	hl, de
                                   1793 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1878: itm->y=y, itm->x=x;
      0008A1 78               [ 4] 1794 	ld	a, b
      0008A2 22               [ 8] 1795 	ld	(hl+), a
      0008A3 71               [ 8] 1796 	ld	(hl), c
                                   1797 ;src/player.c:362: next_free_puff = (next_free_puff + 1) & 0x03;
      0008A4 21r1Ar00         [12] 1798 	ld	hl, #_next_free_puff
      0008A7 7E               [ 8] 1799 	ld	a, (hl)
      0008A8 3C               [ 4] 1800 	inc	a
      0008A9 E6 03            [ 8] 1801 	and	a, #0x03
      0008AB 77               [ 8] 1802 	ld	(hl), a
                                   1803 ;src/player.c:364: i = FIRST_PUFF + next_free_puff;
      0008AC 7E               [ 8] 1804 	ld	a, (hl)
      0008AD C6 08            [ 8] 1805 	add	a, #0x08
      0008AF 4F               [ 4] 1806 	ld	c, a
                                   1807 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1804: shadow_OAM[nb].tile=tile;
      0008B0 11r00r00         [12] 1808 	ld	de, #_shadow_OAM+0
      0008B3 69               [ 4] 1809 	ld	l, c
                                   1810 ;	spillPairReg hl
                                   1811 ;	spillPairReg hl
      0008B4 26 00            [ 8] 1812 	ld	h, #0x00
                                   1813 ;	spillPairReg hl
                                   1814 ;	spillPairReg hl
      0008B6 29               [ 8] 1815 	add	hl, hl
      0008B7 29               [ 8] 1816 	add	hl, hl
      0008B8 19               [ 8] 1817 	add	hl, de
      0008B9 23               [ 8] 1818 	inc	hl
      0008BA 23               [ 8] 1819 	inc	hl
      0008BB 36 18            [12] 1820 	ld	(hl), #0x18
                                   1821 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1860: return shadow_OAM[nb].prop;
      0008BD 69               [ 4] 1822 	ld	l, c
                                   1823 ;	spillPairReg hl
                                   1824 ;	spillPairReg hl
      0008BE 26 00            [ 8] 1825 	ld	h, #0x00
                                   1826 ;	spillPairReg hl
                                   1827 ;	spillPairReg hl
      0008C0 29               [ 8] 1828 	add	hl, hl
      0008C1 29               [ 8] 1829 	add	hl, hl
      0008C2 5D               [ 4] 1830 	ld	e, l
      0008C3 54               [ 4] 1831 	ld	d, h
      0008C4 21r01r00         [12] 1832 	ld	hl,#_shadow_OAM + 1
      0008C7 19               [ 8] 1833 	add	hl,de
      0008C8 23               [ 8] 1834 	inc	hl
      0008C9 23               [ 8] 1835 	inc	hl
      0008CA 4E               [ 8] 1836 	ld	c, (hl)
                                   1837 ;src/player.c:366: set_sprite_prop(i, get_sprite_prop(i) | 0x20); // add flip
      0008CB CB E9            [ 8] 1838 	set	5, c
                                   1839 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1850: shadow_OAM[nb].prop=prop;
      0008CD 21r01r00         [12] 1840 	ld	hl,#_shadow_OAM + 1
      0008D0 19               [ 8] 1841 	add	hl,de
      0008D1 23               [ 8] 1842 	inc	hl
      0008D2 23               [ 8] 1843 	inc	hl
      0008D3 71               [ 8] 1844 	ld	(hl), c
                                   1845 ;src/player.c:367: puff_frame[next_free_puff] = 4;
      0008D4 3Er00            [ 8] 1846 	ld	a, #<(_puff_frame)
      0008D6 21r1Ar00         [12] 1847 	ld	hl, #_next_free_puff
      0008D9 86               [ 8] 1848 	add	a, (hl)
      0008DA 4F               [ 4] 1849 	ld	c, a
      0008DB 3Es00            [ 8] 1850 	ld	a, #>(_puff_frame)
      0008DD CE 00            [ 8] 1851 	adc	a, #0x00
      0008DF 47               [ 4] 1852 	ld	b, a
      0008E0 3E 04            [ 8] 1853 	ld	a, #0x04
      0008E2 02               [ 8] 1854 	ld	(bc), a
                                   1855 ;src/player.c:368: move_sprite(i, SUB_TO_PX(player_x) + X_OFFSET + 8U, (uint8_t)((player_y + Y_OFFSET) - camera_y));
      0008E3 FAr0Fr00         [16] 1856 	ld	a, (#_player_y)
      0008E6 C6 08            [ 8] 1857 	add	a, #0x08
      0008E8 21r00r00         [12] 1858 	ld	hl, #_camera_y
      0008EB 4E               [ 8] 1859 	ld	c, (hl)
      0008EC 91               [ 4] 1860 	sub	a, c
      0008ED 47               [ 4] 1861 	ld	b, a
      0008EE FAr0Er00         [16] 1862 	ld	a, (#_player_x + 1)
      0008F1 C6 04            [ 8] 1863 	add	a, #0x04
      0008F3 4F               [ 4] 1864 	ld	c, a
                                   1865 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      0008F4 21r00r00         [12] 1866 	ld	hl, #_shadow_OAM
      0008F7 19               [ 8] 1867 	add	hl, de
                                   1868 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1878: itm->y=y, itm->x=x;
      0008F8 78               [ 4] 1869 	ld	a, b
      0008F9 22               [ 8] 1870 	ld	(hl+), a
      0008FA 71               [ 8] 1871 	ld	(hl), c
                                   1872 ;src/player.c:370: next_free_puff = (next_free_puff + 1) & 0x03;
      0008FB 21r1Ar00         [12] 1873 	ld	hl, #_next_free_puff
      0008FE 7E               [ 8] 1874 	ld	a, (hl)
      0008FF 3C               [ 4] 1875 	inc	a
      000900 E6 03            [ 8] 1876 	and	a, #0x03
      000902 77               [ 8] 1877 	ld	(hl), a
                                   1878 ;src/player.c:371: }
      000903 C9               [16] 1879 	ret
                                   1880 ;src/player.c:373: static void instanciate_brick_particles(void){
                                   1881 ;	---------------------------------
                                   1882 ; Function instanciate_brick_particles
                                   1883 ; ---------------------------------
      000904                       1884 _instanciate_brick_particles:
                                   1885 ;src/player.c:375: uint8_t particle_x = ((3 + (i<<1 & 0x0C)) << 3) + 14u;
      000904 FAr04r00         [16] 1886 	ld	a, (#_i)
      000907 87               [ 4] 1887 	add	a, a
      000908 E6 0C            [ 8] 1888 	and	a, #0x0c
      00090A C6 03            [ 8] 1889 	add	a, #0x03
      00090C 87               [ 4] 1890 	add	a, a
      00090D 87               [ 4] 1891 	add	a, a
      00090E 87               [ 4] 1892 	add	a, a
      00090F C6 0E            [ 8] 1893 	add	a, #0x0e
      000911 4F               [ 4] 1894 	ld	c, a
                                   1895 ;src/player.c:376: uint8_t particle_y = (((PLAYER_FLOOR << 3) + 1 + ((~i & 0x01) << 2)) << 3) - camera_y + 16u;
      000912 FAr0Fr00         [16] 1896 	ld	a, (#_player_y)
      000915 07               [ 4] 1897 	rlca
      000916 07               [ 4] 1898 	rlca
      000917 E6 03            [ 8] 1899 	and	a, #0x03
      000919 87               [ 4] 1900 	add	a, a
      00091A 87               [ 4] 1901 	add	a, a
      00091B 87               [ 4] 1902 	add	a, a
      00091C 47               [ 4] 1903 	ld	b, a
      00091D 04               [ 4] 1904 	inc	b
      00091E FAr04r00         [16] 1905 	ld	a, (#_i)
      000921 2F               [ 4] 1906 	cpl
      000922 E6 01            [ 8] 1907 	and	a, #0x01
      000924 87               [ 4] 1908 	add	a, a
      000925 87               [ 4] 1909 	add	a, a
      000926 80               [ 4] 1910 	add	a, b
      000927 87               [ 4] 1911 	add	a, a
      000928 87               [ 4] 1912 	add	a, a
      000929 87               [ 4] 1913 	add	a, a
      00092A 21r00r00         [12] 1914 	ld	hl, #_camera_y
      00092D 46               [ 8] 1915 	ld	b, (hl)
      00092E 90               [ 4] 1916 	sub	a, b
      00092F C6 10            [ 8] 1917 	add	a, #0x10
      000931 47               [ 4] 1918 	ld	b, a
                                   1919 ;src/player.c:377: move_sprite(12, particle_x, particle_y);
      000932 59               [ 4] 1920 	ld	e, c
                                   1921 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      000933 21r30r00         [12] 1922 	ld	hl, #(_shadow_OAM + 48)
                                   1923 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1878: itm->y=y, itm->x=x;
      000936 70               [ 8] 1924 	ld	(hl), b
      000937 23               [ 8] 1925 	inc	hl
      000938 73               [ 8] 1926 	ld	(hl), e
                                   1927 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      000939 21r34r00         [12] 1928 	ld	hl, #(_shadow_OAM + 52)
                                   1929 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1878: itm->y=y, itm->x=x;
      00093C 70               [ 8] 1930 	ld	(hl), b
      00093D 23               [ 8] 1931 	inc	hl
      00093E 71               [ 8] 1932 	ld	(hl), c
                                   1933 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      00093F 21r38r00         [12] 1934 	ld	hl, #(_shadow_OAM + 56)
                                   1935 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1878: itm->y=y, itm->x=x;
      000942 70               [ 8] 1936 	ld	(hl), b
      000943 23               [ 8] 1937 	inc	hl
      000944 71               [ 8] 1938 	ld	(hl), c
                                   1939 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1877: OAM_item_t * itm = &shadow_OAM[nb];
      000945 21r3Cr00         [12] 1940 	ld	hl, #(_shadow_OAM + 60)
                                   1941 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1878: itm->y=y, itm->x=x;
      000948 70               [ 8] 1942 	ld	(hl), b
      000949 23               [ 8] 1943 	inc	hl
      00094A 71               [ 8] 1944 	ld	(hl), c
                                   1945 ;src/player.c:381: brick_frame = 10;
      00094B 21r1Br00         [12] 1946 	ld	hl, #_brick_frame
      00094E 36 0A            [12] 1947 	ld	(hl), #0x0a
                                   1948 ;src/player.c:382: brick_y_speed = -5;
      000950 21r1Cr00         [12] 1949 	ld	hl, #_brick_y_speed
      000953 36 FB            [12] 1950 	ld	(hl), #0xfb
                                   1951 ;src/player.c:383: }
      000955 C9               [16] 1952 	ret
                                   1953 ;src/player.c:385: static void hurt_frame(void){
                                   1954 ;	---------------------------------
                                   1955 ; Function hurt_frame
                                   1956 ; ---------------------------------
      000956                       1957 _hurt_frame:
                                   1958 ;src/player.c:386: if(frame_counter >= HURT_FRAMES){
      000956 FAr01r00         [16] 1959 	ld	a, (#_frame_counter)
      000959 D6 1E            [ 8] 1960 	sub	a, #0x1e
      00095B 38 08            [12] 1961 	jr	C, 00102$
                                   1962 ;src/player.c:387: switch_state(PLAYER_STATE_FALLING);
      00095D 3E 03            [ 8] 1963 	ld	a, #0x03
      00095F CDr17r0A         [24] 1964 	call	_switch_state
                                   1965 ;src/player.c:388: stop_hurt_sfx();
                                   1966 ;src/player.c:389: return;
      000962 C3r00r00         [16] 1967 	jp	_stop_hurt_sfx
      000965                       1968 00102$:
                                   1969 ;src/player.c:391: player_x = is_facing_right ? player_x - (x_speed) : player_x + (x_speed);
      000965 21r07r00         [12] 1970 	ld	hl, #_x_speed
      000968 2A               [ 8] 1971 	ld	a, (hl+)
      000969 4F               [ 4] 1972 	ld	c, a
      00096A 46               [ 8] 1973 	ld	b, (hl)
      00096B 21r09r00         [12] 1974 	ld	hl, #_is_facing_right
      00096E CB 46            [12] 1975 	bit	0, (hl)
      000970 28 0B            [12] 1976 	jr	Z, 00105$
      000972 21r0Dr00         [12] 1977 	ld	hl, #_player_x
      000975 2A               [ 8] 1978 	ld	a, (hl+)
      000976 91               [ 4] 1979 	sub	a, c
      000977 4F               [ 4] 1980 	ld	c, a
      000978 7E               [ 8] 1981 	ld	a, (hl)
      000979 98               [ 4] 1982 	sbc	a, b
      00097A 47               [ 4] 1983 	ld	b, a
      00097B 18 0A            [12] 1984 	jr	00106$
      00097D                       1985 00105$:
      00097D 79               [ 4] 1986 	ld	a, c
      00097E 21r0Dr00         [12] 1987 	ld	hl, #_player_x
      000981 86               [ 8] 1988 	add	a, (hl)
      000982 23               [ 8] 1989 	inc	hl
      000983 4F               [ 4] 1990 	ld	c, a
      000984 78               [ 4] 1991 	ld	a, b
      000985 8E               [ 8] 1992 	adc	a, (hl)
      000986 47               [ 4] 1993 	ld	b, a
      000987                       1994 00106$:
      000987 21r0Dr00         [12] 1995 	ld	hl, #_player_x
      00098A 79               [ 4] 1996 	ld	a, c
      00098B 22               [ 8] 1997 	ld	(hl+), a
      00098C 70               [ 8] 1998 	ld	(hl), b
                                   1999 ;src/player.c:392: player_y += (y_speed >> PHYSICS_DAMPNER);
      00098D FAr0Cr00         [16] 2000 	ld	a, (#_y_speed)
      000990 CB 2F            [ 8] 2001 	sra	a
      000992 CB 2F            [ 8] 2002 	sra	a
      000994 21r0Fr00         [12] 2003 	ld	hl, #_player_y
      000997 4E               [ 8] 2004 	ld	c, (hl)
      000998 81               [ 4] 2005 	add	a, c
      000999 77               [ 8] 2006 	ld	(hl), a
                                   2007 ;src/player.c:393: y_speed = y_speed >= clamp_y_velocity ? clamp_y_velocity : y_speed + HURT_G;
      00099A FAr0Cr00         [16] 2008 	ld	a, (#_y_speed)
      00099D EE 80            [ 8] 2009 	xor	a, #0x80
      00099F D6 94            [ 8] 2010 	sub	a, #0x94
      0009A1 38 04            [12] 2011 	jr	C, 00107$
      0009A3 3E 14            [ 8] 2012 	ld	a, #0x14
      0009A5 18 04            [12] 2013 	jr	00108$
      0009A7                       2014 00107$:
      0009A7 FAr0Cr00         [16] 2015 	ld	a, (#_y_speed)
      0009AA 3C               [ 4] 2016 	inc	a
      0009AB                       2017 00108$:
      0009AB EAr0Cr00         [16] 2018 	ld	(#_y_speed),a
                                   2019 ;src/player.c:394: }
      0009AE C9               [16] 2020 	ret
                                   2021 ;src/player.c:396: void end_frame(void){
                                   2022 ;	---------------------------------
                                   2023 ; Function end_frame
                                   2024 ; ---------------------------------
      0009AF                       2025 _end_frame::
                                   2026 ;src/player.c:397: if(frame_counter == (uint8_t)(metasprites_speeds[current_state][current_frame])){
      0009AF 01r00r00         [12] 2027 	ld	bc, #_metasprites_speeds+0
      0009B2 21r13r00         [12] 2028 	ld	hl, #_current_state
      0009B5 6E               [ 8] 2029 	ld	l, (hl)
                                   2030 ;	spillPairReg hl
                                   2031 ;	spillPairReg hl
      0009B6 26 00            [ 8] 2032 	ld	h, #0x00
                                   2033 ;	spillPairReg hl
                                   2034 ;	spillPairReg hl
      0009B8 29               [ 8] 2035 	add	hl, hl
      0009B9 09               [ 8] 2036 	add	hl, bc
      0009BA 2A               [ 8] 2037 	ld	a, (hl+)
      0009BB 4F               [ 4] 2038 	ld	c, a
      0009BC 46               [ 8] 2039 	ld	b, (hl)
      0009BD 79               [ 4] 2040 	ld	a, c
      0009BE 21r02r00         [12] 2041 	ld	hl, #_current_frame
      0009C1 86               [ 8] 2042 	add	a, (hl)
      0009C2 4F               [ 4] 2043 	ld	c, a
      0009C3 30 01            [12] 2044 	jr	NC, 00131$
      0009C5 04               [ 4] 2045 	inc	b
      0009C6                       2046 00131$:
      0009C6 0A               [ 8] 2047 	ld	a, (bc)
      0009C7 4F               [ 4] 2048 	ld	c, a
      0009C8 FAr01r00         [16] 2049 	ld	a, (#_frame_counter)
      0009CB 91               [ 4] 2050 	sub	a, c
      0009CC 20 24            [12] 2051 	jr	NZ, 00104$
                                   2052 ;src/player.c:398: frame_counter = 0;
      0009CE 21r01r00         [12] 2053 	ld	hl, #_frame_counter
      0009D1 36 00            [12] 2054 	ld	(hl), #0x00
                                   2055 ;src/player.c:399: current_frame++;
      0009D3 21r02r00         [12] 2056 	ld	hl, #_current_frame
      0009D6 34               [12] 2057 	inc	(hl)
                                   2058 ;src/player.c:400: if(current_frame == frames_in_state[current_state]){current_frame = 0;}
      0009D7 01r00r00         [12] 2059 	ld	bc, #_frames_in_state+0
      0009DA 79               [ 4] 2060 	ld	a, c
      0009DB 21r13r00         [12] 2061 	ld	hl, #_current_state
      0009DE 86               [ 8] 2062 	add	a, (hl)
      0009DF 4F               [ 4] 2063 	ld	c, a
      0009E0 30 01            [12] 2064 	jr	NC, 00134$
      0009E2 04               [ 4] 2065 	inc	b
      0009E3                       2066 00134$:
      0009E3 0A               [ 8] 2067 	ld	a, (bc)
      0009E4 4F               [ 4] 2068 	ld	c, a
      0009E5 FAr02r00         [16] 2069 	ld	a, (#_current_frame)
      0009E8 91               [ 4] 2070 	sub	a, c
      0009E9 20 0B            [12] 2071 	jr	NZ, 00105$
      0009EB 21r02r00         [12] 2072 	ld	hl, #_current_frame
      0009EE 36 00            [12] 2073 	ld	(hl), #0x00
      0009F0 18 04            [12] 2074 	jr	00105$
      0009F2                       2075 00104$:
                                   2076 ;src/player.c:402: frame_counter++;
      0009F2 21r01r00         [12] 2077 	ld	hl, #_frame_counter
      0009F5 34               [12] 2078 	inc	(hl)
      0009F6                       2079 00105$:
                                   2080 ;src/player.c:405: if(!rand_init){
      0009F6 21r00r00         [12] 2081 	ld	hl, #_rand_init
      0009F9 CB 46            [12] 2082 	bit	0, (hl)
      0009FB C0               [20] 2083 	ret	NZ
                                   2084 ;src/player.c:406: r = r ^ DIV_REG ^ (current_frame << frame_counter);
      0009FC F0r00            [12] 2085 	ldh	a, (_DIV_REG + 0)
      0009FE 21r00r00         [12] 2086 	ld	hl, #_r
      000A01 AE               [ 8] 2087 	xor	a, (hl)
      000A02 21r01r00         [12] 2088 	ld	hl, #_frame_counter
      000A05 46               [ 8] 2089 	ld	b, (hl)
      000A06 21r02r00         [12] 2090 	ld	hl, #_current_frame
      000A09 4E               [ 8] 2091 	ld	c, (hl)
      000A0A 04               [ 4] 2092 	inc	b
      000A0B 18 02            [12] 2093 	jr	00138$
      000A0D                       2094 00137$:
      000A0D CB 21            [ 8] 2095 	sla	c
      000A0F                       2096 00138$:
      000A0F 05               [ 4] 2097 	dec	b
      000A10 20 FB            [12] 2098 	jr	NZ,00137$
      000A12 A9               [ 4] 2099 	xor	a, c
      000A13 EAr00r00         [16] 2100 	ld	(#_r),a
                                   2101 ;src/player.c:408: }
      000A16 C9               [16] 2102 	ret
                                   2103 ;src/player.c:410: static inline void switch_state(PlayerState state){
                                   2104 ;	---------------------------------
                                   2105 ; Function switch_state
                                   2106 ; ---------------------------------
      000A17                       2107 _switch_state:
      000A17 4F               [ 4] 2108 	ld	c, a
                                   2109 ;src/player.c:411: if(current_state == state) {return;}
                                   2110 ;src/player.c:412: if(current_state == PLAYER_STATE_FALLING){instanciate_collision_puffs();}
      000A18 FAr13r00         [16] 2111 	ld	a,(#_current_state)
      000A1B B9               [ 4] 2112 	cp	a,c
      000A1C C8               [20] 2113 	ret	Z
      000A1D D6 03            [ 8] 2114 	sub	a, #0x03
      000A1F 20 05            [12] 2115 	jr	NZ, 00104$
      000A21 C5               [16] 2116 	push	bc
      000A22 CDr53r08         [24] 2117 	call	_instanciate_collision_puffs
      000A25 C1               [12] 2118 	pop	bc
      000A26                       2119 00104$:
                                   2120 ;src/player.c:413: frame_counter = 0;
      000A26 21r01r00         [12] 2121 	ld	hl, #_frame_counter
      000A29 36 00            [12] 2122 	ld	(hl), #0x00
                                   2123 ;src/player.c:414: current_frame = 0;
      000A2B 21r02r00         [12] 2124 	ld	hl, #_current_frame
      000A2E 36 00            [12] 2125 	ld	(hl), #0x00
                                   2126 ;src/player.c:415: current_state = state;
      000A30 21r13r00         [12] 2127 	ld	hl, #_current_state
      000A33 71               [ 8] 2128 	ld	(hl), c
                                   2129 ;src/player.c:416: }
      000A34 C9               [16] 2130 	ret
                                   2131 ;src/player.c:420: static void check_collisions(void){
                                   2132 ;	---------------------------------
                                   2133 ; Function check_collisions
                                   2134 ; ---------------------------------
      000A35                       2135 _check_collisions:
      000A35 E8 F0            [16] 2136 	add	sp, #-16
                                   2137 ;src/player.c:422: for(i=0; i<8; i++){
      000A37 21r04r00         [12] 2138 	ld	hl, #_i
      000A3A 36 00            [12] 2139 	ld	(hl), #0x00
      000A3C                       2140 00133$:
                                   2141 ;src/player.c:423: r = &rect_list[PLAYER_FLOOR][i];
      000A3C FAr0Fr00         [16] 2142 	ld	a, (#_player_y)
      000A3F 07               [ 4] 2143 	rlca
      000A40 07               [ 4] 2144 	rlca
      000A41 E6 03            [ 8] 2145 	and	a, #0x03
      000A43 4F               [ 4] 2146 	ld	c, a
      000A44 06 00            [ 8] 2147 	ld	b, #0x00
      000A46 69               [ 4] 2148 	ld	l, c
      000A47 60               [ 4] 2149 	ld	h, b
      000A48 29               [ 8] 2150 	add	hl, hl
      000A49 29               [ 8] 2151 	add	hl, hl
      000A4A 09               [ 8] 2152 	add	hl, bc
      000A4B 29               [ 8] 2153 	add	hl, hl
      000A4C 29               [ 8] 2154 	add	hl, hl
      000A4D 29               [ 8] 2155 	add	hl, hl
      000A4E 01r00r00         [12] 2156 	ld	bc,#_rect_list
      000A51 09               [ 8] 2157 	add	hl,bc
      000A52 4D               [ 4] 2158 	ld	c, l
      000A53 44               [ 4] 2159 	ld	b, h
      000A54 FAr04r00         [16] 2160 	ld	a, (#_i)
      000A57 5F               [ 4] 2161 	ld	e, a
      000A58 87               [ 4] 2162 	add	a, a
      000A59 87               [ 4] 2163 	add	a, a
      000A5A 83               [ 4] 2164 	add	a, e
      000A5B 81               [ 4] 2165 	add	a, c
      000A5C 4F               [ 4] 2166 	ld	c, a
      000A5D 3E 00            [ 8] 2167 	ld	a, #0x00
      000A5F 88               [ 4] 2168 	adc	a, b
      000A60 F8 01            [12] 2169 	ldhl	sp,	#1
      000A62 71               [ 8] 2170 	ld	(hl), c
      000A63 23               [ 8] 2171 	inc	hl
                                   2172 ;src/player.c:424: if(r->type == INACTIVE) continue;
      000A64 32               [ 8] 2173 	ld	(hl-), a
      000A65 2A               [ 8] 2174 	ld	a, (hl+)
      000A66 5F               [ 4] 2175 	ld	e, a
      000A67 56               [ 8] 2176 	ld	d, (hl)
      000A68 21 04 00         [12] 2177 	ld	hl, #0x0004
      000A6B 19               [ 8] 2178 	add	hl, de
      000A6C 4D               [ 4] 2179 	ld	c, l
      000A6D 44               [ 4] 2180 	ld	b, h
      000A6E 0A               [ 8] 2181 	ld	a, (bc)
      000A6F D6 02            [ 8] 2182 	sub	a, #0x02
      000A71 CAr07r10         [16] 2183 	jp	Z,00131$
                                   2184 ;src/player.c:425: if(!point_vs_rect(r)) {
      000A74 F8 01            [12] 2185 	ldhl	sp,	#1
      000A76 5E               [ 8] 2186 	ld	e, (hl)
      000A77 23               [ 8] 2187 	inc	hl
      000A78 56               [ 8] 2188 	ld	d, (hl)
      000A79 CDrA3r10         [24] 2189 	call	_point_vs_rect
      000A7C 4F               [ 4] 2190 	ld	c, a
      000A7D CB 41            [ 8] 2191 	bit	0, c
      000A7F CAr07r10         [16] 2192 	jp	Z, 00131$
                                   2193 ;src/player.c:434: external_point_area |= ((uint8_t)SUB_TO_PX(last_x) >= (r->x + r->size_x)) ? 0x10 : ((uint8_t)SUB_TO_PX(last_x) <= r->x) ? 0x20 : 0x30;        
      000A82 FAr11r00         [16] 2194 	ld	a, (#_last_x + 1)
      000A85 F8 06            [12] 2195 	ldhl	sp,	#6
      000A87 77               [ 8] 2196 	ld	(hl), a
      000A88 F8 01            [12] 2197 	ldhl	sp,#1
      000A8A 2A               [ 8] 2198 	ld	a, (hl+)
      000A8B 5F               [ 4] 2199 	ld	e, a
      000A8C 56               [ 8] 2200 	ld	d, (hl)
      000A8D 1A               [ 8] 2201 	ld	a, (de)
      000A8E F8 07            [12] 2202 	ldhl	sp,	#7
      000A90 77               [ 8] 2203 	ld	(hl), a
      000A91 2A               [ 8] 2204 	ld	a, (hl+)
      000A92 22               [ 8] 2205 	ld	(hl+), a
      000A93 36 00            [12] 2206 	ld	(hl), #0x00
      000A95 F8 01            [12] 2207 	ldhl	sp,#1
      000A97 2A               [ 8] 2208 	ld	a, (hl+)
      000A98 5F               [ 4] 2209 	ld	e, a
      000A99 56               [ 8] 2210 	ld	d, (hl)
      000A9A 21 02 00         [12] 2211 	ld	hl, #0x0002
      000A9D 19               [ 8] 2212 	add	hl, de
      000A9E E5               [16] 2213 	push	hl
      000A9F 7D               [ 4] 2214 	ld	a, l
      000AA0 F8 0C            [12] 2215 	ldhl	sp,	#12
      000AA2 77               [ 8] 2216 	ld	(hl), a
      000AA3 E1               [12] 2217 	pop	hl
      000AA4 7C               [ 4] 2218 	ld	a, h
      000AA5 F8 0B            [12] 2219 	ldhl	sp,	#11
      000AA7 32               [ 8] 2220 	ld	(hl-), a
      000AA8 2A               [ 8] 2221 	ld	a, (hl+)
      000AA9 5F               [ 4] 2222 	ld	e, a
      000AAA 56               [ 8] 2223 	ld	d, (hl)
      000AAB 1A               [ 8] 2224 	ld	a, (de)
      000AAC F8 0F            [12] 2225 	ldhl	sp,	#15
      000AAE 77               [ 8] 2226 	ld	(hl), a
      000AAF F8 0C            [12] 2227 	ldhl	sp,	#12
      000AB1 22               [ 8] 2228 	ld	(hl+), a
      000AB2 AF               [ 4] 2229 	xor	a, a
      000AB3 32               [ 8] 2230 	ld	(hl-), a
      000AB4 2A               [ 8] 2231 	ld	a, (hl+)
      000AB5 5F               [ 4] 2232 	ld	e, a
      000AB6 56               [ 8] 2233 	ld	d, (hl)
      000AB7 F8 08            [12] 2234 	ldhl	sp,	#8
      000AB9 2A               [ 8] 2235 	ld	a,	(hl+)
      000ABA 66               [ 8] 2236 	ld	h, (hl)
      000ABB 6F               [ 4] 2237 	ld	l, a
      000ABC 19               [ 8] 2238 	add	hl, de
      000ABD E5               [16] 2239 	push	hl
      000ABE 7D               [ 4] 2240 	ld	a, l
      000ABF F8 10            [12] 2241 	ldhl	sp,	#16
      000AC1 77               [ 8] 2242 	ld	(hl), a
      000AC2 E1               [12] 2243 	pop	hl
      000AC3 7C               [ 4] 2244 	ld	a, h
      000AC4 F8 0F            [12] 2245 	ldhl	sp,	#15
      000AC6 77               [ 8] 2246 	ld	(hl), a
      000AC7 F8 06            [12] 2247 	ldhl	sp,	#6
      000AC9 4E               [ 8] 2248 	ld	c, (hl)
      000ACA 06 00            [ 8] 2249 	ld	b, #0x00
      000ACC F8 0E            [12] 2250 	ldhl	sp,	#14
      000ACE 79               [ 4] 2251 	ld	a, c
      000ACF 96               [ 8] 2252 	sub	a, (hl)
      000AD0 23               [ 8] 2253 	inc	hl
      000AD1 78               [ 4] 2254 	ld	a, b
      000AD2 9E               [ 8] 2255 	sbc	a, (hl)
      000AD3 78               [ 4] 2256 	ld	a, b
      000AD4 57               [ 4] 2257 	ld	d, a
      000AD5 CB 7E            [12] 2258 	bit	7, (hl)
      000AD7 28 07            [12] 2259 	jr	Z, 00301$
      000AD9 CB 7A            [ 8] 2260 	bit	7, d
      000ADB 20 08            [12] 2261 	jr	NZ, 00302$
      000ADD BF               [ 4] 2262 	cp	a, a
      000ADE 18 05            [12] 2263 	jr	00302$
      000AE0                       2264 00301$:
      000AE0 CB 7A            [ 8] 2265 	bit	7, d
      000AE2 28 01            [12] 2266 	jr	Z, 00302$
      000AE4 37               [ 4] 2267 	scf
      000AE5                       2268 00302$:
      000AE5 38 06            [12] 2269 	jr	C, 00136$
      000AE7 F8 0F            [12] 2270 	ldhl	sp,	#15
      000AE9 36 10            [12] 2271 	ld	(hl), #0x10
      000AEB 18 0F            [12] 2272 	jr	00137$
      000AED                       2273 00136$:
      000AED F8 07            [12] 2274 	ldhl	sp,	#7
      000AEF 3A               [ 8] 2275 	ld	a, (hl-)
      000AF0 96               [ 8] 2276 	sub	a, (hl)
      000AF1 38 04            [12] 2277 	jr	C, 00138$
      000AF3 3E 20            [ 8] 2278 	ld	a, #0x20
      000AF5 18 02            [12] 2279 	jr	00139$
      000AF7                       2280 00138$:
      000AF7 3E 30            [ 8] 2281 	ld	a, #0x30
      000AF9                       2282 00139$:
      000AF9 F8 0F            [12] 2283 	ldhl	sp,	#15
      000AFB 77               [ 8] 2284 	ld	(hl), a
      000AFC                       2285 00137$:
      000AFC F8 0F            [12] 2286 	ldhl	sp,	#15
      000AFE 7E               [ 8] 2287 	ld	a, (hl)
      000AFF F8 00            [12] 2288 	ldhl	sp,	#0
                                   2289 ;src/player.c:435: external_point_area |= (last_y <= (r->y - r->size_y)) ? 0x01 : (last_y >= r->y) ? 0x02 : 0x03;
      000B01 22               [ 8] 2290 	ld	(hl+), a
      000B02 2A               [ 8] 2291 	ld	a, (hl+)
      000B03 5F               [ 4] 2292 	ld	e, a
      000B04 56               [ 8] 2293 	ld	d, (hl)
      000B05 6B               [ 4] 2294 	ld	l, e
      000B06 62               [ 4] 2295 	ld	h, d
      000B07 23               [ 8] 2296 	inc	hl
      000B08 E5               [16] 2297 	push	hl
      000B09 7D               [ 4] 2298 	ld	a, l
      000B0A F8 10            [12] 2299 	ldhl	sp,	#16
      000B0C 77               [ 8] 2300 	ld	(hl), a
      000B0D E1               [12] 2301 	pop	hl
      000B0E 7C               [ 4] 2302 	ld	a, h
      000B0F F8 0F            [12] 2303 	ldhl	sp,	#15
      000B11 32               [ 8] 2304 	ld	(hl-), a
      000B12 2A               [ 8] 2305 	ld	a, (hl+)
      000B13 5F               [ 4] 2306 	ld	e, a
      000B14 56               [ 8] 2307 	ld	d, (hl)
      000B15 1A               [ 8] 2308 	ld	a, (de)
      000B16 F8 03            [12] 2309 	ldhl	sp,	#3
      000B18 77               [ 8] 2310 	ld	(hl), a
      000B19 2A               [ 8] 2311 	ld	a, (hl+)
      000B1A 22               [ 8] 2312 	ld	(hl+), a
      000B1B 36 00            [12] 2313 	ld	(hl), #0x00
      000B1D F8 01            [12] 2314 	ldhl	sp,#1
      000B1F 2A               [ 8] 2315 	ld	a, (hl+)
      000B20 5F               [ 4] 2316 	ld	e, a
      000B21 56               [ 8] 2317 	ld	d, (hl)
      000B22 21 03 00         [12] 2318 	ld	hl, #0x0003
      000B25 19               [ 8] 2319 	add	hl, de
      000B26 E5               [16] 2320 	push	hl
      000B27 7D               [ 4] 2321 	ld	a, l
      000B28 F8 0E            [12] 2322 	ldhl	sp,	#14
      000B2A 77               [ 8] 2323 	ld	(hl), a
      000B2B E1               [12] 2324 	pop	hl
      000B2C 7C               [ 4] 2325 	ld	a, h
      000B2D F8 0D            [12] 2326 	ldhl	sp,	#13
      000B2F 32               [ 8] 2327 	ld	(hl-), a
      000B30 2A               [ 8] 2328 	ld	a, (hl+)
      000B31 5F               [ 4] 2329 	ld	e, a
      000B32 56               [ 8] 2330 	ld	d, (hl)
      000B33 1A               [ 8] 2331 	ld	a, (de)
      000B34 F8 09            [12] 2332 	ldhl	sp,	#9
      000B36 77               [ 8] 2333 	ld	(hl), a
      000B37 F8 06            [12] 2334 	ldhl	sp,	#6
      000B39 22               [ 8] 2335 	ld	(hl+), a
      000B3A AF               [ 4] 2336 	xor	a, a
      000B3B 32               [ 8] 2337 	ld	(hl-), a
      000B3C 2B               [ 8] 2338 	dec	hl
      000B3D 2B               [ 8] 2339 	dec	hl
      000B3E 2A               [ 8] 2340 	ld	a, (hl+)
      000B3F 5F               [ 4] 2341 	ld	e, a
      000B40 2A               [ 8] 2342 	ld	a, (hl+)
      000B41 57               [ 4] 2343 	ld	d, a
      000B42 2A               [ 8] 2344 	ld	a,	(hl+)
      000B43 66               [ 8] 2345 	ld	h, (hl)
      000B44 6F               [ 4] 2346 	ld	l, a
      000B45 7B               [ 4] 2347 	ld	a, e
      000B46 95               [ 4] 2348 	sub	a, l
      000B47 5F               [ 4] 2349 	ld	e, a
      000B48 7A               [ 4] 2350 	ld	a, d
      000B49 9C               [ 4] 2351 	sbc	a, h
      000B4A F8 09            [12] 2352 	ldhl	sp,	#9
      000B4C 32               [ 8] 2353 	ld	(hl-), a
      000B4D 73               [ 8] 2354 	ld	(hl), e
      000B4E 21r12r00         [12] 2355 	ld	hl, #_last_y
      000B51 4E               [ 8] 2356 	ld	c, (hl)
      000B52 06 00            [ 8] 2357 	ld	b, #0x00
      000B54 F8 08            [12] 2358 	ldhl	sp,	#8
      000B56 2A               [ 8] 2359 	ld	a, (hl+)
      000B57 91               [ 4] 2360 	sub	a, c
      000B58 7E               [ 8] 2361 	ld	a, (hl)
      000B59 98               [ 4] 2362 	sbc	a, b
      000B5A 56               [ 8] 2363 	ld	d, (hl)
      000B5B 78               [ 4] 2364 	ld	a, b
      000B5C CB 7F            [ 8] 2365 	bit	7,a
      000B5E 28 07            [12] 2366 	jr	Z, 00303$
      000B60 CB 7A            [ 8] 2367 	bit	7, d
      000B62 20 08            [12] 2368 	jr	NZ, 00304$
      000B64 BF               [ 4] 2369 	cp	a, a
      000B65 18 05            [12] 2370 	jr	00304$
      000B67                       2371 00303$:
      000B67 CB 7A            [ 8] 2372 	bit	7, d
      000B69 28 01            [12] 2373 	jr	Z, 00304$
      000B6B 37               [ 4] 2374 	scf
      000B6C                       2375 00304$:
      000B6C 38 06            [12] 2376 	jr	C, 00140$
      000B6E F8 09            [12] 2377 	ldhl	sp,	#9
      000B70 36 01            [12] 2378 	ld	(hl), #0x01
      000B72 18 11            [12] 2379 	jr	00141$
      000B74                       2380 00140$:
      000B74 FAr12r00         [16] 2381 	ld	a, (#_last_y)
      000B77 F8 03            [12] 2382 	ldhl	sp,	#3
      000B79 96               [ 8] 2383 	sub	a, (hl)
      000B7A 38 04            [12] 2384 	jr	C, 00142$
      000B7C 3E 02            [ 8] 2385 	ld	a, #0x02
      000B7E 18 02            [12] 2386 	jr	00143$
      000B80                       2387 00142$:
      000B80 3E 03            [ 8] 2388 	ld	a, #0x03
      000B82                       2389 00143$:
      000B82 F8 09            [12] 2390 	ldhl	sp,	#9
      000B84 77               [ 8] 2391 	ld	(hl), a
      000B85                       2392 00141$:
      000B85 F8 09            [12] 2393 	ldhl	sp,	#9
      000B87 46               [ 8] 2394 	ld	b, (hl)
      000B88 F8 00            [12] 2395 	ldhl	sp,	#0
      000B8A 7E               [ 8] 2396 	ld	a, (hl)
      000B8B B0               [ 4] 2397 	or	a, b
      000B8C 4F               [ 4] 2398 	ld	c, a
                                   2399 ;src/player.c:437: if((player_y > last_y) ? (player_y - last_y) > 50 : (last_y - player_y) > 50){
      000B8D FAr12r00         [16] 2400 	ld	a, (#_last_y)
      000B90 21r0Fr00         [12] 2401 	ld	hl, #_player_y
      000B93 96               [ 8] 2402 	sub	a, (hl)
      000B94 30 2C            [12] 2403 	jr	NC, 00144$
      000B96 7E               [ 8] 2404 	ld	a, (hl)
      000B97 06 00            [ 8] 2405 	ld	b, #0x00
      000B99 21r12r00         [12] 2406 	ld	hl, #_last_y
      000B9C 5E               [ 8] 2407 	ld	e, (hl)
      000B9D 16 00            [ 8] 2408 	ld	d, #0x00
      000B9F 93               [ 4] 2409 	sub	a, e
      000BA0 6F               [ 4] 2410 	ld	l, a
                                   2411 ;	spillPairReg hl
                                   2412 ;	spillPairReg hl
      000BA1 78               [ 4] 2413 	ld	a, b
      000BA2 9A               [ 4] 2414 	sbc	a, d
      000BA3 67               [ 4] 2415 	ld	h, a
                                   2416 ;	spillPairReg hl
                                   2417 ;	spillPairReg hl
      000BA4 5C               [ 4] 2418 	ld	e, h
      000BA5 16 00            [ 8] 2419 	ld	d, #0x00
      000BA7 3E 32            [ 8] 2420 	ld	a, #0x32
      000BA9 BD               [ 4] 2421 	cp	a, l
      000BAA 3E 00            [ 8] 2422 	ld	a, #0x00
      000BAC 9C               [ 4] 2423 	sbc	a, h
      000BAD CB 7B            [ 8] 2424 	bit	7, e
      000BAF 28 07            [12] 2425 	jr	Z, 00305$
      000BB1 CB 7A            [ 8] 2426 	bit	7, d
      000BB3 20 08            [12] 2427 	jr	NZ, 00306$
      000BB5 BF               [ 4] 2428 	cp	a, a
      000BB6 18 05            [12] 2429 	jr	00306$
      000BB8                       2430 00305$:
      000BB8 CB 7A            [ 8] 2431 	bit	7, d
      000BBA 28 01            [12] 2432 	jr	Z, 00306$
      000BBC 37               [ 4] 2433 	scf
      000BBD                       2434 00306$:
      000BBD 3E 00            [ 8] 2435 	ld	a, #0x00
      000BBF 17               [ 4] 2436 	rla
      000BC0 18 2E            [12] 2437 	jr	00145$
      000BC2                       2438 00144$:
      000BC2 21r12r00         [12] 2439 	ld	hl, #_last_y
      000BC5 5E               [ 8] 2440 	ld	e, (hl)
      000BC6 16 00            [ 8] 2441 	ld	d, #0x00
      000BC8 21r0Fr00         [12] 2442 	ld	hl, #_player_y
      000BCB 6E               [ 8] 2443 	ld	l, (hl)
                                   2444 ;	spillPairReg hl
                                   2445 ;	spillPairReg hl
      000BCC 26 00            [ 8] 2446 	ld	h, #0x00
                                   2447 ;	spillPairReg hl
                                   2448 ;	spillPairReg hl
      000BCE 7B               [ 4] 2449 	ld	a, e
      000BCF 95               [ 4] 2450 	sub	a, l
      000BD0 6F               [ 4] 2451 	ld	l, a
                                   2452 ;	spillPairReg hl
                                   2453 ;	spillPairReg hl
      000BD1 7A               [ 4] 2454 	ld	a, d
      000BD2 9C               [ 4] 2455 	sbc	a, h
      000BD3 47               [ 4] 2456 	ld	b, a
      000BD4 58               [ 4] 2457 	ld	e, b
      000BD5 16 00            [ 8] 2458 	ld	d, #0x00
      000BD7 3E 32            [ 8] 2459 	ld	a, #0x32
      000BD9 BD               [ 4] 2460 	cp	a, l
      000BDA 3E 00            [ 8] 2461 	ld	a, #0x00
      000BDC 98               [ 4] 2462 	sbc	a, b
      000BDD CB 7B            [ 8] 2463 	bit	7, e
      000BDF 28 07            [12] 2464 	jr	Z, 00307$
      000BE1 CB 7A            [ 8] 2465 	bit	7, d
      000BE3 20 08            [12] 2466 	jr	NZ, 00308$
      000BE5 BF               [ 4] 2467 	cp	a, a
      000BE6 18 05            [12] 2468 	jr	00308$
      000BE8                       2469 00307$:
      000BE8 CB 7A            [ 8] 2470 	bit	7, d
      000BEA 28 01            [12] 2471 	jr	Z, 00308$
      000BEC 37               [ 4] 2472 	scf
      000BED                       2473 00308$:
      000BED 3E 00            [ 8] 2474 	ld	a, #0x00
      000BEF 17               [ 4] 2475 	rla
      000BF0                       2476 00145$:
      000BF0 B7               [ 4] 2477 	or	a, a
      000BF1 28 06            [12] 2478 	jr	Z, 00106$
                                   2479 ;src/player.c:438: external_point_area = (external_point_area & 0xF0) + 0x02; //check for overflow height
      000BF3 79               [ 4] 2480 	ld	a, c
      000BF4 E6 F0            [ 8] 2481 	and	a, #0xf0
      000BF6 C6 02            [ 8] 2482 	add	a, #0x02
      000BF8 4F               [ 4] 2483 	ld	c, a
      000BF9                       2484 00106$:
                                   2485 ;src/player.c:441: if(rect_functions[r->type](external_point_area)) continue;
      000BF9 F8 01            [12] 2486 	ldhl	sp,#1
      000BFB 2A               [ 8] 2487 	ld	a, (hl+)
      000BFC 5F               [ 4] 2488 	ld	e, a
      000BFD 56               [ 8] 2489 	ld	d, (hl)
      000BFE 21 04 00         [12] 2490 	ld	hl, #0x0004
      000C01 19               [ 8] 2491 	add	hl, de
      000C02 5D               [ 4] 2492 	ld	e, l
      000C03 54               [ 4] 2493 	ld	d, h
      000C04 1A               [ 8] 2494 	ld	a, (de)
      000C05 26 00            [ 8] 2495 	ld	h, #0x00
                                   2496 ;	spillPairReg hl
                                   2497 ;	spillPairReg hl
      000C07 6F               [ 4] 2498 	ld	l, a
      000C08 29               [ 8] 2499 	add	hl, hl
      000C09 11r04r00         [12] 2500 	ld	de, #_rect_functions
      000C0C 19               [ 8] 2501 	add	hl, de
      000C0D 2A               [ 8] 2502 	ld	a, (hl+)
      000C0E 47               [ 4] 2503 	ld	b, a
      000C0F 66               [ 8] 2504 	ld	h, (hl)
                                   2505 ;	spillPairReg hl
      000C10 C5               [16] 2506 	push	bc
      000C11 79               [ 4] 2507 	ld	a, c
      000C12 68               [ 4] 2508 	ld	l, b
                                   2509 ;	spillPairReg hl
                                   2510 ;	spillPairReg hl
      000C13 CDr00r00         [24] 2511 	call	___sdcc_call_hl
      000C16 6F               [ 4] 2512 	ld	l, a
                                   2513 ;	spillPairReg hl
                                   2514 ;	spillPairReg hl
      000C17 C1               [12] 2515 	pop	bc
      000C18 CB 45            [ 8] 2516 	bit	0, l
      000C1A C2r07r10         [16] 2517 	jp	NZ, 00131$
                                   2518 ;src/player.c:444: switch (external_point_area)
      000C1D 79               [ 4] 2519 	ld	a,c
      000C1E FE 11            [ 8] 2520 	cp	a,#0x11
      000C20 28 26            [12] 2521 	jr	Z, 00109$
      000C22 FE 12            [ 8] 2522 	cp	a,#0x12
      000C24 CAr34r0D         [16] 2523 	jp	Z,00113$
      000C27 FE 13            [ 8] 2524 	cp	a,#0x13
      000C29 CAr0Cr0E         [16] 2525 	jp	Z,00117$
      000C2C FE 21            [ 8] 2526 	cp	a,#0x21
      000C2E CAr2Ar0E         [16] 2527 	jp	Z,00118$
      000C31 FE 22            [ 8] 2528 	cp	a,#0x22
      000C33 CAr03r0F         [16] 2529 	jp	Z,00122$
      000C36 FE 23            [ 8] 2530 	cp	a,#0x23
      000C38 CArC0r0F         [16] 2531 	jp	Z,00126$
      000C3B FE 31            [ 8] 2532 	cp	a,#0x31
      000C3D CArD2r0F         [16] 2533 	jp	Z,00127$
      000C40 D6 32            [ 8] 2534 	sub	a, #0x32
      000C42 CArF8r0F         [16] 2535 	jp	Z,00128$
      000C45 C3r07r10         [16] 2536 	jp	00131$
                                   2537 ;src/player.c:446: case RIGHT_UP: // RIGHT - UP
      000C48                       2538 00109$:
                                   2539 ;src/player.c:447: rx = r->x + r->size_x;
      000C48 F8 01            [12] 2540 	ldhl	sp,#1
      000C4A 2A               [ 8] 2541 	ld	a, (hl+)
      000C4B 5F               [ 4] 2542 	ld	e, a
      000C4C 56               [ 8] 2543 	ld	d, (hl)
      000C4D 1A               [ 8] 2544 	ld	a, (de)
      000C4E F8 0A            [12] 2545 	ldhl	sp,#10
      000C50 5E               [ 8] 2546 	ld	e, (hl)
      000C51 23               [ 8] 2547 	inc	hl
      000C52 56               [ 8] 2548 	ld	d, (hl)
      000C53 F5               [16] 2549 	push	af
      000C54 1A               [ 8] 2550 	ld	a, (de)
      000C55 F8 05            [12] 2551 	ldhl	sp,	#5
      000C57 77               [ 8] 2552 	ld	(hl), a
      000C58 F1               [12] 2553 	pop	af
      000C59 86               [ 8] 2554 	add	a, (hl)
      000C5A 23               [ 8] 2555 	inc	hl
      000C5B 77               [ 8] 2556 	ld	(hl), a
                                   2557 ;src/player.c:448: ry = r->y - r->size_y;
      000C5C F8 0E            [12] 2558 	ldhl	sp,#14
      000C5E 2A               [ 8] 2559 	ld	a, (hl+)
      000C5F 5F               [ 4] 2560 	ld	e, a
      000C60 3A               [ 8] 2561 	ld	a, (hl-)
      000C61 2B               [ 8] 2562 	dec	hl
      000C62 2B               [ 8] 2563 	dec	hl
      000C63 57               [ 4] 2564 	ld	d, a
      000C64 1A               [ 8] 2565 	ld	a, (de)
      000C65 5E               [ 8] 2566 	ld	e, (hl)
      000C66 23               [ 8] 2567 	inc	hl
      000C67 56               [ 8] 2568 	ld	d, (hl)
      000C68 F5               [16] 2569 	push	af
      000C69 1A               [ 8] 2570 	ld	a, (de)
      000C6A 4F               [ 4] 2571 	ld	c, a
      000C6B F1               [12] 2572 	pop	af
      000C6C 91               [ 4] 2573 	sub	a, c
      000C6D F8 05            [12] 2574 	ldhl	sp,	#5
      000C6F 77               [ 8] 2575 	ld	(hl), a
      000C70 4E               [ 8] 2576 	ld	c, (hl)
                                   2577 ;src/player.c:449: if((ry-player_y)*((uint8_t)SUB_TO_PX(last_x) - (uint8_t)SUB_TO_PX(player_x)) < (last_y - player_y)*(rx-(uint8_t)SUB_TO_PX(player_x))){
      000C71 06 00            [ 8] 2578 	ld	b, #0x00
      000C73 FAr0Fr00         [16] 2579 	ld	a, (#_player_y)
      000C76 F8 06            [12] 2580 	ldhl	sp,	#6
      000C78 22               [ 8] 2581 	ld	(hl+), a
      000C79 AF               [ 4] 2582 	xor	a, a
      000C7A 32               [ 8] 2583 	ld	(hl-), a
      000C7B 2A               [ 8] 2584 	ld	a, (hl+)
      000C7C 5F               [ 4] 2585 	ld	e, a
      000C7D 56               [ 8] 2586 	ld	d, (hl)
      000C7E 79               [ 4] 2587 	ld	a, c
      000C7F 93               [ 4] 2588 	sub	a, e
      000C80 5F               [ 4] 2589 	ld	e, a
      000C81 78               [ 4] 2590 	ld	a, b
      000C82 9A               [ 4] 2591 	sbc	a, d
      000C83 F8 0F            [12] 2592 	ldhl	sp,	#15
      000C85 32               [ 8] 2593 	ld	(hl-), a
      000C86 73               [ 8] 2594 	ld	(hl), e
      000C87 FAr11r00         [16] 2595 	ld	a, (#_last_x + 1)
      000C8A 06 00            [ 8] 2596 	ld	b, #0x00
      000C8C 21r0Er00         [12] 2597 	ld	hl, #_player_x + 1
      000C8F 4E               [ 8] 2598 	ld	c, (hl)
      000C90 F8 08            [12] 2599 	ldhl	sp,	#8
      000C92 71               [ 8] 2600 	ld	(hl), c
      000C93 23               [ 8] 2601 	inc	hl
      000C94 36 00            [12] 2602 	ld	(hl), #0x00
      000C96 5F               [ 4] 2603 	ld	e, a
      000C97 50               [ 4] 2604 	ld	d, b
      000C98 3A               [ 8] 2605 	ld	a, (hl-)
      000C99 6E               [ 8] 2606 	ld	l, (hl)
      000C9A 67               [ 4] 2607 	ld	h, a
      000C9B 7B               [ 4] 2608 	ld	a, e
      000C9C 95               [ 4] 2609 	sub	a, l
      000C9D 5F               [ 4] 2610 	ld	e, a
      000C9E 7A               [ 4] 2611 	ld	a, d
      000C9F 9C               [ 4] 2612 	sbc	a, h
      000CA0 47               [ 4] 2613 	ld	b, a
      000CA1 4B               [ 4] 2614 	ld	c, e
      000CA2 F8 0E            [12] 2615 	ldhl	sp,	#14
      000CA4 2A               [ 8] 2616 	ld	a, (hl+)
      000CA5 5F               [ 4] 2617 	ld	e, a
      000CA6 56               [ 8] 2618 	ld	d, (hl)
      000CA7 CDr00r00         [24] 2619 	call	__mulint
      000CAA F8 0A            [12] 2620 	ldhl	sp,	#10
      000CAC 79               [ 4] 2621 	ld	a, c
      000CAD 22               [ 8] 2622 	ld	(hl+), a
      000CAE 70               [ 8] 2623 	ld	(hl), b
      000CAF FAr12r00         [16] 2624 	ld	a, (#_last_y)
      000CB2 F8 0C            [12] 2625 	ldhl	sp,	#12
      000CB4 22               [ 8] 2626 	ld	(hl+), a
      000CB5 AF               [ 4] 2627 	xor	a, a
      000CB6 32               [ 8] 2628 	ld	(hl-), a
      000CB7 2A               [ 8] 2629 	ld	a, (hl+)
      000CB8 5F               [ 4] 2630 	ld	e, a
      000CB9 56               [ 8] 2631 	ld	d, (hl)
      000CBA F8 06            [12] 2632 	ldhl	sp,	#6
      000CBC 2A               [ 8] 2633 	ld	a,	(hl+)
      000CBD 66               [ 8] 2634 	ld	h, (hl)
      000CBE 6F               [ 4] 2635 	ld	l, a
      000CBF 7B               [ 4] 2636 	ld	a, e
      000CC0 95               [ 4] 2637 	sub	a, l
      000CC1 5F               [ 4] 2638 	ld	e, a
      000CC2 7A               [ 4] 2639 	ld	a, d
      000CC3 9C               [ 4] 2640 	sbc	a, h
      000CC4 F8 0F            [12] 2641 	ldhl	sp,	#15
      000CC6 32               [ 8] 2642 	ld	(hl-), a
      000CC7 73               [ 8] 2643 	ld	(hl), e
      000CC8 F8 04            [12] 2644 	ldhl	sp,	#4
      000CCA 4E               [ 8] 2645 	ld	c, (hl)
      000CCB 06 00            [ 8] 2646 	ld	b, #0x00
      000CCD F8 08            [12] 2647 	ldhl	sp,#8
      000CCF 2A               [ 8] 2648 	ld	a, (hl+)
      000CD0 5F               [ 4] 2649 	ld	e, a
      000CD1 56               [ 8] 2650 	ld	d, (hl)
      000CD2 79               [ 4] 2651 	ld	a, c
      000CD3 93               [ 4] 2652 	sub	a, e
      000CD4 5F               [ 4] 2653 	ld	e, a
      000CD5 78               [ 4] 2654 	ld	a, b
      000CD6 9A               [ 4] 2655 	sbc	a, d
      000CD7 47               [ 4] 2656 	ld	b, a
      000CD8 4B               [ 4] 2657 	ld	c, e
      000CD9 F8 0E            [12] 2658 	ldhl	sp,	#14
      000CDB 2A               [ 8] 2659 	ld	a, (hl+)
      000CDC 5F               [ 4] 2660 	ld	e, a
      000CDD 56               [ 8] 2661 	ld	d, (hl)
      000CDE CDr00r00         [24] 2662 	call	__mulint
      000CE1 F8 0A            [12] 2663 	ldhl	sp,	#10
      000CE3 2A               [ 8] 2664 	ld	a, (hl+)
      000CE4 91               [ 4] 2665 	sub	a, c
      000CE5 7E               [ 8] 2666 	ld	a, (hl)
      000CE6 98               [ 4] 2667 	sbc	a, b
      000CE7 56               [ 8] 2668 	ld	d, (hl)
      000CE8 78               [ 4] 2669 	ld	a, b
      000CE9 5F               [ 4] 2670 	ld	e, a
      000CEA CB 7B            [ 8] 2671 	bit	7, e
      000CEC 28 07            [12] 2672 	jr	Z, 00317$
      000CEE CB 7A            [ 8] 2673 	bit	7, d
      000CF0 20 08            [12] 2674 	jr	NZ, 00318$
      000CF2 BF               [ 4] 2675 	cp	a, a
      000CF3 18 05            [12] 2676 	jr	00318$
      000CF5                       2677 00317$:
      000CF5 CB 7A            [ 8] 2678 	bit	7, d
      000CF7 28 01            [12] 2679 	jr	Z, 00318$
      000CF9 37               [ 4] 2680 	scf
      000CFA                       2681 00318$:
      000CFA 30 1F            [12] 2682 	jr	NC, 00111$
                                   2683 ;src/player.c:451: player_x = (uint16_t)PX_TO_SUB(r->x + r->size_x + 1);
      000CFC F8 01            [12] 2684 	ldhl	sp,#1
      000CFE 2A               [ 8] 2685 	ld	a, (hl+)
      000CFF 5F               [ 4] 2686 	ld	e, a
      000D00 2A               [ 8] 2687 	ld	a, (hl+)
      000D01 57               [ 4] 2688 	ld	d, a
      000D02 1A               [ 8] 2689 	ld	a, (de)
      000D03 4F               [ 4] 2690 	ld	c, a
      000D04 06 00            [ 8] 2691 	ld	b, #0x00
      000D06 7E               [ 8] 2692 	ld	a, (hl)
      000D07 1E 00            [ 8] 2693 	ld	e, #0x00
      000D09 81               [ 4] 2694 	add	a, c
      000D0A 4F               [ 4] 2695 	ld	c, a
      000D0B 7B               [ 4] 2696 	ld	a, e
      000D0C 88               [ 4] 2697 	adc	a, b
      000D0D 47               [ 4] 2698 	ld	b, a
      000D0E 03               [ 8] 2699 	inc	bc
      000D0F 41               [ 4] 2700 	ld	b, c
      000D10 0E 00            [ 8] 2701 	ld	c, #0x00
      000D12 21r0Dr00         [12] 2702 	ld	hl, #_player_x
      000D15 79               [ 4] 2703 	ld	a, c
      000D16 22               [ 8] 2704 	ld	(hl+), a
      000D17 70               [ 8] 2705 	ld	(hl), b
      000D18 C3r07r10         [16] 2706 	jp	00131$
      000D1B                       2707 00111$:
                                   2708 ;src/player.c:455: player_y = r->y - r->size_y - 1;
      000D1B F8 05            [12] 2709 	ldhl	sp,	#5
      000D1D 7E               [ 8] 2710 	ld	a, (hl)
      000D1E 3D               [ 4] 2711 	dec	a
      000D1F EAr0Fr00         [16] 2712 	ld	(#_player_y),a
                                   2713 ;src/player.c:456: is_grounded = true;
      000D22 21r0Ar00         [12] 2714 	ld	hl, #_is_grounded
      000D25 36 01            [12] 2715 	ld	(hl), #0x01
                                   2716 ;src/player.c:457: current_coyote_frames = 0;
      000D27 21r14r00         [12] 2717 	ld	hl, #_current_coyote_frames
      000D2A 36 00            [12] 2718 	ld	(hl), #0x00
                                   2719 ;src/player.c:458: y_speed = 0;
      000D2C 21r0Cr00         [12] 2720 	ld	hl, #_y_speed
      000D2F 36 00            [12] 2721 	ld	(hl), #0x00
                                   2722 ;src/player.c:460: break;
      000D31 C3r07r10         [16] 2723 	jp	00131$
                                   2724 ;src/player.c:462: case RIGHT_DOWN: // RIGHT - DOWN
      000D34                       2725 00113$:
                                   2726 ;src/player.c:463: rx = r->x + r->size_x;
      000D34 F8 01            [12] 2727 	ldhl	sp,#1
      000D36 2A               [ 8] 2728 	ld	a, (hl+)
      000D37 5F               [ 4] 2729 	ld	e, a
      000D38 56               [ 8] 2730 	ld	d, (hl)
      000D39 1A               [ 8] 2731 	ld	a, (de)
      000D3A F8 0A            [12] 2732 	ldhl	sp,#10
      000D3C 5E               [ 8] 2733 	ld	e, (hl)
      000D3D 23               [ 8] 2734 	inc	hl
      000D3E 56               [ 8] 2735 	ld	d, (hl)
      000D3F F5               [16] 2736 	push	af
      000D40 1A               [ 8] 2737 	ld	a, (de)
      000D41 F8 05            [12] 2738 	ldhl	sp,	#5
      000D43 77               [ 8] 2739 	ld	(hl), a
      000D44 F1               [12] 2740 	pop	af
      000D45 86               [ 8] 2741 	add	a, (hl)
      000D46 23               [ 8] 2742 	inc	hl
      000D47 77               [ 8] 2743 	ld	(hl), a
                                   2744 ;src/player.c:464: ry = r->y;
      000D48 F8 0E            [12] 2745 	ldhl	sp,#14
      000D4A 2A               [ 8] 2746 	ld	a, (hl+)
      000D4B 5F               [ 4] 2747 	ld	e, a
      000D4C 56               [ 8] 2748 	ld	d, (hl)
      000D4D 1A               [ 8] 2749 	ld	a, (de)
      000D4E F8 05            [12] 2750 	ldhl	sp,	#5
      000D50 77               [ 8] 2751 	ld	(hl), a
      000D51 4E               [ 8] 2752 	ld	c, (hl)
                                   2753 ;src/player.c:465: if((ry-player_y)*((uint8_t)SUB_TO_PX(last_x) - (uint8_t)SUB_TO_PX(player_x)) > (last_y - player_y)*(rx-(uint8_t)SUB_TO_PX(player_x))){
      000D52 06 00            [ 8] 2754 	ld	b, #0x00
      000D54 FAr0Fr00         [16] 2755 	ld	a, (#_player_y)
      000D57 F8 06            [12] 2756 	ldhl	sp,	#6
      000D59 22               [ 8] 2757 	ld	(hl+), a
      000D5A AF               [ 4] 2758 	xor	a, a
      000D5B 32               [ 8] 2759 	ld	(hl-), a
      000D5C 2A               [ 8] 2760 	ld	a, (hl+)
      000D5D 5F               [ 4] 2761 	ld	e, a
      000D5E 56               [ 8] 2762 	ld	d, (hl)
      000D5F 79               [ 4] 2763 	ld	a, c
      000D60 93               [ 4] 2764 	sub	a, e
      000D61 5F               [ 4] 2765 	ld	e, a
      000D62 78               [ 4] 2766 	ld	a, b
      000D63 9A               [ 4] 2767 	sbc	a, d
      000D64 F8 0F            [12] 2768 	ldhl	sp,	#15
      000D66 32               [ 8] 2769 	ld	(hl-), a
      000D67 73               [ 8] 2770 	ld	(hl), e
      000D68 FAr11r00         [16] 2771 	ld	a, (#_last_x + 1)
      000D6B 06 00            [ 8] 2772 	ld	b, #0x00
      000D6D 21r0Er00         [12] 2773 	ld	hl, #_player_x + 1
      000D70 4E               [ 8] 2774 	ld	c, (hl)
      000D71 F8 08            [12] 2775 	ldhl	sp,	#8
      000D73 71               [ 8] 2776 	ld	(hl), c
      000D74 23               [ 8] 2777 	inc	hl
      000D75 36 00            [12] 2778 	ld	(hl), #0x00
      000D77 5F               [ 4] 2779 	ld	e, a
      000D78 50               [ 4] 2780 	ld	d, b
      000D79 3A               [ 8] 2781 	ld	a, (hl-)
      000D7A 6E               [ 8] 2782 	ld	l, (hl)
      000D7B 67               [ 4] 2783 	ld	h, a
      000D7C 7B               [ 4] 2784 	ld	a, e
      000D7D 95               [ 4] 2785 	sub	a, l
      000D7E 5F               [ 4] 2786 	ld	e, a
      000D7F 7A               [ 4] 2787 	ld	a, d
      000D80 9C               [ 4] 2788 	sbc	a, h
      000D81 47               [ 4] 2789 	ld	b, a
      000D82 4B               [ 4] 2790 	ld	c, e
      000D83 F8 0E            [12] 2791 	ldhl	sp,	#14
      000D85 2A               [ 8] 2792 	ld	a, (hl+)
      000D86 5F               [ 4] 2793 	ld	e, a
      000D87 56               [ 8] 2794 	ld	d, (hl)
      000D88 CDr00r00         [24] 2795 	call	__mulint
      000D8B F8 0A            [12] 2796 	ldhl	sp,	#10
      000D8D 79               [ 4] 2797 	ld	a, c
      000D8E 22               [ 8] 2798 	ld	(hl+), a
      000D8F 70               [ 8] 2799 	ld	(hl), b
      000D90 FAr12r00         [16] 2800 	ld	a, (#_last_y)
      000D93 F8 0C            [12] 2801 	ldhl	sp,	#12
      000D95 22               [ 8] 2802 	ld	(hl+), a
      000D96 AF               [ 4] 2803 	xor	a, a
      000D97 32               [ 8] 2804 	ld	(hl-), a
      000D98 2A               [ 8] 2805 	ld	a, (hl+)
      000D99 5F               [ 4] 2806 	ld	e, a
      000D9A 56               [ 8] 2807 	ld	d, (hl)
      000D9B F8 06            [12] 2808 	ldhl	sp,	#6
      000D9D 2A               [ 8] 2809 	ld	a,	(hl+)
      000D9E 66               [ 8] 2810 	ld	h, (hl)
      000D9F 6F               [ 4] 2811 	ld	l, a
      000DA0 7B               [ 4] 2812 	ld	a, e
      000DA1 95               [ 4] 2813 	sub	a, l
      000DA2 5F               [ 4] 2814 	ld	e, a
      000DA3 7A               [ 4] 2815 	ld	a, d
      000DA4 9C               [ 4] 2816 	sbc	a, h
      000DA5 F8 0F            [12] 2817 	ldhl	sp,	#15
      000DA7 32               [ 8] 2818 	ld	(hl-), a
      000DA8 73               [ 8] 2819 	ld	(hl), e
      000DA9 F8 04            [12] 2820 	ldhl	sp,	#4
      000DAB 4E               [ 8] 2821 	ld	c, (hl)
      000DAC 06 00            [ 8] 2822 	ld	b, #0x00
      000DAE F8 08            [12] 2823 	ldhl	sp,#8
      000DB0 2A               [ 8] 2824 	ld	a, (hl+)
      000DB1 5F               [ 4] 2825 	ld	e, a
      000DB2 56               [ 8] 2826 	ld	d, (hl)
      000DB3 79               [ 4] 2827 	ld	a, c
      000DB4 93               [ 4] 2828 	sub	a, e
      000DB5 5F               [ 4] 2829 	ld	e, a
      000DB6 78               [ 4] 2830 	ld	a, b
      000DB7 9A               [ 4] 2831 	sbc	a, d
      000DB8 47               [ 4] 2832 	ld	b, a
      000DB9 4B               [ 4] 2833 	ld	c, e
      000DBA F8 0E            [12] 2834 	ldhl	sp,	#14
      000DBC 2A               [ 8] 2835 	ld	a, (hl+)
      000DBD 5F               [ 4] 2836 	ld	e, a
      000DBE 56               [ 8] 2837 	ld	d, (hl)
      000DBF CDr00r00         [24] 2838 	call	__mulint
      000DC2 F8 0A            [12] 2839 	ldhl	sp,	#10
      000DC4 79               [ 4] 2840 	ld	a, c
      000DC5 96               [ 8] 2841 	sub	a, (hl)
      000DC6 23               [ 8] 2842 	inc	hl
      000DC7 78               [ 4] 2843 	ld	a, b
      000DC8 9E               [ 8] 2844 	sbc	a, (hl)
      000DC9 78               [ 4] 2845 	ld	a, b
      000DCA 57               [ 4] 2846 	ld	d, a
      000DCB 5E               [ 8] 2847 	ld	e, (hl)
      000DCC CB 7B            [ 8] 2848 	bit	7, e
      000DCE 28 07            [12] 2849 	jr	Z, 00319$
      000DD0 CB 7A            [ 8] 2850 	bit	7, d
      000DD2 20 08            [12] 2851 	jr	NZ, 00320$
      000DD4 BF               [ 4] 2852 	cp	a, a
      000DD5 18 05            [12] 2853 	jr	00320$
      000DD7                       2854 00319$:
      000DD7 CB 7A            [ 8] 2855 	bit	7, d
      000DD9 28 01            [12] 2856 	jr	Z, 00320$
      000DDB 37               [ 4] 2857 	scf
      000DDC                       2858 00320$:
      000DDC 30 1F            [12] 2859 	jr	NC, 00115$
                                   2860 ;src/player.c:467: player_x = (uint16_t)PX_TO_SUB(r->x + r->size_x + 1);
      000DDE F8 01            [12] 2861 	ldhl	sp,#1
      000DE0 2A               [ 8] 2862 	ld	a, (hl+)
      000DE1 5F               [ 4] 2863 	ld	e, a
      000DE2 2A               [ 8] 2864 	ld	a, (hl+)
      000DE3 57               [ 4] 2865 	ld	d, a
      000DE4 1A               [ 8] 2866 	ld	a, (de)
      000DE5 4F               [ 4] 2867 	ld	c, a
      000DE6 06 00            [ 8] 2868 	ld	b, #0x00
      000DE8 7E               [ 8] 2869 	ld	a, (hl)
      000DE9 1E 00            [ 8] 2870 	ld	e, #0x00
      000DEB 81               [ 4] 2871 	add	a, c
      000DEC 4F               [ 4] 2872 	ld	c, a
      000DED 7B               [ 4] 2873 	ld	a, e
      000DEE 88               [ 4] 2874 	adc	a, b
      000DEF 47               [ 4] 2875 	ld	b, a
      000DF0 03               [ 8] 2876 	inc	bc
      000DF1 41               [ 4] 2877 	ld	b, c
      000DF2 0E 00            [ 8] 2878 	ld	c, #0x00
      000DF4 21r0Dr00         [12] 2879 	ld	hl, #_player_x
      000DF7 79               [ 4] 2880 	ld	a, c
      000DF8 22               [ 8] 2881 	ld	(hl+), a
      000DF9 70               [ 8] 2882 	ld	(hl), b
      000DFA C3r07r10         [16] 2883 	jp	00131$
      000DFD                       2884 00115$:
                                   2885 ;src/player.c:471: player_y = r->y + 1;
      000DFD F8 05            [12] 2886 	ldhl	sp,	#5
      000DFF 7E               [ 8] 2887 	ld	a, (hl)
      000E00 3C               [ 4] 2888 	inc	a
      000E01 EAr0Fr00         [16] 2889 	ld	(#_player_y),a
                                   2890 ;src/player.c:472: y_speed = 0;
      000E04 21r0Cr00         [12] 2891 	ld	hl, #_y_speed
      000E07 36 00            [12] 2892 	ld	(hl), #0x00
                                   2893 ;src/player.c:475: break;
      000E09 C3r07r10         [16] 2894 	jp	00131$
                                   2895 ;src/player.c:477: case RIGHT_CENTER: // RIGHT - CENTER
      000E0C                       2896 00117$:
                                   2897 ;src/player.c:478: player_x = (uint16_t)PX_TO_SUB(r->x + r->size_x + 1);
      000E0C F8 01            [12] 2898 	ldhl	sp,#1
      000E0E 2A               [ 8] 2899 	ld	a, (hl+)
      000E0F 5F               [ 4] 2900 	ld	e, a
      000E10 56               [ 8] 2901 	ld	d, (hl)
      000E11 1A               [ 8] 2902 	ld	a, (de)
      000E12 4F               [ 4] 2903 	ld	c, a
      000E13 06 00            [ 8] 2904 	ld	b, #0x00
      000E15 F8 0A            [12] 2905 	ldhl	sp,#10
      000E17 2A               [ 8] 2906 	ld	a, (hl+)
      000E18 5F               [ 4] 2907 	ld	e, a
      000E19 56               [ 8] 2908 	ld	d, (hl)
      000E1A 1A               [ 8] 2909 	ld	a, (de)
      000E1B 26 00            [ 8] 2910 	ld	h, #0x00
                                   2911 ;	spillPairReg hl
                                   2912 ;	spillPairReg hl
      000E1D 6F               [ 4] 2913 	ld	l, a
      000E1E 09               [ 8] 2914 	add	hl, bc
      000E1F 23               [ 8] 2915 	inc	hl
      000E20 4D               [ 4] 2916 	ld	c, l
      000E21 AF               [ 4] 2917 	xor	a, a
      000E22 21r0Dr00         [12] 2918 	ld	hl, #_player_x
      000E25 22               [ 8] 2919 	ld	(hl+), a
      000E26 71               [ 8] 2920 	ld	(hl), c
                                   2921 ;src/player.c:480: break;
      000E27 C3r07r10         [16] 2922 	jp	00131$
                                   2923 ;src/player.c:482: case LEFT_UP: // LEFT - UP
      000E2A                       2924 00118$:
                                   2925 ;src/player.c:483: rx = r->x;
      000E2A F8 01            [12] 2926 	ldhl	sp,#1
      000E2C 2A               [ 8] 2927 	ld	a, (hl+)
      000E2D 5F               [ 4] 2928 	ld	e, a
      000E2E 56               [ 8] 2929 	ld	d, (hl)
      000E2F 1A               [ 8] 2930 	ld	a, (de)
      000E30 F8 0B            [12] 2931 	ldhl	sp,	#11
      000E32 77               [ 8] 2932 	ld	(hl), a
                                   2933 ;src/player.c:484: ry = r->y - r->size_y;
      000E33 F8 0E            [12] 2934 	ldhl	sp,#14
      000E35 2A               [ 8] 2935 	ld	a, (hl+)
      000E36 5F               [ 4] 2936 	ld	e, a
      000E37 3A               [ 8] 2937 	ld	a, (hl-)
      000E38 2B               [ 8] 2938 	dec	hl
      000E39 2B               [ 8] 2939 	dec	hl
      000E3A 57               [ 4] 2940 	ld	d, a
      000E3B 1A               [ 8] 2941 	ld	a, (de)
      000E3C 5E               [ 8] 2942 	ld	e, (hl)
      000E3D 23               [ 8] 2943 	inc	hl
      000E3E 56               [ 8] 2944 	ld	d, (hl)
      000E3F F5               [16] 2945 	push	af
      000E40 1A               [ 8] 2946 	ld	a, (de)
      000E41 4F               [ 4] 2947 	ld	c, a
      000E42 F1               [12] 2948 	pop	af
      000E43 91               [ 4] 2949 	sub	a, c
      000E44 F8 04            [12] 2950 	ldhl	sp,	#4
      000E46 77               [ 8] 2951 	ld	(hl), a
      000E47 4E               [ 8] 2952 	ld	c, (hl)
                                   2953 ;src/player.c:485: if((ry-player_y)*((uint8_t)SUB_TO_PX(last_x) - (uint8_t)SUB_TO_PX(player_x)) > (last_y - player_y)*(rx-(uint8_t)SUB_TO_PX(player_x))){
      000E48 06 00            [ 8] 2954 	ld	b, #0x00
      000E4A FAr0Fr00         [16] 2955 	ld	a, (#_player_y)
      000E4D F8 05            [12] 2956 	ldhl	sp,	#5
      000E4F 22               [ 8] 2957 	ld	(hl+), a
      000E50 AF               [ 4] 2958 	xor	a, a
      000E51 32               [ 8] 2959 	ld	(hl-), a
      000E52 2A               [ 8] 2960 	ld	a, (hl+)
      000E53 5F               [ 4] 2961 	ld	e, a
      000E54 56               [ 8] 2962 	ld	d, (hl)
      000E55 79               [ 4] 2963 	ld	a, c
      000E56 93               [ 4] 2964 	sub	a, e
      000E57 5F               [ 4] 2965 	ld	e, a
      000E58 78               [ 4] 2966 	ld	a, b
      000E59 9A               [ 4] 2967 	sbc	a, d
      000E5A F8 0F            [12] 2968 	ldhl	sp,	#15
      000E5C 32               [ 8] 2969 	ld	(hl-), a
      000E5D 73               [ 8] 2970 	ld	(hl), e
      000E5E FAr11r00         [16] 2971 	ld	a, (#_last_x + 1)
      000E61 06 00            [ 8] 2972 	ld	b, #0x00
      000E63 21r0Er00         [12] 2973 	ld	hl, #_player_x + 1
      000E66 4E               [ 8] 2974 	ld	c, (hl)
      000E67 F8 07            [12] 2975 	ldhl	sp,	#7
      000E69 71               [ 8] 2976 	ld	(hl), c
      000E6A 23               [ 8] 2977 	inc	hl
      000E6B 36 00            [12] 2978 	ld	(hl), #0x00
      000E6D 5F               [ 4] 2979 	ld	e, a
      000E6E 50               [ 4] 2980 	ld	d, b
      000E6F 3A               [ 8] 2981 	ld	a, (hl-)
      000E70 6E               [ 8] 2982 	ld	l, (hl)
      000E71 67               [ 4] 2983 	ld	h, a
      000E72 7B               [ 4] 2984 	ld	a, e
      000E73 95               [ 4] 2985 	sub	a, l
      000E74 5F               [ 4] 2986 	ld	e, a
      000E75 7A               [ 4] 2987 	ld	a, d
      000E76 9C               [ 4] 2988 	sbc	a, h
      000E77 47               [ 4] 2989 	ld	b, a
      000E78 4B               [ 4] 2990 	ld	c, e
      000E79 F8 0E            [12] 2991 	ldhl	sp,	#14
      000E7B 2A               [ 8] 2992 	ld	a, (hl+)
      000E7C 5F               [ 4] 2993 	ld	e, a
      000E7D 56               [ 8] 2994 	ld	d, (hl)
      000E7E CDr00r00         [24] 2995 	call	__mulint
      000E81 F8 09            [12] 2996 	ldhl	sp,	#9
      000E83 79               [ 4] 2997 	ld	a, c
      000E84 22               [ 8] 2998 	ld	(hl+), a
      000E85 70               [ 8] 2999 	ld	(hl), b
      000E86 FAr12r00         [16] 3000 	ld	a, (#_last_y)
      000E89 F8 0C            [12] 3001 	ldhl	sp,	#12
      000E8B 22               [ 8] 3002 	ld	(hl+), a
      000E8C AF               [ 4] 3003 	xor	a, a
      000E8D 32               [ 8] 3004 	ld	(hl-), a
      000E8E 2A               [ 8] 3005 	ld	a, (hl+)
      000E8F 5F               [ 4] 3006 	ld	e, a
      000E90 56               [ 8] 3007 	ld	d, (hl)
      000E91 F8 05            [12] 3008 	ldhl	sp,	#5
      000E93 2A               [ 8] 3009 	ld	a,	(hl+)
      000E94 66               [ 8] 3010 	ld	h, (hl)
      000E95 6F               [ 4] 3011 	ld	l, a
      000E96 7B               [ 4] 3012 	ld	a, e
      000E97 95               [ 4] 3013 	sub	a, l
      000E98 5F               [ 4] 3014 	ld	e, a
      000E99 7A               [ 4] 3015 	ld	a, d
      000E9A 9C               [ 4] 3016 	sbc	a, h
      000E9B F8 0F            [12] 3017 	ldhl	sp,	#15
      000E9D 32               [ 8] 3018 	ld	(hl-), a
      000E9E 73               [ 8] 3019 	ld	(hl), e
      000E9F F8 0B            [12] 3020 	ldhl	sp,	#11
      000EA1 4E               [ 8] 3021 	ld	c, (hl)
      000EA2 06 00            [ 8] 3022 	ld	b, #0x00
      000EA4 F8 07            [12] 3023 	ldhl	sp,#7
      000EA6 2A               [ 8] 3024 	ld	a, (hl+)
      000EA7 5F               [ 4] 3025 	ld	e, a
      000EA8 56               [ 8] 3026 	ld	d, (hl)
      000EA9 79               [ 4] 3027 	ld	a, c
      000EAA 93               [ 4] 3028 	sub	a, e
      000EAB 5F               [ 4] 3029 	ld	e, a
      000EAC 78               [ 4] 3030 	ld	a, b
      000EAD 9A               [ 4] 3031 	sbc	a, d
      000EAE 47               [ 4] 3032 	ld	b, a
      000EAF 4B               [ 4] 3033 	ld	c, e
      000EB0 F8 0E            [12] 3034 	ldhl	sp,	#14
      000EB2 2A               [ 8] 3035 	ld	a, (hl+)
      000EB3 5F               [ 4] 3036 	ld	e, a
      000EB4 56               [ 8] 3037 	ld	d, (hl)
      000EB5 CDr00r00         [24] 3038 	call	__mulint
      000EB8 F8 09            [12] 3039 	ldhl	sp,	#9
      000EBA 79               [ 4] 3040 	ld	a, c
      000EBB 96               [ 8] 3041 	sub	a, (hl)
      000EBC 23               [ 8] 3042 	inc	hl
      000EBD 78               [ 4] 3043 	ld	a, b
      000EBE 9E               [ 8] 3044 	sbc	a, (hl)
      000EBF 78               [ 4] 3045 	ld	a, b
      000EC0 57               [ 4] 3046 	ld	d, a
      000EC1 5E               [ 8] 3047 	ld	e, (hl)
      000EC2 CB 7B            [ 8] 3048 	bit	7, e
      000EC4 28 07            [12] 3049 	jr	Z, 00321$
      000EC6 CB 7A            [ 8] 3050 	bit	7, d
      000EC8 20 08            [12] 3051 	jr	NZ, 00322$
      000ECA BF               [ 4] 3052 	cp	a, a
      000ECB 18 05            [12] 3053 	jr	00322$
      000ECD                       3054 00321$:
      000ECD CB 7A            [ 8] 3055 	bit	7, d
      000ECF 28 01            [12] 3056 	jr	Z, 00322$
      000ED1 37               [ 4] 3057 	scf
      000ED2                       3058 00322$:
      000ED2 30 16            [12] 3059 	jr	NC, 00120$
                                   3060 ;src/player.c:487: player_x = (uint16_t)PX_TO_SUB(r->x - 1);
      000ED4 F8 01            [12] 3061 	ldhl	sp,#1
      000ED6 2A               [ 8] 3062 	ld	a, (hl+)
      000ED7 5F               [ 4] 3063 	ld	e, a
      000ED8 56               [ 8] 3064 	ld	d, (hl)
      000ED9 1A               [ 8] 3065 	ld	a, (de)
      000EDA 06 00            [ 8] 3066 	ld	b, #0x00
      000EDC 4F               [ 4] 3067 	ld	c, a
      000EDD 0B               [ 8] 3068 	dec	bc
      000EDE 41               [ 4] 3069 	ld	b, c
      000EDF 0E 00            [ 8] 3070 	ld	c, #0x00
      000EE1 21r0Dr00         [12] 3071 	ld	hl, #_player_x
      000EE4 79               [ 4] 3072 	ld	a, c
      000EE5 22               [ 8] 3073 	ld	(hl+), a
      000EE6 70               [ 8] 3074 	ld	(hl), b
      000EE7 C3r07r10         [16] 3075 	jp	00131$
      000EEA                       3076 00120$:
                                   3077 ;src/player.c:491: player_y = r->y - r->size_y - 1;
      000EEA F8 04            [12] 3078 	ldhl	sp,	#4
      000EEC 7E               [ 8] 3079 	ld	a, (hl)
      000EED 3D               [ 4] 3080 	dec	a
      000EEE EAr0Fr00         [16] 3081 	ld	(#_player_y),a
                                   3082 ;src/player.c:492: is_grounded = true;
      000EF1 21r0Ar00         [12] 3083 	ld	hl, #_is_grounded
      000EF4 36 01            [12] 3084 	ld	(hl), #0x01
                                   3085 ;src/player.c:493: current_coyote_frames = 0;
      000EF6 21r14r00         [12] 3086 	ld	hl, #_current_coyote_frames
      000EF9 36 00            [12] 3087 	ld	(hl), #0x00
                                   3088 ;src/player.c:494: y_speed = 0;
      000EFB 21r0Cr00         [12] 3089 	ld	hl, #_y_speed
      000EFE 36 00            [12] 3090 	ld	(hl), #0x00
                                   3091 ;src/player.c:496: break;
      000F00 C3r07r10         [16] 3092 	jp	00131$
                                   3093 ;src/player.c:498: case LEFT_DOWN: // LEFT - DOWN
      000F03                       3094 00122$:
                                   3095 ;src/player.c:499: rx = r->x;
      000F03 F8 01            [12] 3096 	ldhl	sp,#1
      000F05 2A               [ 8] 3097 	ld	a, (hl+)
      000F06 5F               [ 4] 3098 	ld	e, a
      000F07 56               [ 8] 3099 	ld	d, (hl)
      000F08 1A               [ 8] 3100 	ld	a, (de)
      000F09 F8 0D            [12] 3101 	ldhl	sp,	#13
                                   3102 ;src/player.c:500: ry = r->y;
      000F0B 22               [ 8] 3103 	ld	(hl+), a
      000F0C 2A               [ 8] 3104 	ld	a, (hl+)
      000F0D 5F               [ 4] 3105 	ld	e, a
      000F0E 56               [ 8] 3106 	ld	d, (hl)
      000F0F 1A               [ 8] 3107 	ld	a, (de)
      000F10 77               [ 8] 3108 	ld	(hl), a
      000F11 4E               [ 8] 3109 	ld	c, (hl)
                                   3110 ;src/player.c:501: if((ry-player_y)*((uint8_t)SUB_TO_PX(last_x) - (uint8_t)SUB_TO_PX(player_x)) < (last_y - player_y)*(rx-(uint8_t)SUB_TO_PX(player_x))){
      000F12 06 00            [ 8] 3111 	ld	b, #0x00
      000F14 FAr0Fr00         [16] 3112 	ld	a, (#_player_y)
      000F17 F8 03            [12] 3113 	ldhl	sp,	#3
      000F19 22               [ 8] 3114 	ld	(hl+), a
      000F1A AF               [ 4] 3115 	xor	a, a
      000F1B 32               [ 8] 3116 	ld	(hl-), a
      000F1C 2A               [ 8] 3117 	ld	a, (hl+)
      000F1D 5F               [ 4] 3118 	ld	e, a
      000F1E 56               [ 8] 3119 	ld	d, (hl)
      000F1F 79               [ 4] 3120 	ld	a, c
      000F20 93               [ 4] 3121 	sub	a, e
      000F21 5F               [ 4] 3122 	ld	e, a
      000F22 78               [ 4] 3123 	ld	a, b
      000F23 9A               [ 4] 3124 	sbc	a, d
      000F24 F8 0C            [12] 3125 	ldhl	sp,	#12
      000F26 32               [ 8] 3126 	ld	(hl-), a
      000F27 73               [ 8] 3127 	ld	(hl), e
      000F28 FAr11r00         [16] 3128 	ld	a, (#_last_x + 1)
      000F2B 06 00            [ 8] 3129 	ld	b, #0x00
      000F2D 21r0Er00         [12] 3130 	ld	hl, #_player_x + 1
      000F30 4E               [ 8] 3131 	ld	c, (hl)
      000F31 F8 05            [12] 3132 	ldhl	sp,	#5
      000F33 71               [ 8] 3133 	ld	(hl), c
      000F34 23               [ 8] 3134 	inc	hl
      000F35 36 00            [12] 3135 	ld	(hl), #0x00
      000F37 5F               [ 4] 3136 	ld	e, a
      000F38 50               [ 4] 3137 	ld	d, b
      000F39 3A               [ 8] 3138 	ld	a, (hl-)
      000F3A 6E               [ 8] 3139 	ld	l, (hl)
      000F3B 67               [ 4] 3140 	ld	h, a
      000F3C 7B               [ 4] 3141 	ld	a, e
      000F3D 95               [ 4] 3142 	sub	a, l
      000F3E 5F               [ 4] 3143 	ld	e, a
      000F3F 7A               [ 4] 3144 	ld	a, d
      000F40 9C               [ 4] 3145 	sbc	a, h
      000F41 47               [ 4] 3146 	ld	b, a
      000F42 4B               [ 4] 3147 	ld	c, e
      000F43 F8 0B            [12] 3148 	ldhl	sp,	#11
      000F45 2A               [ 8] 3149 	ld	a, (hl+)
      000F46 5F               [ 4] 3150 	ld	e, a
      000F47 56               [ 8] 3151 	ld	d, (hl)
      000F48 CDr00r00         [24] 3152 	call	__mulint
      000F4B F8 07            [12] 3153 	ldhl	sp,	#7
      000F4D 79               [ 4] 3154 	ld	a, c
      000F4E 22               [ 8] 3155 	ld	(hl+), a
      000F4F 70               [ 8] 3156 	ld	(hl), b
      000F50 FAr12r00         [16] 3157 	ld	a, (#_last_y)
      000F53 F8 09            [12] 3158 	ldhl	sp,	#9
      000F55 22               [ 8] 3159 	ld	(hl+), a
      000F56 AF               [ 4] 3160 	xor	a, a
      000F57 32               [ 8] 3161 	ld	(hl-), a
      000F58 2A               [ 8] 3162 	ld	a, (hl+)
      000F59 5F               [ 4] 3163 	ld	e, a
      000F5A 56               [ 8] 3164 	ld	d, (hl)
      000F5B F8 03            [12] 3165 	ldhl	sp,	#3
      000F5D 2A               [ 8] 3166 	ld	a,	(hl+)
      000F5E 66               [ 8] 3167 	ld	h, (hl)
      000F5F 6F               [ 4] 3168 	ld	l, a
      000F60 7B               [ 4] 3169 	ld	a, e
      000F61 95               [ 4] 3170 	sub	a, l
      000F62 5F               [ 4] 3171 	ld	e, a
      000F63 7A               [ 4] 3172 	ld	a, d
      000F64 9C               [ 4] 3173 	sbc	a, h
      000F65 F8 0C            [12] 3174 	ldhl	sp,	#12
      000F67 32               [ 8] 3175 	ld	(hl-), a
      000F68 7B               [ 4] 3176 	ld	a, e
      000F69 22               [ 8] 3177 	ld	(hl+), a
      000F6A 23               [ 8] 3178 	inc	hl
      000F6B 4E               [ 8] 3179 	ld	c, (hl)
      000F6C 06 00            [ 8] 3180 	ld	b, #0x00
      000F6E F8 05            [12] 3181 	ldhl	sp,#5
      000F70 2A               [ 8] 3182 	ld	a, (hl+)
      000F71 5F               [ 4] 3183 	ld	e, a
      000F72 56               [ 8] 3184 	ld	d, (hl)
      000F73 79               [ 4] 3185 	ld	a, c
      000F74 93               [ 4] 3186 	sub	a, e
      000F75 5F               [ 4] 3187 	ld	e, a
      000F76 78               [ 4] 3188 	ld	a, b
      000F77 9A               [ 4] 3189 	sbc	a, d
      000F78 47               [ 4] 3190 	ld	b, a
      000F79 4B               [ 4] 3191 	ld	c, e
      000F7A F8 0B            [12] 3192 	ldhl	sp,	#11
      000F7C 2A               [ 8] 3193 	ld	a, (hl+)
      000F7D 5F               [ 4] 3194 	ld	e, a
      000F7E 56               [ 8] 3195 	ld	d, (hl)
      000F7F CDr00r00         [24] 3196 	call	__mulint
      000F82 F8 07            [12] 3197 	ldhl	sp,	#7
      000F84 2A               [ 8] 3198 	ld	a, (hl+)
      000F85 91               [ 4] 3199 	sub	a, c
      000F86 7E               [ 8] 3200 	ld	a, (hl)
      000F87 98               [ 4] 3201 	sbc	a, b
      000F88 56               [ 8] 3202 	ld	d, (hl)
      000F89 78               [ 4] 3203 	ld	a, b
      000F8A 5F               [ 4] 3204 	ld	e, a
      000F8B CB 7B            [ 8] 3205 	bit	7, e
      000F8D 28 07            [12] 3206 	jr	Z, 00323$
      000F8F CB 7A            [ 8] 3207 	bit	7, d
      000F91 20 08            [12] 3208 	jr	NZ, 00324$
      000F93 BF               [ 4] 3209 	cp	a, a
      000F94 18 05            [12] 3210 	jr	00324$
      000F96                       3211 00323$:
      000F96 CB 7A            [ 8] 3212 	bit	7, d
      000F98 28 01            [12] 3213 	jr	Z, 00324$
      000F9A 37               [ 4] 3214 	scf
      000F9B                       3215 00324$:
      000F9B 30 15            [12] 3216 	jr	NC, 00124$
                                   3217 ;src/player.c:503: player_x = (uint16_t)PX_TO_SUB(r->x - 1);
      000F9D F8 01            [12] 3218 	ldhl	sp,#1
      000F9F 2A               [ 8] 3219 	ld	a, (hl+)
      000FA0 5F               [ 4] 3220 	ld	e, a
      000FA1 56               [ 8] 3221 	ld	d, (hl)
      000FA2 1A               [ 8] 3222 	ld	a, (de)
      000FA3 06 00            [ 8] 3223 	ld	b, #0x00
      000FA5 4F               [ 4] 3224 	ld	c, a
      000FA6 0B               [ 8] 3225 	dec	bc
      000FA7 41               [ 4] 3226 	ld	b, c
      000FA8 0E 00            [ 8] 3227 	ld	c, #0x00
      000FAA 21r0Dr00         [12] 3228 	ld	hl, #_player_x
      000FAD 79               [ 4] 3229 	ld	a, c
      000FAE 22               [ 8] 3230 	ld	(hl+), a
      000FAF 70               [ 8] 3231 	ld	(hl), b
      000FB0 18 55            [12] 3232 	jr	00131$
      000FB2                       3233 00124$:
                                   3234 ;src/player.c:507: player_y = r->y + 1;
      000FB2 F8 0F            [12] 3235 	ldhl	sp,	#15
      000FB4 7E               [ 8] 3236 	ld	a, (hl)
      000FB5 3C               [ 4] 3237 	inc	a
      000FB6 EAr0Fr00         [16] 3238 	ld	(#_player_y),a
                                   3239 ;src/player.c:508: y_speed = 0;
      000FB9 21r0Cr00         [12] 3240 	ld	hl, #_y_speed
      000FBC 36 00            [12] 3241 	ld	(hl), #0x00
                                   3242 ;src/player.c:511: break;
      000FBE 18 47            [12] 3243 	jr	00131$
                                   3244 ;src/player.c:513: case LEFT_CENTER: // LEFT - CENTER
      000FC0                       3245 00126$:
                                   3246 ;src/player.c:514: player_x = (uint16_t)PX_TO_SUB(r->x - 1);
      000FC0 F8 01            [12] 3247 	ldhl	sp,#1
      000FC2 2A               [ 8] 3248 	ld	a, (hl+)
      000FC3 5F               [ 4] 3249 	ld	e, a
      000FC4 56               [ 8] 3250 	ld	d, (hl)
      000FC5 1A               [ 8] 3251 	ld	a, (de)
      000FC6 06 00            [ 8] 3252 	ld	b, #0x00
      000FC8 4F               [ 4] 3253 	ld	c, a
      000FC9 0B               [ 8] 3254 	dec	bc
      000FCA AF               [ 4] 3255 	xor	a, a
      000FCB 21r0Dr00         [12] 3256 	ld	hl, #_player_x
      000FCE 22               [ 8] 3257 	ld	(hl+), a
      000FCF 71               [ 8] 3258 	ld	(hl), c
                                   3259 ;src/player.c:516: break;
      000FD0 18 35            [12] 3260 	jr	00131$
                                   3261 ;src/player.c:518: case CENTER_UP: // CENTER - UP
      000FD2                       3262 00127$:
                                   3263 ;src/player.c:519: player_y = r->y - r->size_y - 1;
      000FD2 F8 0E            [12] 3264 	ldhl	sp,#14
      000FD4 2A               [ 8] 3265 	ld	a, (hl+)
      000FD5 5F               [ 4] 3266 	ld	e, a
      000FD6 3A               [ 8] 3267 	ld	a, (hl-)
      000FD7 2B               [ 8] 3268 	dec	hl
      000FD8 2B               [ 8] 3269 	dec	hl
      000FD9 57               [ 4] 3270 	ld	d, a
      000FDA 1A               [ 8] 3271 	ld	a, (de)
      000FDB 5E               [ 8] 3272 	ld	e, (hl)
      000FDC 23               [ 8] 3273 	inc	hl
      000FDD 56               [ 8] 3274 	ld	d, (hl)
      000FDE F5               [16] 3275 	push	af
      000FDF 1A               [ 8] 3276 	ld	a, (de)
      000FE0 4F               [ 4] 3277 	ld	c, a
      000FE1 F1               [12] 3278 	pop	af
      000FE2 91               [ 4] 3279 	sub	a, c
      000FE3 3D               [ 4] 3280 	dec	a
      000FE4 EAr0Fr00         [16] 3281 	ld	(#_player_y),a
                                   3282 ;src/player.c:520: is_grounded = true;
      000FE7 21r0Ar00         [12] 3283 	ld	hl, #_is_grounded
      000FEA 36 01            [12] 3284 	ld	(hl), #0x01
                                   3285 ;src/player.c:521: current_coyote_frames = 0;
      000FEC 21r14r00         [12] 3286 	ld	hl, #_current_coyote_frames
      000FEF 36 00            [12] 3287 	ld	(hl), #0x00
                                   3288 ;src/player.c:522: y_speed = 0;
      000FF1 21r0Cr00         [12] 3289 	ld	hl, #_y_speed
      000FF4 36 00            [12] 3290 	ld	(hl), #0x00
                                   3291 ;src/player.c:523: break;
      000FF6 18 0F            [12] 3292 	jr	00131$
                                   3293 ;src/player.c:525: case CENTER_DOWN: // CENTER - DOWN
      000FF8                       3294 00128$:
                                   3295 ;src/player.c:526: player_y = r->y + 1;
      000FF8 F8 0E            [12] 3296 	ldhl	sp,#14
      000FFA 2A               [ 8] 3297 	ld	a, (hl+)
      000FFB 5F               [ 4] 3298 	ld	e, a
      000FFC 56               [ 8] 3299 	ld	d, (hl)
      000FFD 1A               [ 8] 3300 	ld	a, (de)
      000FFE 3C               [ 4] 3301 	inc	a
      000FFF EAr0Fr00         [16] 3302 	ld	(#_player_y),a
                                   3303 ;src/player.c:527: y_speed = 0;
      001002 21r0Cr00         [12] 3304 	ld	hl, #_y_speed
      001005 36 00            [12] 3305 	ld	(hl), #0x00
                                   3306 ;src/player.c:533: }
      001007                       3307 00131$:
                                   3308 ;src/player.c:422: for(i=0; i<8; i++){
      001007 21r04r00         [12] 3309 	ld	hl, #_i
      00100A 34               [12] 3310 	inc	(hl)
      00100B 7E               [ 8] 3311 	ld	a, (hl)
      00100C D6 08            [ 8] 3312 	sub	a, #0x08
      00100E DAr3Cr0A         [16] 3313 	jp	C, 00133$
                                   3314 ;src/player.c:535: }
      001011 E8 10            [16] 3315 	add	sp, #16
      001013 C9               [16] 3316 	ret
                                   3317 ;src/player.c:537: static void update_score(void){
                                   3318 ;	---------------------------------
                                   3319 ; Function update_score
                                   3320 ; ---------------------------------
      001014                       3321 _update_score:
      001014 3B               [ 8] 3322 	dec	sp
      001015 3B               [ 8] 3323 	dec	sp
                                   3324 ;src/player.c:539: if((PREV_PLAYER_FLOOR != PLAYER_FLOOR) && PLAYER_FLOOR == ((highest_visited_floor - 1) & 0x03)){
      001016 FAr12r00         [16] 3325 	ld	a, (#_last_y)
      001019 07               [ 4] 3326 	rlca
      00101A 07               [ 4] 3327 	rlca
      00101B E6 03            [ 8] 3328 	and	a, #0x03
      00101D F8 00            [12] 3329 	ldhl	sp,	#0
      00101F 77               [ 8] 3330 	ld	(hl), a
      001020 21r0Fr00         [12] 3331 	ld	hl, #_player_y
      001023 7E               [ 8] 3332 	ld	a, (hl)
      001024 07               [ 4] 3333 	rlca
      001025 07               [ 4] 3334 	rlca
      001026 E6 03            [ 8] 3335 	and	a, #0x03
      001028 5F               [ 4] 3336 	ld	e, a
                                   3337 ;src/player.c:542: max_player_y = (uint8_t)((PREV_PLAYER_FLOOR << 6) - player_y);
      001029 7E               [ 8] 3338 	ld	a, (hl)
      00102A F8 01            [12] 3339 	ldhl	sp,	#1
                                   3340 ;src/player.c:539: if((PREV_PLAYER_FLOOR != PLAYER_FLOOR) && PLAYER_FLOOR == ((highest_visited_floor - 1) & 0x03)){
      00102C 32               [ 8] 3341 	ld	(hl-), a
      00102D 7E               [ 8] 3342 	ld	a, (hl)
      00102E 93               [ 4] 3343 	sub	a, e
      00102F 28 36            [12] 3344 	jr	Z, 00102$
      001031 21r19r00         [12] 3345 	ld	hl, #_highest_visited_floor
      001034 4E               [ 8] 3346 	ld	c, (hl)
      001035 06 00            [ 8] 3347 	ld	b, #0x00
      001037 0B               [ 8] 3348 	dec	bc
      001038 79               [ 4] 3349 	ld	a, c
      001039 E6 03            [ 8] 3350 	and	a, #0x03
      00103B 4F               [ 4] 3351 	ld	c, a
      00103C 06 00            [ 8] 3352 	ld	b, #0x00
                                   3353 ;	spillPairReg hl
                                   3354 ;	spillPairReg hl
      00103E 7B               [ 4] 3355 	ld	a, e
      00103F 16 00            [ 8] 3356 	ld	d, #0x00
      001041 91               [ 4] 3357 	sub	a, c
      001042 20 23            [12] 3358 	jr	NZ, 00102$
      001044 7A               [ 4] 3359 	ld	a, d
      001045 90               [ 4] 3360 	sub	a, b
      001046 20 1F            [12] 3361 	jr	NZ, 00102$
                                   3362 ;src/player.c:540: score += 4;
      001048 21r15r00         [12] 3363 	ld	hl, #_score
      00104B 2A               [ 8] 3364 	ld	a, (hl+)
      00104C 4F               [ 4] 3365 	ld	c, a
      00104D 3A               [ 8] 3366 	ld	a, (hl-)
      00104E 47               [ 4] 3367 	ld	b, a
      00104F 03               [ 8] 3368 	inc	bc
      001050 03               [ 8] 3369 	inc	bc
      001051 03               [ 8] 3370 	inc	bc
      001052 03               [ 8] 3371 	inc	bc
      001053 79               [ 4] 3372 	ld	a, c
      001054 22               [ 8] 3373 	ld	(hl+), a
      001055 70               [ 8] 3374 	ld	(hl), b
                                   3375 ;src/player.c:541: highest_visited_floor = PLAYER_FLOOR;
      001056 21r19r00         [12] 3376 	ld	hl, #_highest_visited_floor
      001059 73               [ 8] 3377 	ld	(hl), e
                                   3378 ;src/player.c:542: max_player_y = (uint8_t)((PREV_PLAYER_FLOOR << 6) - player_y);
      00105A F8 00            [12] 3379 	ldhl	sp,	#0
      00105C 2A               [ 8] 3380 	ld	a, (hl+)
      00105D 0F               [ 4] 3381 	rrca
      00105E 0F               [ 4] 3382 	rrca
      00105F E6 C0            [ 8] 3383 	and	a, #0xc0
      001061 96               [ 8] 3384 	sub	a, (hl)
      001062 EAr17r00         [16] 3385 	ld	(#_max_player_y),a
                                   3386 ;src/player.c:543: return;
      001065 18 21            [12] 3387 	jr	00108$
      001067                       3388 00102$:
                                   3389 ;src/player.c:546: if(PLAYER_FLOOR != highest_visited_floor) return;
      001067 FAr19r00         [16] 3390 	ld	a, (#_highest_visited_floor)
      00106A 93               [ 4] 3391 	sub	a, e
      00106B 20 1B            [12] 3392 	jr	NZ, 00108$
                                   3393 ;src/player.c:548: test_max_player_y = (uint8_t)((((PLAYER_FLOOR + 1) & 0x03) << 6) - player_y);
      00106D 7B               [ 4] 3394 	ld	a, e
      00106E 3C               [ 4] 3395 	inc	a
      00106F E6 03            [ 8] 3396 	and	a, #0x03
      001071 0F               [ 4] 3397 	rrca
      001072 0F               [ 4] 3398 	rrca
      001073 E6 C0            [ 8] 3399 	and	a, #0xc0
      001075 F8 01            [12] 3400 	ldhl	sp,	#1
      001077 96               [ 8] 3401 	sub	a, (hl)
      001078 EAr18r00         [16] 3402 	ld	(#_test_max_player_y),a
                                   3403 ;src/player.c:549: if(max_player_y < test_max_player_y){
      00107B FAr17r00         [16] 3404 	ld	a, (#_max_player_y)
      00107E 21r18r00         [12] 3405 	ld	hl, #_test_max_player_y
      001081 96               [ 8] 3406 	sub	a, (hl)
      001082 30 04            [12] 3407 	jr	NC, 00108$
                                   3408 ;src/player.c:550: max_player_y = test_max_player_y;
      001084 7E               [ 8] 3409 	ld	a, (hl)
      001085 EAr17r00         [16] 3410 	ld	(#_max_player_y),a
      001088                       3411 00108$:
                                   3412 ;src/player.c:552: }
      001088 33               [ 8] 3413 	inc	sp
      001089 33               [ 8] 3414 	inc	sp
      00108A C9               [16] 3415 	ret
                                   3416 ;src/player.c:554: static void calculate_final_score(void){
                                   3417 ;	---------------------------------
                                   3418 ; Function calculate_final_score
                                   3419 ; ---------------------------------
      00108B                       3420 _calculate_final_score:
                                   3421 ;src/player.c:555: score += (max_player_y >> 4);
      00108B FAr17r00         [16] 3422 	ld	a, (#_max_player_y)
      00108E CB 37            [ 8] 3423 	swap	a
      001090 E6 0F            [ 8] 3424 	and	a, #0x0f
      001092 21r15r00         [12] 3425 	ld	hl, #_score
      001095 4E               [ 8] 3426 	ld	c, (hl)
      001096 23               [ 8] 3427 	inc	hl
      001097 46               [ 8] 3428 	ld	b, (hl)
      001098 2B               [ 8] 3429 	dec	hl
      001099 1E 00            [ 8] 3430 	ld	e, #0x00
      00109B 81               [ 4] 3431 	add	a, c
      00109C 4F               [ 4] 3432 	ld	c, a
      00109D 7B               [ 4] 3433 	ld	a, e
      00109E 88               [ 4] 3434 	adc	a, b
      00109F 71               [ 8] 3435 	ld	(hl), c
      0010A0 23               [ 8] 3436 	inc	hl
      0010A1 77               [ 8] 3437 	ld	(hl), a
                                   3438 ;src/player.c:556: }
      0010A2 C9               [16] 3439 	ret
                                   3440 ;src/player.c:558: static inline bool point_vs_rect(rect *r){
                                   3441 ;	---------------------------------
                                   3442 ; Function point_vs_rect
                                   3443 ; ---------------------------------
      0010A3                       3444 _point_vs_rect:
      0010A3 E8 F9            [16] 3445 	add	sp, #-7
      0010A5 4B               [ 4] 3446 	ld	c, e
      0010A6 42               [ 4] 3447 	ld	b, d
                                   3448 ;src/player.c:559: return ((uint8_t)SUB_TO_PX(player_x) >= r->x && player_y <= r->y && (uint8_t)SUB_TO_PX(player_x) <= (r->x + r->size_x) && player_y >= (r->y - r->size_y));
      0010A7 FAr0Er00         [16] 3449 	ld	a, (#_player_x + 1)
      0010AA F8 06            [12] 3450 	ldhl	sp,	#6
      0010AC 77               [ 8] 3451 	ld	(hl), a
      0010AD 0A               [ 8] 3452 	ld	a, (bc)
      0010AE 5F               [ 4] 3453 	ld	e, a
      0010AF 7E               [ 8] 3454 	ld	a, (hl)
      0010B0 93               [ 4] 3455 	sub	a, e
      0010B1 DAr32r11         [16] 3456 	jp	C, 00103$
      0010B4 69               [ 4] 3457 	ld	l, c
                                   3458 ;	spillPairReg hl
                                   3459 ;	spillPairReg hl
      0010B5 60               [ 4] 3460 	ld	h, b
                                   3461 ;	spillPairReg hl
                                   3462 ;	spillPairReg hl
      0010B6 23               [ 8] 3463 	inc	hl
      0010B7 7E               [ 8] 3464 	ld	a, (hl)
      0010B8 F8 02            [12] 3465 	ldhl	sp,#2
      0010BA 77               [ 8] 3466 	ld	(hl), a
      0010BB 21r0Fr00         [12] 3467 	ld	hl, #_player_y
      0010BE 96               [ 8] 3468 	sub	a, (hl)
      0010BF 38 71            [12] 3469 	jr	C, 00103$
      0010C1 F8 00            [12] 3470 	ldhl	sp,	#0
      0010C3 7B               [ 4] 3471 	ld	a, e
      0010C4 22               [ 8] 3472 	ld	(hl+), a
      0010C5 36 00            [12] 3473 	ld	(hl), #0x00
      0010C7 69               [ 4] 3474 	ld	l, c
                                   3475 ;	spillPairReg hl
                                   3476 ;	spillPairReg hl
      0010C8 60               [ 4] 3477 	ld	h, b
                                   3478 ;	spillPairReg hl
                                   3479 ;	spillPairReg hl
      0010C9 23               [ 8] 3480 	inc	hl
      0010CA 23               [ 8] 3481 	inc	hl
      0010CB 5E               [ 8] 3482 	ld	e, (hl)
      0010CC 16 00            [ 8] 3483 	ld	d, #0x00
      0010CE E1               [12] 3484 	pop	hl
      0010CF E5               [16] 3485 	push	hl
      0010D0 19               [ 8] 3486 	add	hl, de
      0010D1 E5               [16] 3487 	push	hl
      0010D2 7D               [ 4] 3488 	ld	a, l
      0010D3 F8 05            [12] 3489 	ldhl	sp,	#5
      0010D5 77               [ 8] 3490 	ld	(hl), a
      0010D6 E1               [12] 3491 	pop	hl
      0010D7 7C               [ 4] 3492 	ld	a, h
      0010D8 F8 04            [12] 3493 	ldhl	sp,	#4
      0010DA 22               [ 8] 3494 	ld	(hl+), a
      0010DB 23               [ 8] 3495 	inc	hl
      0010DC 3A               [ 8] 3496 	ld	a, (hl-)
      0010DD 22               [ 8] 3497 	ld	(hl+), a
      0010DE 36 00            [12] 3498 	ld	(hl), #0x00
      0010E0 F8 03            [12] 3499 	ldhl	sp,	#3
      0010E2 5D               [ 4] 3500 	ld	e, l
      0010E3 54               [ 4] 3501 	ld	d, h
      0010E4 F8 05            [12] 3502 	ldhl	sp,	#5
      0010E6 1A               [ 8] 3503 	ld	a, (de)
      0010E7 13               [ 8] 3504 	inc	de
      0010E8 96               [ 8] 3505 	sub	a, (hl)
      0010E9 23               [ 8] 3506 	inc	hl
      0010EA 1A               [ 8] 3507 	ld	a, (de)
      0010EB 9E               [ 8] 3508 	sbc	a, (hl)
      0010EC 1A               [ 8] 3509 	ld	a, (de)
      0010ED 57               [ 4] 3510 	ld	d, a
      0010EE CB 7E            [12] 3511 	bit	7, (hl)
      0010F0 28 07            [12] 3512 	jr	Z, 00131$
      0010F2 CB 7A            [ 8] 3513 	bit	7, d
      0010F4 20 08            [12] 3514 	jr	NZ, 00132$
      0010F6 BF               [ 4] 3515 	cp	a, a
      0010F7 18 05            [12] 3516 	jr	00132$
      0010F9                       3517 00131$:
      0010F9 CB 7A            [ 8] 3518 	bit	7, d
      0010FB 28 01            [12] 3519 	jr	Z, 00132$
      0010FD 37               [ 4] 3520 	scf
      0010FE                       3521 00132$:
      0010FE 38 32            [12] 3522 	jr	C, 00103$
      001100 F8 02            [12] 3523 	ldhl	sp,	#2
      001102 5E               [ 8] 3524 	ld	e, (hl)
      001103 16 00            [ 8] 3525 	ld	d, #0x00
      001105 03               [ 8] 3526 	inc	bc
      001106 03               [ 8] 3527 	inc	bc
      001107 03               [ 8] 3528 	inc	bc
      001108 0A               [ 8] 3529 	ld	a, (bc)
      001109 4F               [ 4] 3530 	ld	c, a
      00110A 06 00            [ 8] 3531 	ld	b, #0x00
      00110C 7B               [ 4] 3532 	ld	a, e
      00110D 91               [ 4] 3533 	sub	a, c
      00110E 4F               [ 4] 3534 	ld	c, a
      00110F 7A               [ 4] 3535 	ld	a, d
      001110 98               [ 4] 3536 	sbc	a, b
      001111 47               [ 4] 3537 	ld	b, a
      001112 FAr0Fr00         [16] 3538 	ld	a, (#_player_y)
      001115 F8 05            [12] 3539 	ldhl	sp,	#5
      001117 22               [ 8] 3540 	ld	(hl+), a
      001118 AF               [ 4] 3541 	xor	a, a
      001119 32               [ 8] 3542 	ld	(hl-), a
      00111A 2A               [ 8] 3543 	ld	a, (hl+)
      00111B 91               [ 4] 3544 	sub	a, c
      00111C 7E               [ 8] 3545 	ld	a, (hl)
      00111D 98               [ 4] 3546 	sbc	a, b
      00111E 56               [ 8] 3547 	ld	d, (hl)
      00111F 78               [ 4] 3548 	ld	a, b
      001120 CB 7F            [ 8] 3549 	bit	7,a
      001122 28 07            [12] 3550 	jr	Z, 00133$
      001124 CB 7A            [ 8] 3551 	bit	7, d
      001126 20 08            [12] 3552 	jr	NZ, 00134$
      001128 BF               [ 4] 3553 	cp	a, a
      001129 18 05            [12] 3554 	jr	00134$
      00112B                       3555 00133$:
      00112B CB 7A            [ 8] 3556 	bit	7, d
      00112D 28 01            [12] 3557 	jr	Z, 00134$
      00112F 37               [ 4] 3558 	scf
      001130                       3559 00134$:
      001130 30 03            [12] 3560 	jr	NC, 00104$
      001132                       3561 00103$:
      001132 AF               [ 4] 3562 	xor	a, a
      001133 18 02            [12] 3563 	jr	00105$
      001135                       3564 00104$:
      001135 3E 01            [ 8] 3565 	ld	a, #0x01
      001137                       3566 00105$:
                                   3567 ;src/player.c:560: }
      001137 E8 07            [16] 3568 	add	sp, #7
      001139 C9               [16] 3569 	ret
                                   3570 ;src/player.c:566: static bool r_solid_function(uint8_t epa){
                                   3571 ;	---------------------------------
                                   3572 ; Function r_solid_function
                                   3573 ; ---------------------------------
      00113A                       3574 _r_solid_function:
      00113A 3B               [ 8] 3575 	dec	sp
      00113B 3B               [ 8] 3576 	dec	sp
                                   3577 ;src/player.c:567: if(epa == CENTER_DOWN){
      00113C D6 32            [ 8] 3578 	sub	a, #0x32
      00113E C2r97r13         [16] 3579 	jp	NZ,00111$
                                   3580 ;src/player.c:570: bool is_upper = i & 0x01 == 0x01;
      001141 FAr04r00         [16] 3581 	ld	a, (#_i)
      001144 E6 01            [ 8] 3582 	and	a, #0x01
      001146 4F               [ 4] 3583 	ld	c, a
      001147 F8 00            [12] 3584 	ldhl	sp,	#0
      001149 71               [ 8] 3585 	ld	(hl), c
                                   3586 ;src/player.c:571: component_at_r = is_upper ? map_components[PLAYER_FLOOR][i>>1].components >> 4 : map_components[PLAYER_FLOOR][i>>1].components & 0x0F;
      00114A FAr0Fr00         [16] 3587 	ld	a, (#_player_y)
      00114D 07               [ 4] 3588 	rlca
      00114E 07               [ 4] 3589 	rlca
      00114F E6 03            [ 8] 3590 	and	a, #0x03
      001151 5F               [ 4] 3591 	ld	e, a
      001152 FAr04r00         [16] 3592 	ld	a, (#_i)
      001155 CB 3F            [ 8] 3593 	srl	a
      001157 16 00            [ 8] 3594 	ld	d, #0x00
      001159 87               [ 4] 3595 	add	a, a
      00115A F8 01            [12] 3596 	ldhl	sp,	#1
      00115C 77               [ 8] 3597 	ld	(hl), a
      00115D CB 23            [ 8] 3598 	sla	e
      00115F CB 12            [ 8] 3599 	rl	d
      001161 CB 23            [ 8] 3600 	sla	e
      001163 CB 12            [ 8] 3601 	rl	d
      001165 CB 23            [ 8] 3602 	sla	e
      001167 CB 12            [ 8] 3603 	rl	d
      001169 CB 41            [ 8] 3604 	bit	0, c
      00116B 28 15            [12] 3605 	jr	Z, 00114$
      00116D 21r00r00         [12] 3606 	ld	hl, #_map_components
      001170 19               [ 8] 3607 	add	hl, de
      001171 4D               [ 4] 3608 	ld	c, l
      001172 44               [ 4] 3609 	ld	b, h
      001173 F8 01            [12] 3610 	ldhl	sp,	#1
      001175 6E               [ 8] 3611 	ld	l, (hl)
      001176 26 00            [ 8] 3612 	ld	h, #0x00
      001178 09               [ 8] 3613 	add	hl, bc
      001179 4D               [ 4] 3614 	ld	c, l
      00117A 44               [ 4] 3615 	ld	b, h
      00117B 0A               [ 8] 3616 	ld	a, (bc)
      00117C CB 37            [ 8] 3617 	swap	a
      00117E E6 0F            [ 8] 3618 	and	a, #0x0f
      001180 18 11            [12] 3619 	jr	00115$
      001182                       3620 00114$:
      001182 21r00r00         [12] 3621 	ld	hl, #_map_components
      001185 19               [ 8] 3622 	add	hl, de
      001186 4D               [ 4] 3623 	ld	c, l
      001187 44               [ 4] 3624 	ld	b, h
      001188 F8 01            [12] 3625 	ldhl	sp,	#1
      00118A 6E               [ 8] 3626 	ld	l, (hl)
      00118B 26 00            [ 8] 3627 	ld	h, #0x00
      00118D 09               [ 8] 3628 	add	hl, bc
      00118E 4D               [ 4] 3629 	ld	c, l
      00118F 44               [ 4] 3630 	ld	b, h
      001190 0A               [ 8] 3631 	ld	a, (bc)
      001191 E6 0F            [ 8] 3632 	and	a, #0x0f
      001193                       3633 00115$:
                                   3634 ;src/player.c:572: if(component_at_r == 2){
      001193 D6 02            [ 8] 3635 	sub	a, #0x02
      001195 C2r97r13         [16] 3636 	jp	NZ,00111$
                                   3637 ;src/player.c:573: if(is_upper){
      001198 F8 00            [12] 3638 	ldhl	sp,	#0
      00119A CB 46            [12] 3639 	bit	0, (hl)
      00119C CAr9Cr12         [16] 3640 	jp	Z, 00106$
                                   3641 ;src/player.c:574: if((map_components[PLAYER_FLOOR][i>>1].status >> 4) == 0){
      00119F 23               [ 8] 3642 	inc	hl
      0011A0 01r00r00         [12] 3643 	ld	bc, #_map_components+0
      0011A3 7B               [ 4] 3644 	ld	a, e
      0011A4 81               [ 4] 3645 	add	a, c
      0011A5 5F               [ 4] 3646 	ld	e, a
      0011A6 7A               [ 4] 3647 	ld	a, d
      0011A7 88               [ 4] 3648 	adc	a, b
      0011A8 57               [ 4] 3649 	ld	d, a
      0011A9 6E               [ 8] 3650 	ld	l, (hl)
      0011AA 26 00            [ 8] 3651 	ld	h, #0x00
      0011AC 19               [ 8] 3652 	add	hl, de
      0011AD 23               [ 8] 3653 	inc	hl
      0011AE 5D               [ 4] 3654 	ld	e, l
      0011AF 54               [ 4] 3655 	ld	d, h
      0011B0 1A               [ 8] 3656 	ld	a, (de)
      0011B1 CB 37            [ 8] 3657 	swap	a
      0011B3 E6 0F            [ 8] 3658 	and	a,#0x0f
      0011B5 20 4D            [12] 3659 	jr	NZ, 00102$
                                   3660 ;src/player.c:575: play_bump_sfx();
      0011B7 C5               [16] 3661 	push	bc
      0011B8 CDr00r00         [24] 3662 	call	_play_bump_sfx
      0011BB C1               [12] 3663 	pop	bc
                                   3664 ;src/player.c:576: set_bkg_tiles(3 + (i<<1 & 0x0C), (PLAYER_FLOOR << 3) + 1, 4, 1, top_map_02_broken);
      0011BC FAr0Fr00         [16] 3665 	ld	a, (#_player_y)
      0011BF 07               [ 4] 3666 	rlca
      0011C0 07               [ 4] 3667 	rlca
      0011C1 E6 03            [ 8] 3668 	and	a, #0x03
      0011C3 87               [ 4] 3669 	add	a, a
      0011C4 87               [ 4] 3670 	add	a, a
      0011C5 87               [ 4] 3671 	add	a, a
      0011C6 57               [ 4] 3672 	ld	d, a
      0011C7 14               [ 4] 3673 	inc	d
      0011C8 FAr04r00         [16] 3674 	ld	a, (#_i)
      0011CB 87               [ 4] 3675 	add	a, a
      0011CC E6 0C            [ 8] 3676 	and	a, #0x0c
      0011CE C6 03            [ 8] 3677 	add	a, #0x03
      0011D0 21r00r00         [12] 3678 	ld	hl, #_top_map_02_broken
      0011D3 E5               [16] 3679 	push	hl
      0011D4 26 01            [ 8] 3680 	ld	h, #0x01
                                   3681 ;	spillPairReg hl
                                   3682 ;	spillPairReg hl
      0011D6 E5               [16] 3683 	push	hl
      0011D7 33               [ 8] 3684 	inc	sp
      0011D8 26 04            [ 8] 3685 	ld	h, #0x04
                                   3686 ;	spillPairReg hl
                                   3687 ;	spillPairReg hl
      0011DA 6A               [ 4] 3688 	ld	l, d
      0011DB E5               [16] 3689 	push	hl
      0011DC F5               [16] 3690 	push	af
      0011DD 33               [ 8] 3691 	inc	sp
      0011DE CDr00r00         [24] 3692 	call	_set_bkg_tiles
      0011E1 E8 06            [16] 3693 	add	sp, #6
                                   3694 ;src/player.c:577: map_components[PLAYER_FLOOR][i>>1].status |= 0x10;
      0011E3 FAr0Fr00         [16] 3695 	ld	a, (#_player_y)
      0011E6 07               [ 4] 3696 	rlca
      0011E7 07               [ 4] 3697 	rlca
      0011E8 E6 03            [ 8] 3698 	and	a, #0x03
      0011EA 26 00            [ 8] 3699 	ld	h, #0x00
                                   3700 ;	spillPairReg hl
                                   3701 ;	spillPairReg hl
      0011EC 6F               [ 4] 3702 	ld	l, a
      0011ED 29               [ 8] 3703 	add	hl, hl
      0011EE 29               [ 8] 3704 	add	hl, hl
      0011EF 29               [ 8] 3705 	add	hl, hl
      0011F0 09               [ 8] 3706 	add	hl, bc
      0011F1 4D               [ 4] 3707 	ld	c, l
      0011F2 44               [ 4] 3708 	ld	b, h
      0011F3 FAr04r00         [16] 3709 	ld	a, (#_i)
      0011F6 CB 3F            [ 8] 3710 	srl	a
      0011F8 87               [ 4] 3711 	add	a, a
      0011F9 6F               [ 4] 3712 	ld	l, a
      0011FA 26 00            [ 8] 3713 	ld	h, #0x00
      0011FC 09               [ 8] 3714 	add	hl, bc
      0011FD 23               [ 8] 3715 	inc	hl
      0011FE CB E6            [16] 3716 	set	4, (hl)
                                   3717 ;src/player.c:578: return false;
      001200 AF               [ 4] 3718 	xor	a, a
      001201 C3r98r13         [16] 3719 	jp	00112$
      001204                       3720 00102$:
                                   3721 ;src/player.c:580: instanciate_brick_particles();
      001204 C5               [16] 3722 	push	bc
      001205 CDr04r09         [24] 3723 	call	_instanciate_brick_particles
      001208 CDr00r00         [24] 3724 	call	_play_break_sfx
      00120B C1               [12] 3725 	pop	bc
                                   3726 ;src/player.c:582: set_bkg_tiles(3 + (i<<1 & 0x0C), (PLAYER_FLOOR << 3) + 1, 4, 1, top_map_00);
      00120C FAr0Fr00         [16] 3727 	ld	a, (#_player_y)
      00120F 07               [ 4] 3728 	rlca
      001210 07               [ 4] 3729 	rlca
      001211 E6 03            [ 8] 3730 	and	a, #0x03
      001213 87               [ 4] 3731 	add	a, a
      001214 87               [ 4] 3732 	add	a, a
      001215 87               [ 4] 3733 	add	a, a
      001216 57               [ 4] 3734 	ld	d, a
      001217 14               [ 4] 3735 	inc	d
      001218 FAr04r00         [16] 3736 	ld	a, (#_i)
      00121B 87               [ 4] 3737 	add	a, a
      00121C E6 0C            [ 8] 3738 	and	a, #0x0c
      00121E C6 03            [ 8] 3739 	add	a, #0x03
      001220 21r00r00         [12] 3740 	ld	hl, #_top_map_00
      001223 E5               [16] 3741 	push	hl
      001224 26 01            [ 8] 3742 	ld	h, #0x01
                                   3743 ;	spillPairReg hl
                                   3744 ;	spillPairReg hl
      001226 E5               [16] 3745 	push	hl
      001227 33               [ 8] 3746 	inc	sp
      001228 26 04            [ 8] 3747 	ld	h, #0x04
                                   3748 ;	spillPairReg hl
                                   3749 ;	spillPairReg hl
      00122A 6A               [ 4] 3750 	ld	l, d
      00122B E5               [16] 3751 	push	hl
      00122C F5               [16] 3752 	push	af
      00122D 33               [ 8] 3753 	inc	sp
      00122E CDr00r00         [24] 3754 	call	_set_bkg_tiles
      001231 E8 06            [16] 3755 	add	sp, #6
                                   3756 ;src/player.c:583: map_components[PLAYER_FLOOR][i>>1].components = map_components[PLAYER_FLOOR][i>>1].components & 0x0F;
      001233 FAr0Fr00         [16] 3757 	ld	a, (#_player_y)
      001236 07               [ 4] 3758 	rlca
      001237 07               [ 4] 3759 	rlca
      001238 E6 03            [ 8] 3760 	and	a, #0x03
      00123A 26 00            [ 8] 3761 	ld	h, #0x00
                                   3762 ;	spillPairReg hl
                                   3763 ;	spillPairReg hl
      00123C 6F               [ 4] 3764 	ld	l, a
      00123D 29               [ 8] 3765 	add	hl, hl
      00123E 29               [ 8] 3766 	add	hl, hl
      00123F 29               [ 8] 3767 	add	hl, hl
      001240 09               [ 8] 3768 	add	hl, bc
      001241 5D               [ 4] 3769 	ld	e, l
      001242 54               [ 4] 3770 	ld	d, h
      001243 FAr04r00         [16] 3771 	ld	a, (#_i)
      001246 CB 3F            [ 8] 3772 	srl	a
      001248 87               [ 4] 3773 	add	a, a
      001249 6F               [ 4] 3774 	ld	l, a
      00124A 26 00            [ 8] 3775 	ld	h, #0x00
      00124C 19               [ 8] 3776 	add	hl, de
      00124D 7E               [ 8] 3777 	ld	a, (hl)
      00124E E6 0F            [ 8] 3778 	and	a, #0x0f
      001250 77               [ 8] 3779 	ld	(hl), a
                                   3780 ;src/player.c:584: map_components[PLAYER_FLOOR][i>>1].status = map_components[PLAYER_FLOOR][i>>1].status & 0x0F;
      001251 FAr0Fr00         [16] 3781 	ld	a, (#_player_y)
      001254 07               [ 4] 3782 	rlca
      001255 07               [ 4] 3783 	rlca
      001256 E6 03            [ 8] 3784 	and	a, #0x03
      001258 26 00            [ 8] 3785 	ld	h, #0x00
                                   3786 ;	spillPairReg hl
                                   3787 ;	spillPairReg hl
      00125A 6F               [ 4] 3788 	ld	l, a
      00125B 29               [ 8] 3789 	add	hl, hl
      00125C 29               [ 8] 3790 	add	hl, hl
      00125D 29               [ 8] 3791 	add	hl, hl
      00125E 09               [ 8] 3792 	add	hl, bc
      00125F 4D               [ 4] 3793 	ld	c, l
      001260 44               [ 4] 3794 	ld	b, h
      001261 FAr04r00         [16] 3795 	ld	a, (#_i)
      001264 CB 3F            [ 8] 3796 	srl	a
      001266 87               [ 4] 3797 	add	a, a
      001267 6F               [ 4] 3798 	ld	l, a
      001268 26 00            [ 8] 3799 	ld	h, #0x00
      00126A 09               [ 8] 3800 	add	hl, bc
      00126B 23               [ 8] 3801 	inc	hl
      00126C 7E               [ 8] 3802 	ld	a, (hl)
      00126D E6 0F            [ 8] 3803 	and	a, #0x0f
      00126F 77               [ 8] 3804 	ld	(hl), a
                                   3805 ;src/player.c:585: rect_list[PLAYER_FLOOR][i].type = INACTIVE;
      001270 01r00r00         [12] 3806 	ld	bc, #_rect_list+0
      001273 FAr0Fr00         [16] 3807 	ld	a, (#_player_y)
      001276 07               [ 4] 3808 	rlca
      001277 07               [ 4] 3809 	rlca
      001278 E6 03            [ 8] 3810 	and	a, #0x03
      00127A 5F               [ 4] 3811 	ld	e, a
      00127B 16 00            [ 8] 3812 	ld	d, #0x00
      00127D 6B               [ 4] 3813 	ld	l, e
      00127E 62               [ 4] 3814 	ld	h, d
      00127F 29               [ 8] 3815 	add	hl, hl
      001280 29               [ 8] 3816 	add	hl, hl
      001281 19               [ 8] 3817 	add	hl, de
      001282 29               [ 8] 3818 	add	hl, hl
      001283 29               [ 8] 3819 	add	hl, hl
      001284 29               [ 8] 3820 	add	hl, hl
      001285 09               [ 8] 3821 	add	hl, bc
      001286 4D               [ 4] 3822 	ld	c, l
      001287 44               [ 4] 3823 	ld	b, h
      001288 FAr04r00         [16] 3824 	ld	a, (#_i)
      00128B 5F               [ 4] 3825 	ld	e, a
      00128C 87               [ 4] 3826 	add	a, a
      00128D 87               [ 4] 3827 	add	a, a
      00128E 83               [ 4] 3828 	add	a, e
      00128F 6F               [ 4] 3829 	ld	l, a
      001290 26 00            [ 8] 3830 	ld	h, #0x00
      001292 09               [ 8] 3831 	add	hl, bc
      001293 01 04 00         [12] 3832 	ld	bc, #0x0004
      001296 09               [ 8] 3833 	add	hl, bc
      001297 36 02            [12] 3834 	ld	(hl), #0x02
      001299 C3r97r13         [16] 3835 	jp	00111$
      00129C                       3836 00106$:
                                   3837 ;src/player.c:587: if((map_components[PLAYER_FLOOR][i>>1].status & 0x0F) == 0){
      00129C 01r00r00         [12] 3838 	ld	bc, #_map_components+0
      00129F 7B               [ 4] 3839 	ld	a, e
      0012A0 81               [ 4] 3840 	add	a, c
      0012A1 5F               [ 4] 3841 	ld	e, a
      0012A2 7A               [ 4] 3842 	ld	a, d
      0012A3 88               [ 4] 3843 	adc	a, b
      0012A4 57               [ 4] 3844 	ld	d, a
      0012A5 F8 01            [12] 3845 	ldhl	sp,	#1
      0012A7 6E               [ 8] 3846 	ld	l, (hl)
      0012A8 26 00            [ 8] 3847 	ld	h, #0x00
      0012AA 19               [ 8] 3848 	add	hl, de
      0012AB 23               [ 8] 3849 	inc	hl
      0012AC 5D               [ 4] 3850 	ld	e, l
      0012AD 54               [ 4] 3851 	ld	d, h
      0012AE 1A               [ 8] 3852 	ld	a, (de)
      0012AF E6 0F            [ 8] 3853 	and	a, #0x0f
      0012B1 20 4E            [12] 3854 	jr	NZ, 00104$
                                   3855 ;src/player.c:588: play_bump_sfx();
      0012B3 C5               [16] 3856 	push	bc
      0012B4 CDr00r00         [24] 3857 	call	_play_bump_sfx
      0012B7 C1               [12] 3858 	pop	bc
                                   3859 ;src/player.c:589: set_bkg_tiles(3 + (i<<1 & 0x0C), (PLAYER_FLOOR << 3) + 5, 4, 2, bot_map_02_broken);
      0012B8 FAr0Fr00         [16] 3860 	ld	a, (#_player_y)
      0012BB 07               [ 4] 3861 	rlca
      0012BC 07               [ 4] 3862 	rlca
      0012BD E6 03            [ 8] 3863 	and	a, #0x03
      0012BF 87               [ 4] 3864 	add	a, a
      0012C0 87               [ 4] 3865 	add	a, a
      0012C1 87               [ 4] 3866 	add	a, a
      0012C2 C6 05            [ 8] 3867 	add	a, #0x05
      0012C4 57               [ 4] 3868 	ld	d, a
      0012C5 FAr04r00         [16] 3869 	ld	a, (#_i)
      0012C8 87               [ 4] 3870 	add	a, a
      0012C9 E6 0C            [ 8] 3871 	and	a, #0x0c
      0012CB C6 03            [ 8] 3872 	add	a, #0x03
      0012CD 21r00r00         [12] 3873 	ld	hl, #_bot_map_02_broken
      0012D0 E5               [16] 3874 	push	hl
      0012D1 26 02            [ 8] 3875 	ld	h, #0x02
                                   3876 ;	spillPairReg hl
                                   3877 ;	spillPairReg hl
      0012D3 E5               [16] 3878 	push	hl
      0012D4 33               [ 8] 3879 	inc	sp
      0012D5 26 04            [ 8] 3880 	ld	h, #0x04
                                   3881 ;	spillPairReg hl
                                   3882 ;	spillPairReg hl
      0012D7 6A               [ 4] 3883 	ld	l, d
      0012D8 E5               [16] 3884 	push	hl
      0012D9 F5               [16] 3885 	push	af
      0012DA 33               [ 8] 3886 	inc	sp
      0012DB CDr00r00         [24] 3887 	call	_set_bkg_tiles
      0012DE E8 06            [16] 3888 	add	sp, #6
                                   3889 ;src/player.c:590: map_components[PLAYER_FLOOR][i>>1].status |= 0x01;
      0012E0 FAr0Fr00         [16] 3890 	ld	a, (#_player_y)
      0012E3 07               [ 4] 3891 	rlca
      0012E4 07               [ 4] 3892 	rlca
      0012E5 E6 03            [ 8] 3893 	and	a, #0x03
      0012E7 26 00            [ 8] 3894 	ld	h, #0x00
                                   3895 ;	spillPairReg hl
                                   3896 ;	spillPairReg hl
      0012E9 6F               [ 4] 3897 	ld	l, a
      0012EA 29               [ 8] 3898 	add	hl, hl
      0012EB 29               [ 8] 3899 	add	hl, hl
      0012EC 29               [ 8] 3900 	add	hl, hl
      0012ED 09               [ 8] 3901 	add	hl, bc
      0012EE 4D               [ 4] 3902 	ld	c, l
      0012EF 44               [ 4] 3903 	ld	b, h
      0012F0 FAr04r00         [16] 3904 	ld	a, (#_i)
      0012F3 CB 3F            [ 8] 3905 	srl	a
      0012F5 87               [ 4] 3906 	add	a, a
      0012F6 6F               [ 4] 3907 	ld	l, a
      0012F7 26 00            [ 8] 3908 	ld	h, #0x00
      0012F9 09               [ 8] 3909 	add	hl, bc
      0012FA 23               [ 8] 3910 	inc	hl
      0012FB CB C6            [16] 3911 	set	0, (hl)
                                   3912 ;src/player.c:591: return false;
      0012FD AF               [ 4] 3913 	xor	a, a
      0012FE C3r98r13         [16] 3914 	jp	00112$
      001301                       3915 00104$:
                                   3916 ;src/player.c:593: instanciate_brick_particles();
      001301 C5               [16] 3917 	push	bc
      001302 CDr04r09         [24] 3918 	call	_instanciate_brick_particles
      001305 CDr00r00         [24] 3919 	call	_play_break_sfx
      001308 C1               [12] 3920 	pop	bc
                                   3921 ;src/player.c:595: set_bkg_tiles(3 + (i<<1 & 0x0C), (PLAYER_FLOOR << 3) + 5, 4, 2, bot_map_00);
      001309 FAr0Fr00         [16] 3922 	ld	a, (#_player_y)
      00130C 07               [ 4] 3923 	rlca
      00130D 07               [ 4] 3924 	rlca
      00130E E6 03            [ 8] 3925 	and	a, #0x03
      001310 87               [ 4] 3926 	add	a, a
      001311 87               [ 4] 3927 	add	a, a
      001312 87               [ 4] 3928 	add	a, a
      001313 C6 05            [ 8] 3929 	add	a, #0x05
      001315 57               [ 4] 3930 	ld	d, a
      001316 FAr04r00         [16] 3931 	ld	a, (#_i)
      001319 87               [ 4] 3932 	add	a, a
      00131A E6 0C            [ 8] 3933 	and	a, #0x0c
      00131C C6 03            [ 8] 3934 	add	a, #0x03
      00131E 21r00r00         [12] 3935 	ld	hl, #_bot_map_00
      001321 E5               [16] 3936 	push	hl
      001322 26 02            [ 8] 3937 	ld	h, #0x02
                                   3938 ;	spillPairReg hl
                                   3939 ;	spillPairReg hl
      001324 E5               [16] 3940 	push	hl
      001325 33               [ 8] 3941 	inc	sp
      001326 26 04            [ 8] 3942 	ld	h, #0x04
                                   3943 ;	spillPairReg hl
                                   3944 ;	spillPairReg hl
      001328 6A               [ 4] 3945 	ld	l, d
      001329 E5               [16] 3946 	push	hl
      00132A F5               [16] 3947 	push	af
      00132B 33               [ 8] 3948 	inc	sp
      00132C CDr00r00         [24] 3949 	call	_set_bkg_tiles
      00132F E8 06            [16] 3950 	add	sp, #6
                                   3951 ;src/player.c:596: map_components[PLAYER_FLOOR][i>>1].components = map_components[PLAYER_FLOOR][i>>1].components & 0xF0;
      001331 FAr0Fr00         [16] 3952 	ld	a, (#_player_y)
      001334 07               [ 4] 3953 	rlca
      001335 07               [ 4] 3954 	rlca
      001336 E6 03            [ 8] 3955 	and	a, #0x03
      001338 26 00            [ 8] 3956 	ld	h, #0x00
                                   3957 ;	spillPairReg hl
                                   3958 ;	spillPairReg hl
      00133A 6F               [ 4] 3959 	ld	l, a
      00133B 29               [ 8] 3960 	add	hl, hl
      00133C 29               [ 8] 3961 	add	hl, hl
      00133D 29               [ 8] 3962 	add	hl, hl
      00133E 09               [ 8] 3963 	add	hl, bc
      00133F 5D               [ 4] 3964 	ld	e, l
      001340 54               [ 4] 3965 	ld	d, h
      001341 FAr04r00         [16] 3966 	ld	a, (#_i)
      001344 CB 3F            [ 8] 3967 	srl	a
      001346 87               [ 4] 3968 	add	a, a
      001347 6F               [ 4] 3969 	ld	l, a
      001348 26 00            [ 8] 3970 	ld	h, #0x00
      00134A 19               [ 8] 3971 	add	hl, de
      00134B 7E               [ 8] 3972 	ld	a, (hl)
      00134C E6 F0            [ 8] 3973 	and	a, #0xf0
      00134E 77               [ 8] 3974 	ld	(hl), a
                                   3975 ;src/player.c:597: map_components[PLAYER_FLOOR][i>>1].status = map_components[PLAYER_FLOOR][i>>1].status & 0xF0;
      00134F FAr0Fr00         [16] 3976 	ld	a, (#_player_y)
      001352 07               [ 4] 3977 	rlca
      001353 07               [ 4] 3978 	rlca
      001354 E6 03            [ 8] 3979 	and	a, #0x03
      001356 26 00            [ 8] 3980 	ld	h, #0x00
                                   3981 ;	spillPairReg hl
                                   3982 ;	spillPairReg hl
      001358 6F               [ 4] 3983 	ld	l, a
      001359 29               [ 8] 3984 	add	hl, hl
      00135A 29               [ 8] 3985 	add	hl, hl
      00135B 29               [ 8] 3986 	add	hl, hl
      00135C 09               [ 8] 3987 	add	hl, bc
      00135D 4D               [ 4] 3988 	ld	c, l
      00135E 44               [ 4] 3989 	ld	b, h
      00135F FAr04r00         [16] 3990 	ld	a, (#_i)
      001362 CB 3F            [ 8] 3991 	srl	a
      001364 87               [ 4] 3992 	add	a, a
      001365 6F               [ 4] 3993 	ld	l, a
      001366 26 00            [ 8] 3994 	ld	h, #0x00
      001368 09               [ 8] 3995 	add	hl, bc
      001369 23               [ 8] 3996 	inc	hl
      00136A 7E               [ 8] 3997 	ld	a, (hl)
      00136B E6 F0            [ 8] 3998 	and	a, #0xf0
      00136D 77               [ 8] 3999 	ld	(hl), a
                                   4000 ;src/player.c:598: rect_list[PLAYER_FLOOR][i].type = INACTIVE;
      00136E 01r00r00         [12] 4001 	ld	bc, #_rect_list+0
      001371 FAr0Fr00         [16] 4002 	ld	a, (#_player_y)
      001374 07               [ 4] 4003 	rlca
      001375 07               [ 4] 4004 	rlca
      001376 E6 03            [ 8] 4005 	and	a, #0x03
      001378 5F               [ 4] 4006 	ld	e, a
      001379 16 00            [ 8] 4007 	ld	d, #0x00
      00137B 6B               [ 4] 4008 	ld	l, e
      00137C 62               [ 4] 4009 	ld	h, d
      00137D 29               [ 8] 4010 	add	hl, hl
      00137E 29               [ 8] 4011 	add	hl, hl
      00137F 19               [ 8] 4012 	add	hl, de
      001380 29               [ 8] 4013 	add	hl, hl
      001381 29               [ 8] 4014 	add	hl, hl
      001382 29               [ 8] 4015 	add	hl, hl
      001383 09               [ 8] 4016 	add	hl, bc
      001384 4D               [ 4] 4017 	ld	c, l
      001385 44               [ 4] 4018 	ld	b, h
      001386 FAr04r00         [16] 4019 	ld	a, (#_i)
      001389 5F               [ 4] 4020 	ld	e, a
      00138A 87               [ 4] 4021 	add	a, a
      00138B 87               [ 4] 4022 	add	a, a
      00138C 83               [ 4] 4023 	add	a, e
      00138D 6F               [ 4] 4024 	ld	l, a
      00138E 26 00            [ 8] 4025 	ld	h, #0x00
      001390 09               [ 8] 4026 	add	hl, bc
      001391 01 04 00         [12] 4027 	ld	bc, #0x0004
      001394 09               [ 8] 4028 	add	hl, bc
      001395 36 02            [12] 4029 	ld	(hl), #0x02
      001397                       4030 00111$:
                                   4031 ;src/player.c:604: return false;
      001397 AF               [ 4] 4032 	xor	a, a
      001398                       4033 00112$:
                                   4034 ;src/player.c:605: }
      001398 33               [ 8] 4035 	inc	sp
      001399 33               [ 8] 4036 	inc	sp
      00139A C9               [16] 4037 	ret
                                   4038 ;src/player.c:606: static bool r_traversable_function(uint8_t epa){
                                   4039 ;	---------------------------------
                                   4040 ; Function r_traversable_function
                                   4041 ; ---------------------------------
      00139B                       4042 _r_traversable_function:
                                   4043 ;src/player.c:607: return (bool)(epa != CENTER_UP || (joy & J_DOWN));
      00139B D6 31            [ 8] 4044 	sub	a, #0x31
      00139D 20 09            [12] 4045 	jr	NZ, 00104$
      00139F FAr05r00         [16] 4046 	ld	a, (#_joy)
      0013A2 0F               [ 4] 4047 	rrca
      0013A3 0F               [ 4] 4048 	rrca
      0013A4 0F               [ 4] 4049 	rrca
      0013A5 E6 01            [ 8] 4050 	and	a,#0x01
      0013A7 C8               [20] 4051 	ret	Z
      0013A8                       4052 00104$:
      0013A8 3E 01            [ 8] 4053 	ld	a, #0x01
                                   4054 ;src/player.c:608: }
      0013AA C9               [16] 4055 	ret
                                   4056 ;src/player.c:609: static bool r_inactive_function(uint8_t epa){
                                   4057 ;	---------------------------------
                                   4058 ; Function r_inactive_function
                                   4059 ; ---------------------------------
      0013AB                       4060 _r_inactive_function:
                                   4061 ;src/player.c:610: return true;
      0013AB 3E 01            [ 8] 4062 	ld	a, #0x01
                                   4063 ;src/player.c:611: }
      0013AD C9               [16] 4064 	ret
                                   4065 ;src/player.c:612: static bool r_bouncy_function(uint8_t epa){
                                   4066 ;	---------------------------------
                                   4067 ; Function r_bouncy_function
                                   4068 ; ---------------------------------
      0013AE                       4069 _r_bouncy_function:
                                   4070 ;src/player.c:613: if(epa == CENTER_UP){
      0013AE D6 31            [ 8] 4071 	sub	a, #0x31
      0013B0 C2r5Cr14         [16] 4072 	jp	NZ,00109$
                                   4073 ;src/player.c:411: if(current_state == state) {return;}
                                   4074 ;src/player.c:412: if(current_state == PLAYER_STATE_FALLING){instanciate_collision_puffs();}
      0013B3 FAr13r00         [16] 4075 	ld	a,(#_current_state)
      0013B6 FE 02            [ 8] 4076 	cp	a,#0x02
      0013B8 28 16            [12] 4077 	jr	Z, 00114$
      0013BA D6 03            [ 8] 4078 	sub	a, #0x03
      0013BC 20 03            [12] 4079 	jr	NZ, 00113$
      0013BE CDr53r08         [24] 4080 	call	_instanciate_collision_puffs
      0013C1                       4081 00113$:
                                   4082 ;src/player.c:413: frame_counter = 0;
      0013C1 21r01r00         [12] 4083 	ld	hl, #_frame_counter
      0013C4 36 00            [12] 4084 	ld	(hl), #0x00
                                   4085 ;src/player.c:414: current_frame = 0;
      0013C6 21r02r00         [12] 4086 	ld	hl, #_current_frame
      0013C9 36 00            [12] 4087 	ld	(hl), #0x00
                                   4088 ;src/player.c:415: current_state = state;
      0013CB 21r13r00         [12] 4089 	ld	hl, #_current_state
      0013CE 36 02            [12] 4090 	ld	(hl), #0x02
                                   4091 ;src/player.c:614: switch_state(PLAYER_STATE_JUMPING);
      0013D0                       4092 00114$:
                                   4093 ;src/player.c:615: play_boing_sfx();
      0013D0 CDr00r00         [24] 4094 	call	_play_boing_sfx
                                   4095 ;src/player.c:616: y_speed = (int8_t)(-45);
      0013D3 21r0Cr00         [12] 4096 	ld	hl, #_y_speed
      0013D6 36 D3            [12] 4097 	ld	(hl), #0xd3
                                   4098 ;src/player.c:617: is_grounded = false;
      0013D8 21r0Ar00         [12] 4099 	ld	hl, #_is_grounded
      0013DB 36 00            [12] 4100 	ld	(hl), #0x00
                                   4101 ;src/player.c:618: is_jumping = true;
      0013DD 21r0Br00         [12] 4102 	ld	hl, #_is_jumping
      0013E0 36 01            [12] 4103 	ld	(hl), #0x01
                                   4104 ;src/player.c:622: if(i & 0x01 == 0x01) {return true;}
      0013E2 E5               [16] 4105 	push	hl
      0013E3 21r04r00         [12] 4106 	ld	hl, #_i
      0013E6 CB 46            [12] 4107 	bit	0, (hl)
      0013E8 E1               [12] 4108 	pop	hl
      0013E9 28 03            [12] 4109 	jr	Z, 00102$
      0013EB 3E 01            [ 8] 4110 	ld	a, #0x01
      0013ED C9               [16] 4111 	ret
      0013EE                       4112 00102$:
                                   4113 ;src/player.c:624: status_of_rack = map_components[PLAYER_FLOOR][i>>1].status & 0x0F;
      0013EE FAr0Fr00         [16] 4114 	ld	a, (#_player_y)
      0013F1 07               [ 4] 4115 	rlca
      0013F2 07               [ 4] 4116 	rlca
      0013F3 E6 03            [ 8] 4117 	and	a, #0x03
      0013F5 6F               [ 4] 4118 	ld	l, a
                                   4119 ;	spillPairReg hl
                                   4120 ;	spillPairReg hl
      0013F6 26 00            [ 8] 4121 	ld	h, #0x00
                                   4122 ;	spillPairReg hl
                                   4123 ;	spillPairReg hl
      0013F8 29               [ 8] 4124 	add	hl, hl
      0013F9 29               [ 8] 4125 	add	hl, hl
      0013FA 29               [ 8] 4126 	add	hl, hl
      0013FB 7D               [ 4] 4127 	ld	a, l
      0013FC C6r00            [ 8] 4128 	add	a, #<(_map_components)
      0013FE 4F               [ 4] 4129 	ld	c, a
      0013FF 7C               [ 4] 4130 	ld	a, h
      001400 CEs00            [ 8] 4131 	adc	a, #>(_map_components)
      001402 47               [ 4] 4132 	ld	b, a
      001403 FAr04r00         [16] 4133 	ld	a, (#_i)
      001406 CB 3F            [ 8] 4134 	srl	a
      001408 87               [ 4] 4135 	add	a, a
      001409 6F               [ 4] 4136 	ld	l, a
      00140A 26 00            [ 8] 4137 	ld	h, #0x00
      00140C 09               [ 8] 4138 	add	hl, bc
      00140D 23               [ 8] 4139 	inc	hl
      00140E 7E               [ 8] 4140 	ld	a, (hl)
      00140F E6 0F            [ 8] 4141 	and	a, #0x0f
                                   4142 ;src/player.c:633: if(status_of_rack == 0x00){
      001411 4F               [ 4] 4143 	ld	c, a
      001412 B7               [ 4] 4144 	or	a, a
      001413 20 03            [12] 4145 	jr	NZ, 00104$
                                   4146 ;src/player.c:634: return true;
      001415 3E 01            [ 8] 4147 	ld	a, #0x01
      001417 C9               [16] 4148 	ret
      001418                       4149 00104$:
                                   4150 ;src/player.c:636: if((status_of_rack & 0b00001100) == 0b00001100){
      001418 79               [ 4] 4151 	ld	a, c
      001419 E6 0C            [ 8] 4152 	and	a, #0x0c
                                   4153 ;src/player.c:639: make_cloth_fall(status_of_rack & 0x03);
      00141B F5               [16] 4154 	push	af
      00141C 79               [ 4] 4155 	ld	a, c
      00141D E6 03            [ 8] 4156 	and	a, #0x03
      00141F 47               [ 4] 4157 	ld	b, a
      001420 F1               [12] 4158 	pop	af
                                   4159 ;src/player.c:636: if((status_of_rack & 0b00001100) == 0b00001100){
      001421 D6 0C            [ 8] 4160 	sub	a, #0x0c
      001423 20 0F            [12] 4161 	jr	NZ, 00106$
                                   4162 ;src/player.c:639: make_cloth_fall(status_of_rack & 0x03);
      001425 C5               [16] 4163 	push	bc
      001426 78               [ 4] 4164 	ld	a, b
      001427 CDr5Fr14         [24] 4165 	call	_make_cloth_fall
      00142A C1               [12] 4166 	pop	bc
                                   4167 ;src/player.c:641: make_cloth_fall((status_of_rack + 1) & 0x03);
      00142B 79               [ 4] 4168 	ld	a, c
      00142C 3C               [ 4] 4169 	inc	a
      00142D E6 03            [ 8] 4170 	and	a, #0x03
      00142F CDr5Fr14         [24] 4171 	call	_make_cloth_fall
      001432 18 04            [12] 4172 	jr	00107$
      001434                       4173 00106$:
                                   4174 ;src/player.c:645: make_cloth_fall(status_of_rack & 0x03);
      001434 78               [ 4] 4175 	ld	a, b
      001435 CDr5Fr14         [24] 4176 	call	_make_cloth_fall
      001438                       4177 00107$:
                                   4178 ;src/player.c:647: map_components[PLAYER_FLOOR][i>>1].status &= 0xF0;
      001438 FAr0Fr00         [16] 4179 	ld	a, (#_player_y)
      00143B 07               [ 4] 4180 	rlca
      00143C 07               [ 4] 4181 	rlca
      00143D E6 03            [ 8] 4182 	and	a, #0x03
      00143F 6F               [ 4] 4183 	ld	l, a
                                   4184 ;	spillPairReg hl
                                   4185 ;	spillPairReg hl
      001440 26 00            [ 8] 4186 	ld	h, #0x00
                                   4187 ;	spillPairReg hl
                                   4188 ;	spillPairReg hl
      001442 29               [ 8] 4189 	add	hl, hl
      001443 29               [ 8] 4190 	add	hl, hl
      001444 29               [ 8] 4191 	add	hl, hl
      001445 7D               [ 4] 4192 	ld	a, l
      001446 C6r00            [ 8] 4193 	add	a, #<(_map_components)
      001448 4F               [ 4] 4194 	ld	c, a
      001449 7C               [ 4] 4195 	ld	a, h
      00144A CEs00            [ 8] 4196 	adc	a, #>(_map_components)
      00144C 47               [ 4] 4197 	ld	b, a
      00144D FAr04r00         [16] 4198 	ld	a, (#_i)
      001450 CB 3F            [ 8] 4199 	srl	a
      001452 87               [ 4] 4200 	add	a, a
      001453 6F               [ 4] 4201 	ld	l, a
      001454 26 00            [ 8] 4202 	ld	h, #0x00
      001456 09               [ 8] 4203 	add	hl, bc
      001457 23               [ 8] 4204 	inc	hl
      001458 7E               [ 8] 4205 	ld	a, (hl)
      001459 E6 F0            [ 8] 4206 	and	a, #0xf0
      00145B 77               [ 8] 4207 	ld	(hl), a
      00145C                       4208 00109$:
                                   4209 ;src/player.c:649: return true;
      00145C 3E 01            [ 8] 4210 	ld	a, #0x01
                                   4211 ;src/player.c:650: }
      00145E C9               [16] 4212 	ret
                                   4213 ;src/player.c:652: static void make_cloth_fall(uint8_t sprite_in_OAM){
                                   4214 ;	---------------------------------
                                   4215 ; Function make_cloth_fall
                                   4216 ; ---------------------------------
      00145F                       4217 _make_cloth_fall:
                                   4218 ;src/player.c:653: clothes_speed |= (0b00000001 << ((sprite_in_OAM)<<1));
      00145F 4F               [ 4] 4219 	ld	c, a
      001460 87               [ 4] 4220 	add	a, a
      001461 47               [ 4] 4221 	ld	b, a
      001462 3E 01            [ 8] 4222 	ld	a, #0x01
      001464 04               [ 4] 4223 	inc	b
      001465 18 01            [12] 4224 	jr	00106$
      001467                       4225 00105$:
      001467 87               [ 4] 4226 	add	a, a
      001468                       4227 00106$:
      001468 05               [ 4] 4228 	dec	b
      001469 20 FC            [12] 4229 	jr	NZ,00105$
      00146B 21r00r00         [12] 4230 	ld	hl, #_clothes_speed
      00146E B6               [ 8] 4231 	or	a, (hl)
      00146F 77               [ 8] 4232 	ld	(hl), a
                                   4233 ;src/player.c:654: set_sprite_tile(16 + sprite_in_OAM, get_sprite_tile(16 + sprite_in_OAM) + 2);
      001470 79               [ 4] 4234 	ld	a, c
      001471 C6 10            [ 8] 4235 	add	a, #0x10
      001473 5F               [ 4] 4236 	ld	e, a
                                   4237 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1815: return shadow_OAM[nb].tile;
      001474 6B               [ 4] 4238 	ld	l, e
      001475 01r00r00         [12] 4239 	ld	bc, #_shadow_OAM+0
                                   4240 ;	spillPairReg hl
                                   4241 ;	spillPairReg hl
      001478 26 00            [ 8] 4242 	ld	h, #0x00
                                   4243 ;	spillPairReg hl
                                   4244 ;	spillPairReg hl
      00147A 29               [ 8] 4245 	add	hl, hl
      00147B 29               [ 8] 4246 	add	hl, hl
      00147C 09               [ 8] 4247 	add	hl, bc
      00147D 23               [ 8] 4248 	inc	hl
      00147E 23               [ 8] 4249 	inc	hl
      00147F 4E               [ 8] 4250 	ld	c, (hl)
                                   4251 ;src/player.c:654: set_sprite_tile(16 + sprite_in_OAM, get_sprite_tile(16 + sprite_in_OAM) + 2);
      001480 0C               [ 4] 4252 	inc	c
      001481 0C               [ 4] 4253 	inc	c
                                   4254 ;/home/javier/Escritorio/gb_development/gbdk/include/gb/gb.h:1804: shadow_OAM[nb].tile=tile;
      001482 6B               [ 4] 4255 	ld	l, e
                                   4256 ;	spillPairReg hl
                                   4257 ;	spillPairReg hl
      001483 26 00            [ 8] 4258 	ld	h, #0x00
                                   4259 ;	spillPairReg hl
                                   4260 ;	spillPairReg hl
      001485 29               [ 8] 4261 	add	hl, hl
      001486 29               [ 8] 4262 	add	hl, hl
      001487 11r00r00         [12] 4263 	ld	de, #_shadow_OAM
      00148A 19               [ 8] 4264 	add	hl, de
      00148B 23               [ 8] 4265 	inc	hl
      00148C 23               [ 8] 4266 	inc	hl
      00148D 71               [ 8] 4267 	ld	(hl), c
                                   4268 ;src/player.c:654: set_sprite_tile(16 + sprite_in_OAM, get_sprite_tile(16 + sprite_in_OAM) + 2);
                                   4269 ;src/player.c:655: }
      00148E C9               [16] 4270 	ret
                                   4271 ;src/player.c:657: static bool r_shingled_function(uint8_t epa){
                                   4272 ;	---------------------------------
                                   4273 ; Function r_shingled_function
                                   4274 ; ---------------------------------
      00148F                       4275 _r_shingled_function:
                                   4276 ;src/player.c:658: if(epa == CENTER_UP){
      00148F FE 31            [ 8] 4277 	cp	a, #0x31
      001491 20 26            [12] 4278 	jr	NZ, 00102$
                                   4279 ;src/player.c:411: if(current_state == state) {return;}
                                   4280 ;src/player.c:412: if(current_state == PLAYER_STATE_FALLING){instanciate_collision_puffs();}
      001493 FAr13r00         [16] 4281 	ld	a,(#_current_state)
      001496 FE 04            [ 8] 4282 	cp	a,#0x04
      001498 28 16            [12] 4283 	jr	Z, 00109$
      00149A D6 03            [ 8] 4284 	sub	a, #0x03
      00149C 20 03            [12] 4285 	jr	NZ, 00108$
      00149E CDr53r08         [24] 4286 	call	_instanciate_collision_puffs
      0014A1                       4287 00108$:
                                   4288 ;src/player.c:413: frame_counter = 0;
      0014A1 21r01r00         [12] 4289 	ld	hl, #_frame_counter
      0014A4 36 00            [12] 4290 	ld	(hl), #0x00
                                   4291 ;src/player.c:414: current_frame = 0;
      0014A6 21r02r00         [12] 4292 	ld	hl, #_current_frame
      0014A9 36 00            [12] 4293 	ld	(hl), #0x00
                                   4294 ;src/player.c:415: current_state = state;
      0014AB 21r13r00         [12] 4295 	ld	hl, #_current_state
      0014AE 36 04            [12] 4296 	ld	(hl), #0x04
                                   4297 ;src/player.c:659: switch_state(PLAYER_STATE_HURT);
      0014B0                       4298 00109$:
                                   4299 ;src/player.c:661: x_speed = 0;
      0014B0 AF               [ 4] 4300 	xor	a, a
      0014B1 21r07r00         [12] 4301 	ld	hl, #_x_speed
      0014B4 22               [ 8] 4302 	ld	(hl+), a
      0014B5 77               [ 8] 4303 	ld	(hl), a
                                   4304 ;src/player.c:662: return true;
      0014B6 3E 01            [ 8] 4305 	ld	a, #0x01
      0014B8 C9               [16] 4306 	ret
      0014B9                       4307 00102$:
                                   4308 ;src/player.c:664: if(epa == CENTER_DOWN){
      0014B9 D6 32            [ 8] 4309 	sub	a, #0x32
      0014BB 20 03            [12] 4310 	jr	NZ, 00104$
                                   4311 ;src/player.c:665: play_bump_sfx();
      0014BD CDr00r00         [24] 4312 	call	_play_bump_sfx
      0014C0                       4313 00104$:
                                   4314 ;src/player.c:667: return false;
      0014C0 AF               [ 4] 4315 	xor	a, a
                                   4316 ;src/player.c:668: }
      0014C1 C9               [16] 4317 	ret
                                   4318 ;src/player.c:669: static bool r_spikey_function(uint8_t epa){
                                   4319 ;	---------------------------------
                                   4320 ; Function r_spikey_function
                                   4321 ; ---------------------------------
      0014C2                       4322 _r_spikey_function:
                                   4323 ;src/player.c:670: if(epa == CENTER_UP){
      0014C2 FE 31            [ 8] 4324 	cp	a, #0x31
      0014C4 20 2B            [12] 4325 	jr	NZ, 00102$
                                   4326 ;src/player.c:411: if(current_state == state) {return;}
                                   4327 ;src/player.c:412: if(current_state == PLAYER_STATE_FALLING){instanciate_collision_puffs();}
      0014C6 FAr13r00         [16] 4328 	ld	a,(#_current_state)
      0014C9 FE 04            [ 8] 4329 	cp	a,#0x04
      0014CB 28 16            [12] 4330 	jr	Z, 00109$
      0014CD D6 03            [ 8] 4331 	sub	a, #0x03
      0014CF 20 03            [12] 4332 	jr	NZ, 00108$
      0014D1 CDr53r08         [24] 4333 	call	_instanciate_collision_puffs
      0014D4                       4334 00108$:
                                   4335 ;src/player.c:413: frame_counter = 0;
      0014D4 21r01r00         [12] 4336 	ld	hl, #_frame_counter
      0014D7 36 00            [12] 4337 	ld	(hl), #0x00
                                   4338 ;src/player.c:414: current_frame = 0;
      0014D9 21r02r00         [12] 4339 	ld	hl, #_current_frame
      0014DC 36 00            [12] 4340 	ld	(hl), #0x00
                                   4341 ;src/player.c:415: current_state = state;
      0014DE 21r13r00         [12] 4342 	ld	hl, #_current_state
      0014E1 36 04            [12] 4343 	ld	(hl), #0x04
                                   4344 ;src/player.c:671: switch_state(PLAYER_STATE_HURT);
      0014E3                       4345 00109$:
                                   4346 ;src/player.c:672: y_speed = (int8_t)(HURT_Y_SPEED);
      0014E3 21r0Cr00         [12] 4347 	ld	hl, #_y_speed
      0014E6 36 F8            [12] 4348 	ld	(hl), #0xf8
                                   4349 ;src/player.c:673: x_speed = HURT_X_SPEED;
      0014E8 21r07r00         [12] 4350 	ld	hl, #_x_speed
      0014EB AF               [ 4] 4351 	xor	a, a
      0014EC 22               [ 8] 4352 	ld	(hl+), a
                                   4353 ;src/player.c:674: return true;
      0014ED 3E 01            [ 8] 4354 	ld	a,#0x01
      0014EF 77               [ 8] 4355 	ld	(hl),a
      0014F0 C9               [16] 4356 	ret
      0014F1                       4357 00102$:
                                   4358 ;src/player.c:676: if(epa == CENTER_DOWN){
      0014F1 D6 32            [ 8] 4359 	sub	a, #0x32
      0014F3 20 03            [12] 4360 	jr	NZ, 00104$
                                   4361 ;src/player.c:677: play_bump_sfx();
      0014F5 CDr00r00         [24] 4362 	call	_play_bump_sfx
      0014F8                       4363 00104$:
                                   4364 ;src/player.c:679: return false;
      0014F8 AF               [ 4] 4365 	xor	a, a
                                   4366 ;src/player.c:680: }
      0014F9 C9               [16] 4367 	ret
                                   4368 ;src/player.c:681: static bool r_initf_function(uint8_t epa){
                                   4369 ;	---------------------------------
                                   4370 ; Function r_initf_function
                                   4371 ; ---------------------------------
      0014FA                       4372 _r_initf_function:
                                   4373 ;src/player.c:682: game_started_flag = epa == CENTER_UP;
      0014FA D6 31            [ 8] 4374 	sub	a, #0x31
      0014FC 3E 01            [ 8] 4375 	ld	a, #0x01
      0014FE 28 01            [12] 4376 	jr	Z, 00121$
      001500 AF               [ 4] 4377 	xor	a, a
      001501                       4378 00121$:
      001501 4F               [ 4] 4379 	ld	c, a
      001502 21r00r00         [12] 4380 	ld	hl, #_game_started_flag
      001505 71               [ 8] 4381 	ld	(hl), c
                                   4382 ;src/player.c:683: return (bool)(epa != CENTER_UP || (joy & J_DOWN));
      001506 CB 41            [ 8] 4383 	bit	0, c
      001508 28 09            [12] 4384 	jr	Z, 00104$
      00150A FAr05r00         [16] 4385 	ld	a, (#_joy)
      00150D 0F               [ 4] 4386 	rrca
      00150E 0F               [ 4] 4387 	rrca
      00150F 0F               [ 4] 4388 	rrca
      001510 E6 01            [ 8] 4389 	and	a,#0x01
      001512 C8               [20] 4390 	ret	Z
      001513                       4391 00104$:
      001513 3E 01            [ 8] 4392 	ld	a, #0x01
                                   4393 ;src/player.c:684: }
      001515 C9               [16] 4394 	ret
                                   4395 	.area _CODE
                                   4396 	.area _INITIALIZER
      000000                       4397 __xinit__puff_frame:
      000000 00                    4398 	.db #0x00	; 0
      000001 00                    4399 	.db #0x00	; 0
      000002 00                    4400 	.db #0x00	; 0
      000003 00                    4401 	.db #0x00	; 0
      000004                       4402 __xinit__rect_functions:
      000004r3Ar11                 4403 	.dw _r_solid_function
      000006r9Br13                 4404 	.dw _r_traversable_function
      000008rABr13                 4405 	.dw _r_inactive_function
      00000ArAEr13                 4406 	.dw _r_bouncy_function
      00000Cr8Fr14                 4407 	.dw _r_shingled_function
      00000ErC2r14                 4408 	.dw _r_spikey_function
      000010rFAr14                 4409 	.dw _r_initf_function
                                   4410 	.area _CABS (ABS)
