                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module player
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _hide_sprites_range
                                     12 	.globl _set_sprite_data
                                     13 	.globl _set_bkg_tiles
                                     14 	.globl _joypad
                                     15 	.globl _play_boing_sfx
                                     16 	.globl _stop_hurt_sfx
                                     17 	.globl _play_hurt_sfx
                                     18 	.globl _play_break_sfx
                                     19 	.globl _play_bump_sfx
                                     20 	.globl _stop_jump_sfx
                                     21 	.globl _play_jump_sfx
                                     22 	.globl _stop_sfx
                                     23 	.globl _score
                                     24 	.globl _a_not_pressed
                                     25 	.globl _player_dead_flag
                                     26 	.globl _clamp_y_velocity
                                     27 	.globl _clamp_x_velocity
                                     28 	.globl _jump_power
                                     29 	.globl _impulse
                                     30 	.globl _fall_g
                                     31 	.globl _jump_g
                                     32 	.globl _player_init
                                     33 	.globl _compute_player_frame
                                     34 ;--------------------------------------------------------
                                     35 ; special function registers
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area _DATA
                           000000    41 G$player_dead_flag$0_0$0==.
      000000                         42 _player_dead_flag::
      000000                         43 	.ds 1
                           000001    44 Fplayer$frame_counter$0_0$0==.
      000001                         45 _frame_counter:
      000001                         46 	.ds 1
                           000002    47 Fplayer$current_frame$0_0$0==.
      000002                         48 _current_frame:
      000002                         49 	.ds 1
                           000003    50 G$a_not_pressed$0_0$0==.
      000003                         51 _a_not_pressed::
      000003                         52 	.ds 1
                           000004    53 Fplayer$i$0_0$0==.
      000004                         54 _i:
      000004                         55 	.ds 1
                           000005    56 Fplayer$joy$0_0$0==.
      000005                         57 _joy:
      000005                         58 	.ds 1
                           000006    59 Fplayer$x_force$0_0$0==.
      000006                         60 _x_force:
      000006                         61 	.ds 1
                           000007    62 Fplayer$x_speed$0_0$0==.
      000007                         63 _x_speed:
      000007                         64 	.ds 1
                           000008    65 Fplayer$is_facing_right$0_0$0==.
      000008                         66 _is_facing_right:
      000008                         67 	.ds 1
                           000009    68 Fplayer$is_grounded$0_0$0==.
      000009                         69 _is_grounded:
      000009                         70 	.ds 1
                           00000A    71 Fplayer$is_jumping$0_0$0==.
      00000A                         72 _is_jumping:
      00000A                         73 	.ds 1
                           00000B    74 Fplayer$y_speed$0_0$0==.
      00000B                         75 _y_speed:
      00000B                         76 	.ds 1
                           00000C    77 Fplayer$player_x$0_0$0==.
      00000C                         78 _player_x:
      00000C                         79 	.ds 1
                           00000D    80 Fplayer$player_y$0_0$0==.
      00000D                         81 _player_y:
      00000D                         82 	.ds 1
                           00000E    83 Fplayer$last_x$0_0$0==.
      00000E                         84 _last_x:
      00000E                         85 	.ds 1
                           00000F    86 Fplayer$last_y$0_0$0==.
      00000F                         87 _last_y:
      00000F                         88 	.ds 1
                           000010    89 Fplayer$current_state$0_0$0==.
      000010                         90 _current_state:
      000010                         91 	.ds 1
                           000011    92 Fplayer$current_coyote_frames$0_0$0==.
      000011                         93 _current_coyote_frames:
      000011                         94 	.ds 1
                           000012    95 G$score$0_0$0==.
      000012                         96 _score::
      000012                         97 	.ds 2
                           000014    98 Fplayer$max_player_y$0_0$0==.
      000014                         99 _max_player_y:
      000014                        100 	.ds 1
                           000015   101 Fplayer$test_max_player_y$0_0$0==.
      000015                        102 _test_max_player_y:
      000015                        103 	.ds 1
                           000016   104 Fplayer$highest_visited_floor$0_0$0==.
      000016                        105 _highest_visited_floor:
      000016                        106 	.ds 1
                           000017   107 Fplayer$next_free_puff$0_0$0==.
      000017                        108 _next_free_puff:
      000017                        109 	.ds 1
                           000018   110 Fplayer$brick_frame$0_0$0==.
      000018                        111 _brick_frame:
      000018                        112 	.ds 1
                           000019   113 Fplayer$brick_y_speed$0_0$0==.
      000019                        114 _brick_y_speed:
      000019                        115 	.ds 1
                                    116 ;--------------------------------------------------------
                                    117 ; ram data
                                    118 ;--------------------------------------------------------
                                    119 	.area _INITIALIZED
                           000000   120 Fplayer$puff_frame$0_0$0==.
      000000                        121 _puff_frame:
      000000                        122 	.ds 4
                           000004   123 Fplayer$rect_functions$0_0$0==.
      000004                        124 _rect_functions:
      000004                        125 	.ds 14
                                    126 ;--------------------------------------------------------
                                    127 ; absolute external ram data
                                    128 ;--------------------------------------------------------
                                    129 	.area _DABS (ABS)
                                    130 ;--------------------------------------------------------
                                    131 ; global & static initialisations
                                    132 ;--------------------------------------------------------
                                    133 	.area _HOME
                                    134 	.area _GSINIT
                                    135 	.area _GSFINAL
                                    136 	.area _GSINIT
                                    137 ;--------------------------------------------------------
                                    138 ; Home
                                    139 ;--------------------------------------------------------
                                    140 	.area _HOME
                                    141 	.area _HOME
                                    142 ;--------------------------------------------------------
                                    143 ; code
                                    144 ;--------------------------------------------------------
                                    145 	.area _CODE
                           000000   146 	G$player_init$0$0	= .
                                    147 	.globl	G$player_init$0$0
                           000000   148 	C$player.c$127$0_0$153	= .
                                    149 	.globl	C$player.c$127$0_0$153
                                    150 ;src/player.c:127: void player_init(void)
                                    151 ;	---------------------------------
                                    152 ; Function player_init
                                    153 ; ---------------------------------
      000000                        154 _player_init::
                           000000   155 	C$player.c$129$1_0$153	= .
                                    156 	.globl	C$player.c$129$1_0$153
                                    157 ;src/player.c:129: player_dead_flag = false;
      000000 21r00r00               158 	ld	hl, #_player_dead_flag
      000003 36 00                  159 	ld	(hl), #0x00
                           000005   160 	C$player.c$131$1_0$153	= .
                                    161 	.globl	C$player.c$131$1_0$153
                                    162 ;src/player.c:131: OBP0_REG = 0xE4; //11100100
      000005 3E E4                  163 	ld	a, #0xe4
      000007 E0r00                  164 	ldh	(_OBP0_REG + 0), a
                           000009   165 	C$player.c$134$1_0$153	= .
                                    166 	.globl	C$player.c$134$1_0$153
                                    167 ;src/player.c:134: set_sprite_data(TILE_NUM_START, PLAYER_SPRITES, playerSprites);
      000009 11r00r00               168 	ld	de, #_playerSprites
      00000C D5                     169 	push	de
      00000D 21 00 18               170 	ld	hl, #0x1800
      000010 E5                     171 	push	hl
      000011 CDr00r00               172 	call	_set_sprite_data
      000014 E8 04                  173 	add	sp, #4
                           000016   174 	C$player.c$135$1_0$153	= .
                                    175 	.globl	C$player.c$135$1_0$153
                                    176 ;src/player.c:135: set_sprite_data(PLAYER_SPRITES, 3, Sfx);
      000016 11r00r00               177 	ld	de, #_Sfx
      000019 D5                     178 	push	de
      00001A 21 18 03               179 	ld	hl, #0x318
      00001D E5                     180 	push	hl
      00001E CDr00r00               181 	call	_set_sprite_data
      000021 E8 04                  182 	add	sp, #4
                           000023   183 	C$player.c$137$1_0$153	= .
                                    184 	.globl	C$player.c$137$1_0$153
                                    185 ;src/player.c:137: frame_counter = 0;
      000023 21r01r00               186 	ld	hl, #_frame_counter
      000026 36 00                  187 	ld	(hl), #0x00
                           000028   188 	C$player.c$138$1_0$153	= .
                                    189 	.globl	C$player.c$138$1_0$153
                                    190 ;src/player.c:138: current_frame = 0;
      000028 21r02r00               191 	ld	hl, #_current_frame
      00002B 36 00                  192 	ld	(hl), #0x00
                           00002D   193 	C$player.c$139$1_0$153	= .
                                    194 	.globl	C$player.c$139$1_0$153
                                    195 ;src/player.c:139: current_state = PLAYER_STATE_IDLE;
      00002D 21r10r00               196 	ld	hl, #_current_state
      000030 36 00                  197 	ld	(hl), #0x00
                           000032   198 	C$player.c$140$1_0$153	= .
                                    199 	.globl	C$player.c$140$1_0$153
                                    200 ;src/player.c:140: x_force = 0U;
      000032 21r06r00               201 	ld	hl, #_x_force
      000035 36 00                  202 	ld	(hl), #0x00
                           000037   203 	C$player.c$141$1_0$153	= .
                                    204 	.globl	C$player.c$141$1_0$153
                                    205 ;src/player.c:141: x_speed = 0U;
      000037 21r07r00               206 	ld	hl, #_x_speed
      00003A 36 00                  207 	ld	(hl), #0x00
                           00003C   208 	C$player.c$142$1_0$153	= .
                                    209 	.globl	C$player.c$142$1_0$153
                                    210 ;src/player.c:142: y_speed = 0;
      00003C 21r0Br00               211 	ld	hl, #_y_speed
      00003F 36 00                  212 	ld	(hl), #0x00
                           000041   213 	C$player.c$143$1_0$153	= .
                                    214 	.globl	C$player.c$143$1_0$153
                                    215 ;src/player.c:143: player_x = last_x = 16U;
      000041 21r0Er00               216 	ld	hl, #_last_x
      000044 36 10                  217 	ld	(hl), #0x10
      000046 21r0Cr00               218 	ld	hl, #_player_x
      000049 36 10                  219 	ld	(hl), #0x10
                           00004B   220 	C$player.c$144$1_0$153	= .
                                    221 	.globl	C$player.c$144$1_0$153
                                    222 ;src/player.c:144: player_y = last_y = 128U;
      00004B 21r0Fr00               223 	ld	hl, #_last_y
      00004E 36 80                  224 	ld	(hl), #0x80
      000050 21r0Dr00               225 	ld	hl, #_player_y
      000053 36 80                  226 	ld	(hl), #0x80
                           000055   227 	C$player.c$145$1_0$153	= .
                                    228 	.globl	C$player.c$145$1_0$153
                                    229 ;src/player.c:145: is_facing_right = true;
      000055 21r08r00               230 	ld	hl, #_is_facing_right
      000058 36 01                  231 	ld	(hl), #0x01
                           00005A   232 	C$player.c$146$1_0$153	= .
                                    233 	.globl	C$player.c$146$1_0$153
                                    234 ;src/player.c:146: is_grounded = true;
      00005A 21r09r00               235 	ld	hl, #_is_grounded
      00005D 36 01                  236 	ld	(hl), #0x01
                           00005F   237 	C$player.c$147$1_0$153	= .
                                    238 	.globl	C$player.c$147$1_0$153
                                    239 ;src/player.c:147: next_free_puff = 0;
      00005F 21r17r00               240 	ld	hl, #_next_free_puff
      000062 36 00                  241 	ld	(hl), #0x00
                           000064   242 	C$player.c$148$1_0$153	= .
                                    243 	.globl	C$player.c$148$1_0$153
                                    244 ;src/player.c:148: score = 0;
      000064 AF                     245 	xor	a, a
      000065 21r12r00               246 	ld	hl, #_score
      000068 22                     247 	ld	(hl+), a
      000069 77                     248 	ld	(hl), a
                           00006A   249 	C$player.c$149$1_0$153	= .
                                    250 	.globl	C$player.c$149$1_0$153
                                    251 ;src/player.c:149: highest_visited_floor = 1;
      00006A 21r16r00               252 	ld	hl, #_highest_visited_floor
      00006D 36 01                  253 	ld	(hl), #0x01
                           00006F   254 	C$player.c$150$1_0$153	= .
                                    255 	.globl	C$player.c$150$1_0$153
                                    256 ;src/player.c:150: max_player_y = 0;
      00006F 21r14r00               257 	ld	hl, #_max_player_y
      000072 36 00                  258 	ld	(hl), #0x00
                           000074   259 	C$player.c$151$1_0$153	= .
                                    260 	.globl	C$player.c$151$1_0$153
                                    261 ;src/player.c:151: a_not_pressed = true;
      000074 21r03r00               262 	ld	hl, #_a_not_pressed
      000077 36 01                  263 	ld	(hl), #0x01
                           000079   264 	C$player.c$152$1_0$153	= .
                                    265 	.globl	C$player.c$152$1_0$153
                                    266 ;src/player.c:152: current_coyote_frames = 0;
      000079 21r11r00               267 	ld	hl, #_current_coyote_frames
      00007C 36 00                  268 	ld	(hl), #0x00
                           00007E   269 	C$player.c$153$1_0$153	= .
                                    270 	.globl	C$player.c$153$1_0$153
                                    271 ;src/player.c:153: joy = 0;
      00007E 21r05r00               272 	ld	hl, #_joy
      000081 36 00                  273 	ld	(hl), #0x00
                                    274 ;src/player.c:154: move_metasprite(idle_metasprites[0], TILE_NUM_START, SPR_NUM_START, player_x, player_y);
      000083 21r00r00               275 	ld	hl, #_idle_metasprites
      000086 2A                     276 	ld	a, (hl+)
      000087 4F                     277 	ld	c, a
      000088 7E                     278 	ld	a, (hl)
                                    279 ;C:/gbdk/include/gb/metasprites.h:138: __current_metasprite = metasprite;
      000089 21r00r00               280 	ld	hl, #___current_metasprite
      00008C 71                     281 	ld	(hl), c
      00008D 23                     282 	inc	hl
      00008E 77                     283 	ld	(hl), a
                                    284 ;C:/gbdk/include/gb/metasprites.h:139: __current_base_tile = base_tile;
      00008F 21r00r00               285 	ld	hl, #___current_base_tile
      000092 36 00                  286 	ld	(hl), #0x00
                                    287 ;C:/gbdk/include/gb/metasprites.h:140: return __move_metasprite(base_sprite, x, y);
      000094 21 10 80               288 	ld	hl, #0x8010
      000097 E5                     289 	push	hl
      000098 AF                     290 	xor	a, a
      000099 F5                     291 	push	af
      00009A 33                     292 	inc	sp
      00009B CDr00r00               293 	call	___move_metasprite
      00009E E8 03                  294 	add	sp, #3
                           0000A0   295 	C$player.c$156$1_0$153	= .
                                    296 	.globl	C$player.c$156$1_0$153
                                    297 ;src/player.c:156: set_sprite_data(0x1B, 2, brick_particle);
      0000A0 11r00r00               298 	ld	de, #_brick_particle
      0000A3 D5                     299 	push	de
      0000A4 21 1B 02               300 	ld	hl, #0x21b
      0000A7 E5                     301 	push	hl
      0000A8 CDr00r00               302 	call	_set_sprite_data
      0000AB E8 04                  303 	add	sp, #4
                                    304 ;C:/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0000AD 21r32r00               305 	ld	hl, #(_shadow_OAM + 50)
      0000B0 36 1B                  306 	ld	(hl), #0x1b
      0000B2 21r36r00               307 	ld	hl, #(_shadow_OAM + 54)
      0000B5 36 1B                  308 	ld	(hl), #0x1b
      0000B7 21r3Ar00               309 	ld	hl, #(_shadow_OAM + 58)
      0000BA 36 1C                  310 	ld	(hl), #0x1c
      0000BC 21r3Er00               311 	ld	hl, #(_shadow_OAM + 62)
      0000BF 36 1C                  312 	ld	(hl), #0x1c
                           0000C1   313 	C$player.c$161$1_0$153	= .
                                    314 	.globl	C$player.c$161$1_0$153
                                    315 ;src/player.c:161: brick_frame = 0;
      0000C1 21r18r00               316 	ld	hl, #_brick_frame
      0000C4 36 00                  317 	ld	(hl), #0x00
                           0000C6   318 	C$player.c$162$1_0$153	= .
                                    319 	.globl	C$player.c$162$1_0$153
                                    320 ;src/player.c:162: }
                           0000C6   321 	C$player.c$162$1_0$153	= .
                                    322 	.globl	C$player.c$162$1_0$153
                           0000C6   323 	XG$player_init$0$0	= .
                                    324 	.globl	XG$player_init$0$0
      0000C6 C9                     325 	ret
                           0000C7   326 G$jump_g$0_0$0 == .
      0000C7                        327 _jump_g:
      0000C7 02                     328 	.db #0x02	; 2
                           0000C8   329 G$fall_g$0_0$0 == .
      0000C8                        330 _fall_g:
      0000C8 04                     331 	.db #0x04	; 4
                           0000C9   332 G$impulse$0_0$0 == .
      0000C9                        333 _impulse:
      0000C9 02                     334 	.db #0x02	; 2
                           0000CA   335 G$jump_power$0_0$0 == .
      0000CA                        336 _jump_power:
      0000CA DD                     337 	.db #0xdd	; -35
                           0000CB   338 G$clamp_x_velocity$0_0$0 == .
      0000CB                        339 _clamp_x_velocity:
      0000CB 08                     340 	.db #0x08	; 8
                           0000CC   341 G$clamp_y_velocity$0_0$0 == .
      0000CC                        342 _clamp_y_velocity:
      0000CC 19                     343 	.db #0x19	;  25
                           0000CD   344 	G$compute_player_frame$0$0	= .
                                    345 	.globl	G$compute_player_frame$0$0
                           0000CD   346 	C$player.c$164$1_0$170	= .
                                    347 	.globl	C$player.c$164$1_0$170
                                    348 ;src/player.c:164: void compute_player_frame(void)
                                    349 ;	---------------------------------
                                    350 ; Function compute_player_frame
                                    351 ; ---------------------------------
      0000CD                        352 _compute_player_frame::
                           0000CD   353 	C$player.c$166$1_0$170	= .
                                    354 	.globl	C$player.c$166$1_0$170
                                    355 ;src/player.c:166: if(current_state == PLAYER_STATE_HURT){
      0000CD FAr10r00               356 	ld	a, (#_current_state)
      0000D0 D6 04                  357 	sub	a, #0x04
      0000D2 20 05                  358 	jr	NZ, 00102$
                           0000D4   359 	C$player.c$167$2_0$171	= .
                                    360 	.globl	C$player.c$167$2_0$171
                                    361 ;src/player.c:167: hurt_frame();
      0000D4 CDrFEr07               362 	call	_hurt_frame
      0000D7 18 06                  363 	jr	00103$
      0000D9                        364 00102$:
                           0000D9   365 	C$player.c$170$2_0$172	= .
                                    366 	.globl	C$player.c$170$2_0$172
                                    367 ;src/player.c:170: retrieve_input();
      0000D9 CDr40r01               368 	call	_retrieve_input
                           0000DC   369 	C$player.c$172$2_0$172	= .
                                    370 	.globl	C$player.c$172$2_0$172
                                    371 ;src/player.c:172: calculate_physics();
      0000DC CDr52r02               372 	call	_calculate_physics
      0000DF                        373 00103$:
                           0000DF   374 	C$player.c$178$1_0$170	= .
                                    375 	.globl	C$player.c$178$1_0$170
                                    376 ;src/player.c:178: check_collisions();
      0000DF CDrECr08               377 	call	_check_collisions
                           0000E2   378 	C$player.c$179$1_0$170	= .
                                    379 	.globl	C$player.c$179$1_0$170
                                    380 ;src/player.c:179: if(y_speed > 0 && (current_state != PLAYER_STATE_HURT && current_state != PLAYER_STATE_FALLING)){
      0000E2 21r0Br00               381 	ld	hl, #_y_speed
      0000E5 5E                     382 	ld	e, (hl)
      0000E6 AF                     383 	xor	a, a
      0000E7 57                     384 	ld	d, a
      0000E8 96                     385 	sub	a, (hl)
      0000E9 CB 7B                  386 	bit	7, e
      0000EB 28 07                  387 	jr	Z, 00145$
      0000ED CB 7A                  388 	bit	7, d
      0000EF 20 08                  389 	jr	NZ, 00146$
      0000F1 BF                     390 	cp	a, a
      0000F2 18 05                  391 	jr	00146$
      0000F4                        392 00145$:
      0000F4 CB 7A                  393 	bit	7, d
      0000F6 28 01                  394 	jr	Z, 00146$
      0000F8 37                     395 	scf
      0000F9                        396 00146$:
      0000F9 30 1D                  397 	jr	NC, 00105$
      0000FB FAr10r00               398 	ld	a,(#_current_state)
      0000FE FE 04                  399 	cp	a,#0x04
      000100 28 16                  400 	jr	Z, 00105$
      000102 D6 03                  401 	sub	a, #0x03
      000104 28 12                  402 	jr	Z, 00105$
                           000106   403 	C$player.c$180$2_0$173	= .
                                    404 	.globl	C$player.c$180$2_0$173
                                    405 ;src/player.c:180: switch_state(PLAYER_STATE_FALLING);
      000106 3E 03                  406 	ld	a, #0x03
      000108 F5                     407 	push	af
      000109 33                     408 	inc	sp
      00010A CDrC8r08               409 	call	_switch_state
      00010D 33                     410 	inc	sp
                           00010E   411 	C$player.c$181$2_0$173	= .
                                    412 	.globl	C$player.c$181$2_0$173
                                    413 ;src/player.c:181: is_grounded = false;
      00010E 21r09r00               414 	ld	hl, #_is_grounded
      000111 36 00                  415 	ld	(hl), #0x00
                           000113   416 	C$player.c$182$2_0$173	= .
                                    417 	.globl	C$player.c$182$2_0$173
                                    418 ;src/player.c:182: is_jumping = false;
      000113 21r0Ar00               419 	ld	hl, #_is_jumping
      000116 36 00                  420 	ld	(hl), #0x00
      000118                        421 00105$:
                           000118   422 	C$player.c$185$1_0$170	= .
                                    423 	.globl	C$player.c$185$1_0$170
                                    424 ;src/player.c:185: if(current_state == PLAYER_STATE_FALLING && current_coyote_frames < COYOTE_FRAMES) current_coyote_frames++;
      000118 FAr10r00               425 	ld	a, (#_current_state)
      00011B D6 03                  426 	sub	a, #0x03
      00011D 20 09                  427 	jr	NZ, 00109$
      00011F 21r11r00               428 	ld	hl, #_current_coyote_frames
      000122 7E                     429 	ld	a, (hl)
      000123 D6 04                  430 	sub	a, #0x04
      000125 30 01                  431 	jr	NC, 00109$
      000127 34                     432 	inc	(hl)
      000128                        433 00109$:
                           000128   434 	C$player.c$187$1_0$170	= .
                                    435 	.globl	C$player.c$187$1_0$170
                                    436 ;src/player.c:187: update_score();
      000128 CDr90r0E               437 	call	_update_score
                           00012B   438 	C$player.c$189$1_0$170	= .
                                    439 	.globl	C$player.c$189$1_0$170
                                    440 ;src/player.c:189: last_x = player_x;
      00012B FAr0Cr00               441 	ld	a, (#_player_x)
      00012E EAr0Er00               442 	ld	(#_last_x),a
                           000131   443 	C$player.c$190$1_0$170	= .
                                    444 	.globl	C$player.c$190$1_0$170
                                    445 ;src/player.c:190: last_y = player_y;
      000131 FAr0Dr00               446 	ld	a, (#_player_y)
      000134 EAr0Fr00               447 	ld	(#_last_y),a
                           000137   448 	C$player.c$192$1_0$170	= .
                                    449 	.globl	C$player.c$192$1_0$170
                                    450 ;src/player.c:192: render_all_particles();
      000137 CDr91r05               451 	call	_render_all_particles
                           00013A   452 	C$player.c$194$1_0$170	= .
                                    453 	.globl	C$player.c$194$1_0$170
                                    454 ;src/player.c:194: render_player();
      00013A CDr3Br03               455 	call	_render_player
                           00013D   456 	C$player.c$196$1_0$170	= .
                                    457 	.globl	C$player.c$196$1_0$170
                                    458 ;src/player.c:196: end_frame();
                           00013D   459 	C$player.c$197$1_0$170	= .
                                    460 	.globl	C$player.c$197$1_0$170
                                    461 ;src/player.c:197: }
                           00013D   462 	C$player.c$197$1_0$170	= .
                                    463 	.globl	C$player.c$197$1_0$170
                           00013D   464 	XG$compute_player_frame$0$0	= .
                                    465 	.globl	XG$compute_player_frame$0$0
      00013D C3r60r08               466 	jp	_end_frame
                           000140   467 	Fplayer$retrieve_input$0$0	= .
                                    468 	.globl	Fplayer$retrieve_input$0$0
                           000140   469 	C$player.c$199$1_0$175	= .
                                    470 	.globl	C$player.c$199$1_0$175
                                    471 ;src/player.c:199: static void retrieve_input(void){
                                    472 ;	---------------------------------
                                    473 ; Function retrieve_input
                                    474 ; ---------------------------------
      000140                        475 _retrieve_input:
                           000140   476 	C$player.c$200$1_0$175	= .
                                    477 	.globl	C$player.c$200$1_0$175
                                    478 ;src/player.c:200: joy = joypad();
      000140 CDr00r00               479 	call	_joypad
      000143 21r05r00               480 	ld	hl, #_joy
      000146 73                     481 	ld	(hl), e
                           000147   482 	C$player.c$201$1_0$175	= .
                                    483 	.globl	C$player.c$201$1_0$175
                                    484 ;src/player.c:201: if (joy & J_RIGHT)
      000147 7E                     485 	ld	a, (hl)
      000148 CB 47                  486 	bit	0, a
      00014A 28 30                  487 	jr	Z, 00120$
                           00014C   488 	C$player.c$203$2_0$176	= .
                                    489 	.globl	C$player.c$203$2_0$176
                                    490 ;src/player.c:203: if(is_grounded)switch_state(PLAYER_STATE_RUNNING);
      00014C 21r09r00               491 	ld	hl, #_is_grounded
      00014F CB 46                  492 	bit	0, (hl)
      000151 28 08                  493 	jr	Z, 00102$
      000153 3E 01                  494 	ld	a, #0x01
      000155 F5                     495 	push	af
      000156 33                     496 	inc	sp
      000157 CDrC8r08               497 	call	_switch_state
      00015A 33                     498 	inc	sp
      00015B                        499 00102$:
                           00015B   500 	C$player.c$204$2_0$176	= .
                                    501 	.globl	C$player.c$204$2_0$176
                                    502 ;src/player.c:204: if (!is_facing_right && x_speed)
      00015B 21r08r00               503 	ld	hl, #_is_facing_right
      00015E CB 46                  504 	bit	0, (hl)
      000160 20 0D                  505 	jr	NZ, 00104$
      000162 FAr07r00               506 	ld	a, (#_x_speed)
      000165 B7                     507 	or	a, a
      000166 28 07                  508 	jr	Z, 00104$
                           000168   509 	C$player.c$206$3_0$177	= .
                                    510 	.globl	C$player.c$206$3_0$177
                                    511 ;src/player.c:206: x_force = 0;
      000168 21r06r00               512 	ld	hl, #_x_force
      00016B 36 00                  513 	ld	(hl), #0x00
      00016D 18 59                  514 	jr	00121$
      00016F                        515 00104$:
                           00016F   516 	C$player.c$210$3_0$178	= .
                                    517 	.globl	C$player.c$210$3_0$178
                                    518 ;src/player.c:210: is_facing_right = true;
      00016F 21r08r00               519 	ld	hl, #_is_facing_right
      000172 36 01                  520 	ld	(hl), #0x01
                           000174   521 	C$player.c$211$3_0$178	= .
                                    522 	.globl	C$player.c$211$3_0$178
                                    523 ;src/player.c:211: x_force = impulse;
      000174 FArC9r00               524 	ld	a, (#_impulse)
      000177 EAr06r00               525 	ld	(#_x_force),a
      00017A 18 4C                  526 	jr	00121$
      00017C                        527 00120$:
                           00017C   528 	C$player.c$214$1_0$175	= .
                                    529 	.globl	C$player.c$214$1_0$175
                                    530 ;src/player.c:214: else if (joy & J_LEFT)
      00017C CB 4F                  531 	bit	1, a
      00017E 28 30                  532 	jr	Z, 00117$
                           000180   533 	C$player.c$216$2_0$179	= .
                                    534 	.globl	C$player.c$216$2_0$179
                                    535 ;src/player.c:216: if(is_grounded)switch_state(PLAYER_STATE_RUNNING);
      000180 21r09r00               536 	ld	hl, #_is_grounded
      000183 CB 46                  537 	bit	0, (hl)
      000185 28 08                  538 	jr	Z, 00108$
      000187 3E 01                  539 	ld	a, #0x01
      000189 F5                     540 	push	af
      00018A 33                     541 	inc	sp
      00018B CDrC8r08               542 	call	_switch_state
      00018E 33                     543 	inc	sp
      00018F                        544 00108$:
                           00018F   545 	C$player.c$217$2_0$179	= .
                                    546 	.globl	C$player.c$217$2_0$179
                                    547 ;src/player.c:217: if (is_facing_right && x_speed)
      00018F 21r08r00               548 	ld	hl, #_is_facing_right
      000192 CB 46                  549 	bit	0, (hl)
      000194 28 0D                  550 	jr	Z, 00110$
      000196 FAr07r00               551 	ld	a, (#_x_speed)
      000199 B7                     552 	or	a, a
      00019A 28 07                  553 	jr	Z, 00110$
                           00019C   554 	C$player.c$219$3_0$180	= .
                                    555 	.globl	C$player.c$219$3_0$180
                                    556 ;src/player.c:219: x_force = 0;
      00019C 21r06r00               557 	ld	hl, #_x_force
      00019F 36 00                  558 	ld	(hl), #0x00
      0001A1 18 25                  559 	jr	00121$
      0001A3                        560 00110$:
                           0001A3   561 	C$player.c$223$3_0$181	= .
                                    562 	.globl	C$player.c$223$3_0$181
                                    563 ;src/player.c:223: is_facing_right = false;
      0001A3 21r08r00               564 	ld	hl, #_is_facing_right
      0001A6 36 00                  565 	ld	(hl), #0x00
                           0001A8   566 	C$player.c$224$3_0$181	= .
                                    567 	.globl	C$player.c$224$3_0$181
                                    568 ;src/player.c:224: x_force = impulse;
      0001A8 FArC9r00               569 	ld	a, (#_impulse)
      0001AB EAr06r00               570 	ld	(#_x_force),a
      0001AE 18 18                  571 	jr	00121$
      0001B0                        572 00117$:
                           0001B0   573 	C$player.c$229$2_0$182	= .
                                    574 	.globl	C$player.c$229$2_0$182
                                    575 ;src/player.c:229: x_force = 0;
      0001B0 21r06r00               576 	ld	hl, #_x_force
      0001B3 36 00                  577 	ld	(hl), #0x00
                           0001B5   578 	C$player.c$230$2_0$182	= .
                                    579 	.globl	C$player.c$230$2_0$182
                                    580 ;src/player.c:230: if((!x_speed) && (!y_speed)) switch_state(PLAYER_STATE_IDLE);
      0001B5 FAr07r00               581 	ld	a, (#_x_speed)
      0001B8 B7                     582 	or	a, a
      0001B9 20 0D                  583 	jr	NZ, 00121$
      0001BB FAr0Br00               584 	ld	a, (#_y_speed)
      0001BE B7                     585 	or	a, a
      0001BF 20 07                  586 	jr	NZ, 00121$
      0001C1 AF                     587 	xor	a, a
      0001C2 F5                     588 	push	af
      0001C3 33                     589 	inc	sp
      0001C4 CDrC8r08               590 	call	_switch_state
      0001C7 33                     591 	inc	sp
      0001C8                        592 00121$:
                           0001C8   593 	C$player.c$201$1_0$175	= .
                                    594 	.globl	C$player.c$201$1_0$175
                                    595 ;src/player.c:201: if (joy & J_RIGHT)
      0001C8 FAr05r00               596 	ld	a, (#_joy)
                           0001CB   597 	C$player.c$232$1_0$175	= .
                                    598 	.globl	C$player.c$232$1_0$175
                                    599 ;src/player.c:232: if ((joy & J_A && a_not_pressed) && (is_grounded || current_coyote_frames < COYOTE_FRAMES) && (y_speed >= 0))
      0001CB E6 10                  600 	and	a, #0x10
      0001CD 4F                     601 	ld	c, a
      0001CE 06 00                  602 	ld	b, #0x00
      0001D0 78                     603 	ld	a, b
      0001D1 B1                     604 	or	a, c
      0001D2 28 3E                  605 	jr	Z, 00127$
      0001D4 21r03r00               606 	ld	hl, #_a_not_pressed
      0001D7 CB 46                  607 	bit	0, (hl)
      0001D9 28 37                  608 	jr	Z, 00127$
      0001DB 21r09r00               609 	ld	hl, #_is_grounded
      0001DE CB 46                  610 	bit	0, (hl)
      0001E0 20 07                  611 	jr	NZ, 00132$
      0001E2 FAr11r00               612 	ld	a, (#_current_coyote_frames)
      0001E5 D6 04                  613 	sub	a, #0x04
      0001E7 30 29                  614 	jr	NC, 00127$
      0001E9                        615 00132$:
      0001E9 FAr0Br00               616 	ld	a, (#_y_speed)
      0001EC CB 7F                  617 	bit	7, a
      0001EE 20 22                  618 	jr	NZ, 00127$
                           0001F0   619 	C$player.c$234$2_0$183	= .
                                    620 	.globl	C$player.c$234$2_0$183
                                    621 ;src/player.c:234: switch_state(PLAYER_STATE_JUMPING);
      0001F0 3E 02                  622 	ld	a, #0x02
      0001F2 F5                     623 	push	af
      0001F3 33                     624 	inc	sp
      0001F4 CDrC8r08               625 	call	_switch_state
      0001F7 33                     626 	inc	sp
                           0001F8   627 	C$player.c$235$2_0$183	= .
                                    628 	.globl	C$player.c$235$2_0$183
                                    629 ;src/player.c:235: play_jump_sfx();
      0001F8 CDr00r00               630 	call	_play_jump_sfx
                           0001FB   631 	C$player.c$236$2_0$183	= .
                                    632 	.globl	C$player.c$236$2_0$183
                                    633 ;src/player.c:236: a_not_pressed = false;
      0001FB 21r03r00               634 	ld	hl, #_a_not_pressed
      0001FE 36 00                  635 	ld	(hl), #0x00
                           000200   636 	C$player.c$237$2_0$183	= .
                                    637 	.globl	C$player.c$237$2_0$183
                                    638 ;src/player.c:237: y_speed = jump_power;
      000200 FArCAr00               639 	ld	a, (#_jump_power)
      000203 EAr0Br00               640 	ld	(#_y_speed),a
                           000206   641 	C$player.c$238$2_0$183	= .
                                    642 	.globl	C$player.c$238$2_0$183
                                    643 ;src/player.c:238: is_grounded = false;
      000206 21r09r00               644 	ld	hl, #_is_grounded
      000209 36 00                  645 	ld	(hl), #0x00
                           00020B   646 	C$player.c$239$2_0$183	= .
                                    647 	.globl	C$player.c$239$2_0$183
                                    648 ;src/player.c:239: is_jumping = true;
      00020B 21r0Ar00               649 	ld	hl, #_is_jumping
      00020E 36 01                  650 	ld	(hl), #0x01
      000210 18 34                  651 	jr	00128$
      000212                        652 00127$:
                           000212   653 	C$player.c$241$1_0$175	= .
                                    654 	.globl	C$player.c$241$1_0$175
                                    655 ;src/player.c:241: else if ((!(joy & J_A) || y_speed > 0) && !is_grounded)
      000212 78                     656 	ld	a, b
      000213 B1                     657 	or	a, c
      000214 28 19                  658 	jr	Z, 00125$
      000216 21r0Br00               659 	ld	hl, #_y_speed
      000219 5E                     660 	ld	e, (hl)
      00021A AF                     661 	xor	a, a
      00021B 57                     662 	ld	d, a
      00021C 96                     663 	sub	a, (hl)
      00021D CB 7B                  664 	bit	7, e
      00021F 28 07                  665 	jr	Z, 00224$
      000221 CB 7A                  666 	bit	7, d
      000223 20 08                  667 	jr	NZ, 00225$
      000225 BF                     668 	cp	a, a
      000226 18 05                  669 	jr	00225$
      000228                        670 00224$:
      000228 CB 7A                  671 	bit	7, d
      00022A 28 01                  672 	jr	Z, 00225$
      00022C 37                     673 	scf
      00022D                        674 00225$:
      00022D 30 17                  675 	jr	NC, 00128$
      00022F                        676 00125$:
      00022F 21r09r00               677 	ld	hl, #_is_grounded
      000232 CB 46                  678 	bit	0, (hl)
      000234 20 10                  679 	jr	NZ, 00128$
                           000236   680 	C$player.c$243$2_0$184	= .
                                    681 	.globl	C$player.c$243$2_0$184
                                    682 ;src/player.c:243: switch_state(PLAYER_STATE_FALLING);
      000236 3E 03                  683 	ld	a, #0x03
      000238 F5                     684 	push	af
      000239 33                     685 	inc	sp
      00023A CDrC8r08               686 	call	_switch_state
      00023D 33                     687 	inc	sp
                           00023E   688 	C$player.c$244$2_0$184	= .
                                    689 	.globl	C$player.c$244$2_0$184
                                    690 ;src/player.c:244: stop_jump_sfx();
      00023E CDr00r00               691 	call	_stop_jump_sfx
                           000241   692 	C$player.c$245$2_0$184	= .
                                    693 	.globl	C$player.c$245$2_0$184
                                    694 ;src/player.c:245: is_jumping = false;
      000241 21r0Ar00               695 	ld	hl, #_is_jumping
      000244 36 00                  696 	ld	(hl), #0x00
      000246                        697 00128$:
                           000246   698 	C$player.c$247$1_0$175	= .
                                    699 	.globl	C$player.c$247$1_0$175
                                    700 ;src/player.c:247: if(!(joy & J_A)) a_not_pressed = true;
      000246 FAr05r00               701 	ld	a, (#_joy)
      000249 CB 67                  702 	bit	4, a
      00024B C0                     703 	ret	NZ
      00024C 21r03r00               704 	ld	hl, #_a_not_pressed
      00024F 36 01                  705 	ld	(hl), #0x01
                           000251   706 	C$player.c$248$1_0$175	= .
                                    707 	.globl	C$player.c$248$1_0$175
                                    708 ;src/player.c:248: }
                           000251   709 	C$player.c$248$1_0$175	= .
                                    710 	.globl	C$player.c$248$1_0$175
                           000251   711 	XFplayer$retrieve_input$0$0	= .
                                    712 	.globl	XFplayer$retrieve_input$0$0
      000251 C9                     713 	ret
                           000252   714 	Fplayer$calculate_physics$0$0	= .
                                    715 	.globl	Fplayer$calculate_physics$0$0
                           000252   716 	C$player.c$250$1_0$186	= .
                                    717 	.globl	C$player.c$250$1_0$186
                                    718 ;src/player.c:250: static void calculate_physics(void){
                                    719 ;	---------------------------------
                                    720 ; Function calculate_physics
                                    721 ; ---------------------------------
      000252                        722 _calculate_physics:
      000252 E8 FD                  723 	add	sp, #-3
                           000254   724 	C$player.c$255$1_0$186	= .
                                    725 	.globl	C$player.c$255$1_0$186
                                    726 ;src/player.c:255: player_x = is_facing_right ? player_x + (x_speed >> PHYSICS_DAMPNER) /*+ (x_force >> 2)*/ : player_x - (x_speed >> PHYSICS_DAMPNER) /*- (x_force >> 2)*/;
      000254 21r07r00               727 	ld	hl, #_x_speed
      000257 4E                     728 	ld	c, (hl)
      000258 CB 39                  729 	srl	c
      00025A CB 39                  730 	srl	c
      00025C 21r08r00               731 	ld	hl, #_is_facing_right
      00025F CB 46                  732 	bit	0, (hl)
      000261 28 06                  733 	jr	Z, 00111$
      000263 FAr0Cr00               734 	ld	a, (#_player_x)
      000266 81                     735 	add	a, c
      000267 18 04                  736 	jr	00112$
      000269                        737 00111$:
      000269 FAr0Cr00               738 	ld	a, (#_player_x)
      00026C 91                     739 	sub	a, c
      00026D                        740 00112$:
      00026D 21r0Cr00               741 	ld	hl, #_player_x
                           000270   742 	C$player.c$256$1_0$186	= .
                                    743 	.globl	C$player.c$256$1_0$186
                                    744 ;src/player.c:256: if((uint8_t)(player_x - 10U) > 160U) {
      000270 77                     745 	ld	(hl), a
      000271 C6 F6                  746 	add	a, #0xf6
      000273 4F                     747 	ld	c, a
      000274 3E A0                  748 	ld	a, #0xa0
      000276 91                     749 	sub	a, c
      000277 30 12                  750 	jr	NC, 00105$
                           000279   751 	C$player.c$257$2_0$187	= .
                                    752 	.globl	C$player.c$257$2_0$187
                                    753 ;src/player.c:257: if((uint8_t)(player_x - 10U) < 200) player_x = player_x - 160U; //right exit
      000279 79                     754 	ld	a, c
      00027A D6 C8                  755 	sub	a, #0xc8
      00027C 30 06                  756 	jr	NC, 00102$
      00027E 7E                     757 	ld	a, (hl)
      00027F C6 60                  758 	add	a, #0x60
      000281 77                     759 	ld	(hl), a
      000282 18 07                  760 	jr	00105$
      000284                        761 00102$:
                           000284   762 	C$player.c$258$2_0$187	= .
                                    763 	.globl	C$player.c$258$2_0$187
                                    764 ;src/player.c:258: else player_x = player_x + 160U; //left exit
      000284 21r0Cr00               765 	ld	hl, #_player_x
      000287 7E                     766 	ld	a, (hl)
      000288 C6 A0                  767 	add	a, #0xa0
      00028A 77                     768 	ld	(hl), a
      00028B                        769 00105$:
                           00028B   770 	C$player.c$260$1_0$186	= .
                                    771 	.globl	C$player.c$260$1_0$186
                                    772 ;src/player.c:260: if (x_force)
      00028B FAr06r00               773 	ld	a, (#_x_force)
      00028E B7                     774 	or	a, a
      00028F 28 19                  775 	jr	Z, 00107$
                           000291   776 	C$player.c$263$2_0$188	= .
                                    777 	.globl	C$player.c$263$2_0$188
                                    778 ;src/player.c:263: x_speed = x_speed >= clamp_x_velocity ? clamp_x_velocity : x_speed + x_force;
      000291 21rCBr00               779 	ld	hl, #_clamp_x_velocity
      000294 4E                     780 	ld	c, (hl)
      000295 FAr07r00               781 	ld	a, (#_x_speed)
      000298 91                     782 	sub	a, c
      000299 38 03                  783 	jr	C, 00113$
      00029B 79                     784 	ld	a, c
      00029C 18 07                  785 	jr	00114$
      00029E                        786 00113$:
      00029E FAr07r00               787 	ld	a, (#_x_speed)
      0002A1 21r06r00               788 	ld	hl, #_x_force
      0002A4 86                     789 	add	a, (hl)
      0002A5                        790 00114$:
      0002A5 EAr07r00               791 	ld	(#_x_speed),a
      0002A8 18 23                  792 	jr	00108$
      0002AA                        793 00107$:
                           0002AA   794 	C$player.c$268$2_0$189	= .
                                    795 	.globl	C$player.c$268$2_0$189
                                    796 ;src/player.c:268: x_speed = x_speed <= 0 ? 0 : MAX(0, x_speed - impulse);
      0002AA FAr07r00               797 	ld	a, (#_x_speed)
      0002AD B7                     798 	or	a,a
                                    799 ;	spillPairReg hl
                                    800 ;	spillPairReg hl
      0002AE 28 1A                  801 	jr	Z, 00116$
      0002B0 FAr07r00               802 	ld	a, (#_x_speed)
      0002B3 1E 00                  803 	ld	e, #0x00
      0002B5 21rC9r00               804 	ld	hl, #_impulse
      0002B8 4E                     805 	ld	c, (hl)
      0002B9 69                     806 	ld	l, c
                                    807 ;	spillPairReg hl
                                    808 ;	spillPairReg hl
      0002BA 26 00                  809 	ld	h, #0x00
                                    810 ;	spillPairReg hl
                                    811 ;	spillPairReg hl
      0002BC 95                     812 	sub	a, l
      0002BD 7B                     813 	ld	a, e
      0002BE 9C                     814 	sbc	a, h
                                    815 ;	spillPairReg hl
                                    816 ;	spillPairReg hl
      0002BF CB 7F                  817 	bit	7,a
      0002C1 28 03                  818 	jr	Z, 00117$
      0002C3 AF                     819 	xor	a, a
                                    820 ;	spillPairReg hl
                                    821 ;	spillPairReg hl
      0002C4 18 04                  822 	jr	00118$
      0002C6                        823 00117$:
      0002C6 FAr07r00               824 	ld	a, (#_x_speed)
      0002C9 91                     825 	sub	a, c
                                    826 ;	spillPairReg hl
                                    827 ;	spillPairReg hl
      0002CA                        828 00118$:
      0002CA                        829 00116$:
      0002CA EAr07r00               830 	ld	(_x_speed), a
      0002CD                        831 00108$:
                           0002CD   832 	C$player.c$271$1_0$186	= .
                                    833 	.globl	C$player.c$271$1_0$186
                                    834 ;src/player.c:271: player_y += (y_speed >> (PHYSICS_DAMPNER + 1)) + ((is_jumping ? jump_g : fall_g) >> 2);
      0002CD 21r0Br00               835 	ld	hl, #_y_speed
      0002D0 4E                     836 	ld	c, (hl)
      0002D1 CB 29                  837 	sra	c
      0002D3 CB 29                  838 	sra	c
      0002D5 CB 29                  839 	sra	c
      0002D7 FArC7r00               840 	ld	a, (#_jump_g)
      0002DA F8 00                  841 	ldhl	sp,	#0
      0002DC 77                     842 	ld	(hl), a
      0002DD FArC8r00               843 	ld	a, (#_fall_g)
      0002E0 F8 02                  844 	ldhl	sp,	#2
      0002E2 77                     845 	ld	(hl), a
      0002E3 21r0Ar00               846 	ld	hl, #_is_jumping
      0002E6 CB 46                  847 	bit	0, (hl)
      0002E8 28 05                  848 	jr	Z, 00119$
      0002EA F8 00                  849 	ldhl	sp,	#0
      0002EC 7E                     850 	ld	a, (hl)
      0002ED 18 03                  851 	jr	00120$
      0002EF                        852 00119$:
      0002EF F8 02                  853 	ldhl	sp,	#2
      0002F1 7E                     854 	ld	a, (hl)
      0002F2                        855 00120$:
      0002F2 0F                     856 	rrca
      0002F3 0F                     857 	rrca
      0002F4 E6 3F                  858 	and	a, #0x3f
      0002F6 81                     859 	add	a, c
      0002F7 21r0Dr00               860 	ld	hl, #_player_y
      0002FA 4E                     861 	ld	c, (hl)
      0002FB 81                     862 	add	a, c
      0002FC 77                     863 	ld	(hl), a
                           0002FD   864 	C$player.c$274$1_0$186	= .
                                    865 	.globl	C$player.c$274$1_0$186
                                    866 ;src/player.c:274: y_speed = y_speed >= clamp_y_velocity ? clamp_y_velocity : y_speed + (is_jumping ? jump_g : fall_g);
      0002FD FArCCr00               867 	ld	a, (#_clamp_y_velocity)
      000300 F8 01                  868 	ldhl	sp,	#1
      000302 77                     869 	ld	(hl), a
      000303 5E                     870 	ld	e, (hl)
      000304 FAr0Br00               871 	ld	a, (#_y_speed)
      000307 57                     872 	ld	d,a
      000308 F8 01                  873 	ldhl	sp,	#1
      00030A 96                     874 	sub	a, (hl)
      00030B CB 7B                  875 	bit	7, e
      00030D 28 07                  876 	jr	Z, 00175$
      00030F CB 7A                  877 	bit	7, d
      000311 20 08                  878 	jr	NZ, 00176$
      000313 BF                     879 	cp	a, a
      000314 18 05                  880 	jr	00176$
      000316                        881 00175$:
      000316 CB 7A                  882 	bit	7, d
      000318 28 01                  883 	jr	Z, 00176$
      00031A 37                     884 	scf
      00031B                        885 00176$:
      00031B 38 05                  886 	jr	C, 00121$
      00031D F8 01                  887 	ldhl	sp,	#1
      00031F 7E                     888 	ld	a, (hl)
      000320 18 13                  889 	jr	00122$
      000322                        890 00121$:
      000322 21r0Ar00               891 	ld	hl, #_is_jumping
      000325 CB 46                  892 	bit	0, (hl)
      000327 28 05                  893 	jr	Z, 00123$
      000329 F8 00                  894 	ldhl	sp,	#0
      00032B 2A                     895 	ld	a, (hl+)
      00032C 23                     896 	inc	hl
      00032D 77                     897 	ld	(hl), a
      00032E                        898 00123$:
      00032E F8 02                  899 	ldhl	sp,	#2
      000330 7E                     900 	ld	a, (hl)
      000331 21r0Br00               901 	ld	hl, #_y_speed
      000334 86                     902 	add	a, (hl)
      000335                        903 00122$:
      000335 EAr0Br00               904 	ld	(#_y_speed),a
                           000338   905 	C$player.c$275$1_0$186	= .
                                    906 	.globl	C$player.c$275$1_0$186
                                    907 ;src/player.c:275: }
      000338 E8 03                  908 	add	sp, #3
                           00033A   909 	C$player.c$275$1_0$186	= .
                                    910 	.globl	C$player.c$275$1_0$186
                           00033A   911 	XFplayer$calculate_physics$0$0	= .
                                    912 	.globl	XFplayer$calculate_physics$0$0
      00033A C9                     913 	ret
                           00033B   914 	Fplayer$render_player$0$0	= .
                                    915 	.globl	Fplayer$render_player$0$0
                           00033B   916 	C$player.c$277$1_0$191	= .
                                    917 	.globl	C$player.c$277$1_0$191
                                    918 ;src/player.c:277: static void render_player(void){
                                    919 ;	---------------------------------
                                    920 ; Function render_player
                                    921 ; ---------------------------------
      00033B                        922 _render_player:
      00033B E8 F8                  923 	add	sp, #-8
                           00033D   924 	C$player.c$281$1_0$191	= .
                                    925 	.globl	C$player.c$281$1_0$191
                                    926 ;src/player.c:281: if(!player_dead_flag && (uint8_t)(player_y - camera_y) > 160U) {
      00033D FAr0Dr00               927 	ld	a, (#_player_y)
      000340 21r00r00               928 	ld	hl, #_camera_y
      000343 96                     929 	sub	a, (hl)
      000344 F8 07                  930 	ldhl	sp,	#7
      000346 77                     931 	ld	(hl), a
      000347 21r00r00               932 	ld	hl, #_player_dead_flag
      00034A CB 46                  933 	bit	0, (hl)
      00034C 20 15                  934 	jr	NZ, 00102$
      00034E 3E A0                  935 	ld	a, #0xa0
      000350 F8 07                  936 	ldhl	sp,	#7
      000352 96                     937 	sub	a, (hl)
      000353 30 0E                  938 	jr	NC, 00102$
                           000355   939 	C$player.c$282$2_0$192	= .
                                    940 	.globl	C$player.c$282$2_0$192
                                    941 ;src/player.c:282: player_dead_flag = true;
      000355 21r00r00               942 	ld	hl, #_player_dead_flag
      000358 36 01                  943 	ld	(hl), #0x01
                           00035A   944 	C$player.c$283$2_0$192	= .
                                    945 	.globl	C$player.c$283$2_0$192
                                    946 ;src/player.c:283: calculate_final_score();
      00035A CDr07r0F               947 	call	_calculate_final_score
                           00035D   948 	C$player.c$284$2_0$192	= .
                                    949 	.globl	C$player.c$284$2_0$192
                                    950 ;src/player.c:284: stop_sfx();
      00035D CDr00r00               951 	call	_stop_sfx
                           000360   952 	C$player.c$285$2_0$192	= .
                                    953 	.globl	C$player.c$285$2_0$192
                                    954 ;src/player.c:285: return;
      000360 C3r8Er05               955 	jp	00127$
      000363                        956 00102$:
                           000363   957 	C$player.c$288$1_0$191	= .
                                    958 	.globl	C$player.c$288$1_0$191
                                    959 ;src/player.c:288: hide_metasprite(metasprites_states[current_state][current_frame], 0);
      000363 21r10r00               960 	ld	hl, #_current_state
      000366 46                     961 	ld	b, (hl)
      000367 1E 00                  962 	ld	e, #0x00
      000369 FAr02r00               963 	ld	a, (#_current_frame)
      00036C 0E 00                  964 	ld	c, #0x00
      00036E CB 20                  965 	sla	b
      000370 CB 13                  966 	rl	e
      000372 F8 00                  967 	ldhl	sp,	#0
      000374 70                     968 	ld	(hl), b
      000375 23                     969 	inc	hl
      000376 73                     970 	ld	(hl), e
      000377 23                     971 	inc	hl
      000378 87                     972 	add	a, a
      000379 CB 11                  973 	rl	c
      00037B 22                     974 	ld	(hl+), a
      00037C 71                     975 	ld	(hl), c
                           00037D   976 	C$player.c$287$1_0$191	= .
                                    977 	.globl	C$player.c$287$1_0$191
                                    978 ;src/player.c:287: if(current_state == PLAYER_STATE_HURT && (frame_counter & 0x02)){
      00037D FAr10r00               979 	ld	a, (#_current_state)
      000380 D6 04                  980 	sub	a, #0x04
      000382 20 58                  981 	jr	NZ, 00107$
      000384 FAr01r00               982 	ld	a, (#_frame_counter)
      000387 CB 4F                  983 	bit	1, a
      000389 28 51                  984 	jr	Z, 00107$
                                    985 ;src/player.c:288: hide_metasprite(metasprites_states[current_state][current_frame], 0);
      00038B 11r00r00               986 	ld	de, #_metasprites_states
      00038E E1                     987 	pop	hl
      00038F E5                     988 	push	hl
      000390 19                     989 	add	hl, de
      000391 2A                     990 	ld	a, (hl+)
      000392 4F                     991 	ld	c, a
      000393 46                     992 	ld	b, (hl)
      000394 F8 02                  993 	ldhl	sp,	#2
      000396 2A                     994 	ld	a,	(hl+)
      000397 66                     995 	ld	h, (hl)
      000398 6F                     996 	ld	l, a
      000399 09                     997 	add	hl, bc
      00039A 2A                     998 	ld	a, (hl+)
      00039B 4F                     999 	ld	c, a
      00039C 7E                    1000 	ld	a, (hl)
                                   1001 ;C:/gbdk/include/gb/metasprites.h:241: __current_metasprite = metasprite;
      00039D 21r00r00              1002 	ld	hl, #___current_metasprite
      0003A0 71                    1003 	ld	(hl), c
      0003A1 23                    1004 	inc	hl
      0003A2 77                    1005 	ld	(hl), a
                                   1006 ;C:/gbdk/include/gb/metasprites.h:242: __hide_metasprite(base_sprite);
      0003A3 AF                    1007 	xor	a, a
      0003A4 F5                    1008 	push	af
      0003A5 33                    1009 	inc	sp
      0003A6 CDr00r00              1010 	call	___hide_metasprite
      0003A9 33                    1011 	inc	sp
                                   1012 ;src/player.c:289: hide_metasprite(metasprites_states[current_state][current_frame], 4);
      0003AA 21r10r00              1013 	ld	hl, #_current_state
      0003AD 6E                    1014 	ld	l, (hl)
                                   1015 ;	spillPairReg hl
                                   1016 ;	spillPairReg hl
      0003AE 26 00                 1017 	ld	h, #0x00
                                   1018 ;	spillPairReg hl
                                   1019 ;	spillPairReg hl
      0003B0 29                    1020 	add	hl, hl
      0003B1 11r00r00              1021 	ld	de, #_metasprites_states
      0003B4 19                    1022 	add	hl, de
      0003B5 2A                    1023 	ld	a, (hl+)
      0003B6 4F                    1024 	ld	c, a
      0003B7 46                    1025 	ld	b, (hl)
      0003B8 21r02r00              1026 	ld	hl, #_current_frame
      0003BB 6E                    1027 	ld	l, (hl)
                                   1028 ;	spillPairReg hl
                                   1029 ;	spillPairReg hl
      0003BC 26 00                 1030 	ld	h, #0x00
                                   1031 ;	spillPairReg hl
                                   1032 ;	spillPairReg hl
      0003BE 29                    1033 	add	hl, hl
      0003BF 09                    1034 	add	hl, bc
      0003C0 2A                    1035 	ld	a, (hl+)
      0003C1 4E                    1036 	ld	c, (hl)
                                   1037 ;C:/gbdk/include/gb/metasprites.h:241: __current_metasprite = metasprite;
      0003C2 21r00r00              1038 	ld	hl, #___current_metasprite
      0003C5 22                    1039 	ld	(hl+), a
      0003C6 71                    1040 	ld	(hl), c
                                   1041 ;C:/gbdk/include/gb/metasprites.h:242: __hide_metasprite(base_sprite);
      0003C7 3E 04                 1042 	ld	a, #0x04
      0003C9 F5                    1043 	push	af
      0003CA 33                    1044 	inc	sp
      0003CB CDr00r00              1045 	call	___hide_metasprite
      0003CE 33                    1046 	inc	sp
                           0003CF  1047 	C$player.c$290$2_0$193	= .
                                   1048 	.globl	C$player.c$290$2_0$193
                                   1049 ;src/player.c:290: if(frame_counter & 0x01)play_hurt_sfx();
      0003CF FAr01r00              1050 	ld	a, (#_frame_counter)
      0003D2 0F                    1051 	rrca
      0003D3 D2r8Er05              1052 	jp	NC,00127$
      0003D6 CDr00r00              1053 	call	_play_hurt_sfx
                           0003D9  1054 	C$player.c$291$2_0$193	= .
                                   1055 	.globl	C$player.c$291$2_0$193
                                   1056 ;src/player.c:291: return;
      0003D9 C3r8Er05              1057 	jp	00127$
      0003DC                       1058 00107$:
                           0003DC  1059 	C$player.c$294$1_0$191	= .
                                   1060 	.globl	C$player.c$294$1_0$191
                                   1061 ;src/player.c:294: is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, SPR_NUM_START, player_x, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, SPR_NUM_START, player_x, (uint8_t)(player_y - camera_y));
      0003DC FAr0Cr00              1062 	ld	a, (#_player_x)
      0003DF F8 04                 1063 	ldhl	sp,	#4
      0003E1 77                    1064 	ld	(hl), a
      0003E2 21r08r00              1065 	ld	hl, #_is_facing_right
      0003E5 CB 46                 1066 	bit	0, (hl)
      0003E7 28 2F                 1067 	jr	Z, 00129$
      0003E9 11r00r00              1068 	ld	de, #_metasprites_states
      0003EC E1                    1069 	pop	hl
      0003ED E5                    1070 	push	hl
      0003EE 19                    1071 	add	hl, de
      0003EF 2A                    1072 	ld	a, (hl+)
      0003F0 4F                    1073 	ld	c, a
      0003F1 46                    1074 	ld	b, (hl)
      0003F2 F8 02                 1075 	ldhl	sp,	#2
      0003F4 2A                    1076 	ld	a,	(hl+)
      0003F5 66                    1077 	ld	h, (hl)
      0003F6 6F                    1078 	ld	l, a
      0003F7 09                    1079 	add	hl, bc
      0003F8 2A                    1080 	ld	a, (hl+)
      0003F9 4F                    1081 	ld	c, a
      0003FA 46                    1082 	ld	b, (hl)
                                   1083 ;C:/gbdk/include/gb/metasprites.h:138: __current_metasprite = metasprite;
      0003FB 21r00r00              1084 	ld	hl, #___current_metasprite
      0003FE 79                    1085 	ld	a, c
      0003FF 22                    1086 	ld	(hl+), a
      000400 70                    1087 	ld	(hl), b
                                   1088 ;C:/gbdk/include/gb/metasprites.h:139: __current_base_tile = base_tile;
      000401 21r00r00              1089 	ld	hl, #___current_base_tile
      000404 36 00                 1090 	ld	(hl), #0x00
                                   1091 ;C:/gbdk/include/gb/metasprites.h:140: return __move_metasprite(base_sprite, x, y);
      000406 F8 07                 1092 	ldhl	sp,	#7
      000408 7E                    1093 	ld	a, (hl)
      000409 F5                    1094 	push	af
      00040A 33                    1095 	inc	sp
      00040B F8 05                 1096 	ldhl	sp,	#5
      00040D 66                    1097 	ld	h, (hl)
      00040E 2E 00                 1098 	ld	l, #0x00
      000410 E5                    1099 	push	hl
      000411 CDr00r00              1100 	call	___move_metasprite
      000414 E8 03                 1101 	add	sp, #3
                           000416  1102 	C$player.c$294$3_0$204	= .
                                   1103 	.globl	C$player.c$294$3_0$204
                                   1104 ;src/player.c:294: is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, SPR_NUM_START, player_x, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, SPR_NUM_START, player_x, (uint8_t)(player_y - camera_y));
      000416 18 46                 1105 	jr	00130$
      000418                       1106 00129$:
      000418 F8 07                 1107 	ldhl	sp,	#7
      00041A 3A                    1108 	ld	a, (hl-)
      00041B 2B                    1109 	dec	hl
      00041C 77                    1110 	ld	(hl), a
      00041D 11r00r00              1111 	ld	de, #_metasprites_states
      000420 E1                    1112 	pop	hl
      000421 E5                    1113 	push	hl
      000422 19                    1114 	add	hl, de
      000423 E5                    1115 	push	hl
      000424 7D                    1116 	ld	a, l
      000425 F8 08                 1117 	ldhl	sp,	#8
      000427 77                    1118 	ld	(hl), a
      000428 E1                    1119 	pop	hl
      000429 7C                    1120 	ld	a, h
      00042A F8 07                 1121 	ldhl	sp,	#7
      00042C 32                    1122 	ld	(hl-), a
      00042D 2A                    1123 	ld	a, (hl+)
      00042E 5F                    1124 	ld	e, a
      00042F 3A                    1125 	ld	a, (hl-)
      000430 57                    1126 	ld	d, a
      000431 1A                    1127 	ld	a, (de)
      000432 22                    1128 	ld	(hl+), a
      000433 13                    1129 	inc	de
      000434 1A                    1130 	ld	a, (de)
      000435 32                    1131 	ld	(hl-), a
      000436 2A                    1132 	ld	a, (hl+)
      000437 5F                    1133 	ld	e, a
      000438 56                    1134 	ld	d, (hl)
      000439 F8 02                 1135 	ldhl	sp,	#2
      00043B 2A                    1136 	ld	a,	(hl+)
      00043C 66                    1137 	ld	h, (hl)
      00043D 6F                    1138 	ld	l, a
      00043E 19                    1139 	add	hl, de
      00043F 2A                    1140 	ld	a, (hl+)
      000440 4F                    1141 	ld	c, a
      000441 7E                    1142 	ld	a, (hl)
                                   1143 ;C:/gbdk/include/gb/metasprites.h:167: __current_metasprite = metasprite;
      000442 21r00r00              1144 	ld	hl, #___current_metasprite
      000445 71                    1145 	ld	(hl), c
      000446 23                    1146 	inc	hl
      000447 77                    1147 	ld	(hl), a
                                   1148 ;C:/gbdk/include/gb/metasprites.h:168: __current_base_tile = base_tile;
      000448 21r00r00              1149 	ld	hl, #___current_base_tile
      00044B 36 00                 1150 	ld	(hl), #0x00
                                   1151 ;C:/gbdk/include/gb/metasprites.h:169: return __move_metasprite_vflip(base_sprite, x - 8, y);
      00044D F8 04                 1152 	ldhl	sp,	#4
      00044F 2A                    1153 	ld	a, (hl+)
      000450 C6 F8                 1154 	add	a, #0xf8
      000452 66                    1155 	ld	h, (hl)
                                   1156 ;	spillPairReg hl
                                   1157 ;	spillPairReg hl
      000453 E5                    1158 	push	hl
      000454 33                    1159 	inc	sp
      000455 67                    1160 	ld	h, a
      000456 2E 00                 1161 	ld	l, #0x00
      000458 E5                    1162 	push	hl
      000459 CDr00r00              1163 	call	___move_metasprite_vflip
      00045C E8 03                 1164 	add	sp, #3
                           00045E  1165 	C$player.c$294$3_0$207	= .
                                   1166 	.globl	C$player.c$294$3_0$207
                                   1167 ;src/player.c:294: is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, SPR_NUM_START, player_x, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, SPR_NUM_START, player_x, (uint8_t)(player_y - camera_y));
      00045E                       1168 00130$:
                           00045E  1169 	C$player.c$288$1_0$191	= .
                                   1170 	.globl	C$player.c$288$1_0$191
                                   1171 ;src/player.c:288: hide_metasprite(metasprites_states[current_state][current_frame], 0);
      00045E 21r10r00              1172 	ld	hl, #_current_state
      000461 5E                    1173 	ld	e, (hl)
      000462 16 00                 1174 	ld	d, #0x00
      000464 21r02r00              1175 	ld	hl, #_current_frame
      000467 6E                    1176 	ld	l, (hl)
                                   1177 ;	spillPairReg hl
                                   1178 ;	spillPairReg hl
      000468 26 00                 1179 	ld	h, #0x00
                                   1180 ;	spillPairReg hl
                                   1181 ;	spillPairReg hl
      00046A CB 23                 1182 	sla	e
      00046C CB 12                 1183 	rl	d
      00046E 29                    1184 	add	hl, hl
      00046F 4D                    1185 	ld	c, l
      000470 44                    1186 	ld	b, h
                           000471  1187 	C$player.c$295$1_0$191	= .
                                   1188 	.globl	C$player.c$295$1_0$191
                                   1189 ;src/player.c:295: if((uint8_t)(player_x) > 160U) {
      000471 3E A0                 1190 	ld	a, #0xa0
      000473 21r0Cr00              1191 	ld	hl, #_player_x
      000476 96                    1192 	sub	a, (hl)
      000477 D2r5Ar05              1193 	jp	NC, 00113$
                           00047A  1194 	C$player.c$281$1_0$191	= .
                                   1195 	.globl	C$player.c$281$1_0$191
                                   1196 ;src/player.c:281: if(!player_dead_flag && (uint8_t)(player_y - camera_y) > 160U) {
      00047A FAr0Dr00              1197 	ld	a, (#_player_y)
      00047D 21r00r00              1198 	ld	hl, #_camera_y
      000480 96                    1199 	sub	a, (hl)
      000481 F8 06                 1200 	ldhl	sp,	#6
      000483 77                    1201 	ld	(hl), a
                           000484  1202 	C$player.c$296$1_0$191	= .
                                   1203 	.globl	C$player.c$296$1_0$191
                                   1204 ;src/player.c:296: if((uint8_t)(player_x) < 200) is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x - 160U, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x - 160, (uint8_t)(player_y - camera_y)); //right exit
      000484 FAr0Cr00              1205 	ld	a, (#_player_x)
      000487 F8 07                 1206 	ldhl	sp,	#7
      000489 77                    1207 	ld	(hl), a
      00048A FAr0Cr00              1208 	ld	a, (#_player_x)
      00048D D6 C8                 1209 	sub	a, #0xc8
      00048F 30 65                 1210 	jr	NC, 00110$
      000491 21r08r00              1211 	ld	hl, #_is_facing_right
      000494 CB 46                 1212 	bit	0, (hl)
      000496 28 31                 1213 	jr	Z, 00131$
      000498 F8 06                 1214 	ldhl	sp,	#6
      00049A 2A                    1215 	ld	a, (hl+)
      00049B 77                    1216 	ld	(hl), a
      00049C FAr0Cr00              1217 	ld	a, (#_player_x)
      00049F C6 60                 1218 	add	a, #0x60
      0004A1 F8 06                 1219 	ldhl	sp,	#6
      0004A3 77                    1220 	ld	(hl), a
      0004A4 21r00r00              1221 	ld	hl, #_metasprites_states
      0004A7 19                    1222 	add	hl, de
      0004A8 2A                    1223 	ld	a, (hl+)
      0004A9 66                    1224 	ld	h, (hl)
                                   1225 ;	spillPairReg hl
      0004AA 6F                    1226 	ld	l, a
      0004AB 09                    1227 	add	hl, bc
      0004AC 2A                    1228 	ld	a, (hl+)
      0004AD 4E                    1229 	ld	c, (hl)
                                   1230 ;C:/gbdk/include/gb/metasprites.h:138: __current_metasprite = metasprite;
      0004AE 21r00r00              1231 	ld	hl, #___current_metasprite
      0004B1 22                    1232 	ld	(hl+), a
      0004B2 71                    1233 	ld	(hl), c
                                   1234 ;C:/gbdk/include/gb/metasprites.h:139: __current_base_tile = base_tile;
      0004B3 21r00r00              1235 	ld	hl, #___current_base_tile
      0004B6 36 00                 1236 	ld	(hl), #0x00
                                   1237 ;C:/gbdk/include/gb/metasprites.h:140: return __move_metasprite(base_sprite, x, y);
      0004B8 F8 07                 1238 	ldhl	sp,	#7
      0004BA 3A                    1239 	ld	a, (hl-)
      0004BB F5                    1240 	push	af
      0004BC 33                    1241 	inc	sp
      0004BD 66                    1242 	ld	h, (hl)
      0004BE 2E 04                 1243 	ld	l, #0x04
      0004C0 E5                    1244 	push	hl
      0004C1 CDr00r00              1245 	call	___move_metasprite
      0004C4 E8 03                 1246 	add	sp, #3
                           0004C6  1247 	C$player.c$296$4_0$210	= .
                                   1248 	.globl	C$player.c$296$4_0$210
                                   1249 ;src/player.c:296: if((uint8_t)(player_x) < 200) is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x - 160U, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x - 160, (uint8_t)(player_y - camera_y)); //right exit
      0004C6 C3r71r05              1250 	jp	00114$
      0004C9                       1251 00131$:
      0004C9 F8 07                 1252 	ldhl	sp,	#7
      0004CB 7E                    1253 	ld	a, (hl)
      0004CC C6 60                 1254 	add	a, #0x60
      0004CE 77                    1255 	ld	(hl), a
      0004CF 21r00r00              1256 	ld	hl, #_metasprites_states
      0004D2 19                    1257 	add	hl, de
      0004D3 2A                    1258 	ld	a, (hl+)
      0004D4 66                    1259 	ld	h, (hl)
                                   1260 ;	spillPairReg hl
      0004D5 6F                    1261 	ld	l, a
      0004D6 09                    1262 	add	hl, bc
      0004D7 2A                    1263 	ld	a, (hl+)
      0004D8 4E                    1264 	ld	c, (hl)
                                   1265 ;C:/gbdk/include/gb/metasprites.h:167: __current_metasprite = metasprite;
      0004D9 21r00r00              1266 	ld	hl, #___current_metasprite
      0004DC 22                    1267 	ld	(hl+), a
      0004DD 71                    1268 	ld	(hl), c
                                   1269 ;C:/gbdk/include/gb/metasprites.h:168: __current_base_tile = base_tile;
      0004DE 21r00r00              1270 	ld	hl, #___current_base_tile
      0004E1 36 00                 1271 	ld	(hl), #0x00
                                   1272 ;C:/gbdk/include/gb/metasprites.h:169: return __move_metasprite_vflip(base_sprite, x - 8, y);
      0004E3 F8 07                 1273 	ldhl	sp,	#7
      0004E5 3A                    1274 	ld	a, (hl-)
      0004E6 C6 F8                 1275 	add	a, #0xf8
      0004E8 66                    1276 	ld	h, (hl)
                                   1277 ;	spillPairReg hl
                                   1278 ;	spillPairReg hl
      0004E9 E5                    1279 	push	hl
      0004EA 33                    1280 	inc	sp
      0004EB 67                    1281 	ld	h, a
      0004EC 2E 04                 1282 	ld	l, #0x04
      0004EE E5                    1283 	push	hl
      0004EF CDr00r00              1284 	call	___move_metasprite_vflip
      0004F2 E8 03                 1285 	add	sp, #3
                           0004F4  1286 	C$player.c$296$2_0$194	= .
                                   1287 	.globl	C$player.c$296$2_0$194
                                   1288 ;src/player.c:296: if((uint8_t)(player_x) < 200) is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x - 160U, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x - 160, (uint8_t)(player_y - camera_y)); //right exit
      0004F4 18 7B                 1289 	jr	00114$
      0004F6                       1290 00110$:
                           0004F6  1291 	C$player.c$297$2_0$194	= .
                                   1292 	.globl	C$player.c$297$2_0$194
                                   1293 ;src/player.c:297: else is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x + 160U, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x + 160, (uint8_t)(player_y - camera_y)); //left exit
      0004F6 21r08r00              1294 	ld	hl, #_is_facing_right
      0004F9 CB 46                 1295 	bit	0, (hl)
      0004FB 28 30                 1296 	jr	Z, 00133$
      0004FD F8 06                 1297 	ldhl	sp,	#6
      0004FF 2A                    1298 	ld	a, (hl+)
      000500 77                    1299 	ld	(hl), a
      000501 FAr0Cr00              1300 	ld	a, (#_player_x)
      000504 C6 A0                 1301 	add	a, #0xa0
      000506 F8 06                 1302 	ldhl	sp,	#6
      000508 77                    1303 	ld	(hl), a
      000509 21r00r00              1304 	ld	hl, #_metasprites_states
      00050C 19                    1305 	add	hl, de
      00050D 2A                    1306 	ld	a, (hl+)
      00050E 66                    1307 	ld	h, (hl)
                                   1308 ;	spillPairReg hl
      00050F 6F                    1309 	ld	l, a
      000510 09                    1310 	add	hl, bc
      000511 2A                    1311 	ld	a, (hl+)
      000512 4E                    1312 	ld	c, (hl)
                                   1313 ;C:/gbdk/include/gb/metasprites.h:138: __current_metasprite = metasprite;
      000513 21r00r00              1314 	ld	hl, #___current_metasprite
      000516 22                    1315 	ld	(hl+), a
      000517 71                    1316 	ld	(hl), c
                                   1317 ;C:/gbdk/include/gb/metasprites.h:139: __current_base_tile = base_tile;
      000518 21r00r00              1318 	ld	hl, #___current_base_tile
      00051B 36 00                 1319 	ld	(hl), #0x00
                                   1320 ;C:/gbdk/include/gb/metasprites.h:140: return __move_metasprite(base_sprite, x, y);
      00051D F8 07                 1321 	ldhl	sp,	#7
      00051F 3A                    1322 	ld	a, (hl-)
      000520 F5                    1323 	push	af
      000521 33                    1324 	inc	sp
      000522 66                    1325 	ld	h, (hl)
      000523 2E 04                 1326 	ld	l, #0x04
      000525 E5                    1327 	push	hl
      000526 CDr00r00              1328 	call	___move_metasprite
      000529 E8 03                 1329 	add	sp, #3
                           00052B  1330 	C$player.c$297$4_0$216	= .
                                   1331 	.globl	C$player.c$297$4_0$216
                                   1332 ;src/player.c:297: else is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x + 160U, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x + 160, (uint8_t)(player_y - camera_y)); //left exit
      00052B 18 44                 1333 	jr	00114$
      00052D                       1334 00133$:
      00052D F8 07                 1335 	ldhl	sp,	#7
      00052F 7E                    1336 	ld	a, (hl)
      000530 C6 A0                 1337 	add	a, #0xa0
      000532 77                    1338 	ld	(hl), a
      000533 21r00r00              1339 	ld	hl, #_metasprites_states
      000536 19                    1340 	add	hl, de
      000537 2A                    1341 	ld	a, (hl+)
      000538 66                    1342 	ld	h, (hl)
                                   1343 ;	spillPairReg hl
      000539 6F                    1344 	ld	l, a
      00053A 09                    1345 	add	hl, bc
      00053B 2A                    1346 	ld	a, (hl+)
      00053C 4E                    1347 	ld	c, (hl)
                                   1348 ;C:/gbdk/include/gb/metasprites.h:167: __current_metasprite = metasprite;
      00053D 21r00r00              1349 	ld	hl, #___current_metasprite
      000540 22                    1350 	ld	(hl+), a
      000541 71                    1351 	ld	(hl), c
                                   1352 ;C:/gbdk/include/gb/metasprites.h:168: __current_base_tile = base_tile;
      000542 21r00r00              1353 	ld	hl, #___current_base_tile
      000545 36 00                 1354 	ld	(hl), #0x00
                                   1355 ;C:/gbdk/include/gb/metasprites.h:169: return __move_metasprite_vflip(base_sprite, x - 8, y);
      000547 F8 07                 1356 	ldhl	sp,	#7
      000549 3A                    1357 	ld	a, (hl-)
      00054A C6 F8                 1358 	add	a, #0xf8
      00054C 66                    1359 	ld	h, (hl)
                                   1360 ;	spillPairReg hl
                                   1361 ;	spillPairReg hl
      00054D E5                    1362 	push	hl
      00054E 33                    1363 	inc	sp
      00054F 67                    1364 	ld	h, a
      000550 2E 04                 1365 	ld	l, #0x04
      000552 E5                    1366 	push	hl
      000553 CDr00r00              1367 	call	___move_metasprite_vflip
      000556 E8 03                 1368 	add	sp, #3
                           000558  1369 	C$player.c$297$1_0$191	= .
                                   1370 	.globl	C$player.c$297$1_0$191
                                   1371 ;src/player.c:297: else is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x + 160U, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x + 160, (uint8_t)(player_y - camera_y)); //left exit
      000558 18 17                 1372 	jr	00114$
      00055A                       1373 00113$:
                                   1374 ;src/player.c:299: hide_metasprite(metasprites_states[current_state][current_frame], 4);
      00055A 21r00r00              1375 	ld	hl, #_metasprites_states
      00055D 19                    1376 	add	hl, de
      00055E 2A                    1377 	ld	a, (hl+)
      00055F 66                    1378 	ld	h, (hl)
                                   1379 ;	spillPairReg hl
      000560 6F                    1380 	ld	l, a
      000561 09                    1381 	add	hl, bc
      000562 2A                    1382 	ld	a, (hl+)
      000563 4E                    1383 	ld	c, (hl)
                                   1384 ;C:/gbdk/include/gb/metasprites.h:241: __current_metasprite = metasprite;
      000564 21r00r00              1385 	ld	hl, #___current_metasprite
      000567 22                    1386 	ld	(hl+), a
      000568 71                    1387 	ld	(hl), c
                                   1388 ;C:/gbdk/include/gb/metasprites.h:242: __hide_metasprite(base_sprite);
      000569 3E 04                 1389 	ld	a, #0x04
      00056B F5                    1390 	push	af
      00056C 33                    1391 	inc	sp
      00056D CDr00r00              1392 	call	___hide_metasprite
      000570 33                    1393 	inc	sp
                           000571  1394 	C$player.c$299$1_0$191	= .
                                   1395 	.globl	C$player.c$299$1_0$191
                                   1396 ;src/player.c:299: hide_metasprite(metasprites_states[current_state][current_frame], 4);
      000571                       1397 00114$:
                           000571  1398 	C$player.c$302$1_0$191	= .
                                   1399 	.globl	C$player.c$302$1_0$191
                                   1400 ;src/player.c:302: if((uint8_t)(player_y - camera_y) < MAX_SPRITE_HEIGHT && !player_dead_flag){
      000571 FAr0Dr00              1401 	ld	a, (#_player_y)
      000574 21r00r00              1402 	ld	hl, #_camera_y
      000577 96                    1403 	sub	a, (hl)
      000578 4F                    1404 	ld	c, a
      000579 D6 1A                 1405 	sub	a, #0x1a
      00057B 30 11                 1406 	jr	NC, 00127$
      00057D 21r00r00              1407 	ld	hl, #_player_dead_flag
      000580 CB 46                 1408 	bit	0, (hl)
      000582 20 0A                 1409 	jr	NZ, 00127$
                           000584  1410 	C$player.c$303$2_0$196	= .
                                   1411 	.globl	C$player.c$303$2_0$196
                                   1412 ;src/player.c:303: camera_y -= MAX_SPRITE_HEIGHT - ((uint8_t)(player_y - camera_y));
      000584 3E 1A                 1413 	ld	a, #0x1a
      000586 91                    1414 	sub	a, c
      000587 4F                    1415 	ld	c, a
      000588 21r00r00              1416 	ld	hl, #_camera_y
      00058B 7E                    1417 	ld	a, (hl)
      00058C 91                    1418 	sub	a, c
      00058D 77                    1419 	ld	(hl), a
      00058E                       1420 00127$:
                           00058E  1421 	C$player.c$305$1_0$191	= .
                                   1422 	.globl	C$player.c$305$1_0$191
                                   1423 ;src/player.c:305: }
      00058E E8 08                 1424 	add	sp, #8
                           000590  1425 	C$player.c$305$1_0$191	= .
                                   1426 	.globl	C$player.c$305$1_0$191
                           000590  1427 	XFplayer$render_player$0$0	= .
                                   1428 	.globl	XFplayer$render_player$0$0
      000590 C9                    1429 	ret
                           000591  1430 	Fplayer$render_all_particles$0$0	= .
                                   1431 	.globl	Fplayer$render_all_particles$0$0
                           000591  1432 	C$player.c$307$1_0$225	= .
                                   1433 	.globl	C$player.c$307$1_0$225
                                   1434 ;src/player.c:307: static void render_all_particles(void){
                                   1435 ;	---------------------------------
                                   1436 ; Function render_all_particles
                                   1437 ; ---------------------------------
      000591                       1438 _render_all_particles:
      000591 E8 FA                 1439 	add	sp, #-6
                           000593  1440 	C$player.c$309$2_0$226	= .
                                   1441 	.globl	C$player.c$309$2_0$226
                                   1442 ;src/player.c:309: for(i = 0; i < MAX_PUFF; i++){
      000593 21r04r00              1443 	ld	hl, #_i
      000596 36 00                 1444 	ld	(hl), #0x00
      000598                       1445 00127$:
                           000598  1446 	C$player.c$310$3_0$227	= .
                                   1447 	.globl	C$player.c$310$3_0$227
                                   1448 ;src/player.c:310: if(puff_frame[i] == 0){
      000598 3Er00                 1449 	ld	a, #<(_puff_frame)
      00059A 21r04r00              1450 	ld	hl, #_i
      00059D 86                    1451 	add	a, (hl)
      00059E 4F                    1452 	ld	c, a
      00059F 3Es00                 1453 	ld	a, #>(_puff_frame)
      0005A1 CE 00                 1454 	adc	a, #0x00
      0005A3 47                    1455 	ld	b, a
      0005A4 0A                    1456 	ld	a, (bc)
      0005A5 4F                    1457 	ld	c, a
                           0005A6  1458 	C$player.c$311$1_0$225	= .
                                   1459 	.globl	C$player.c$311$1_0$225
                                   1460 ;src/player.c:311: hide_sprite(FIRST_PUFF + i);
      0005A6 7E                    1461 	ld	a, (hl)
      0005A7 C6 08                 1462 	add	a, #0x08
      0005A9 47                    1463 	ld	b, a
                           0005AA  1464 	C$player.c$310$3_0$227	= .
                                   1465 	.globl	C$player.c$310$3_0$227
                                   1466 ;src/player.c:310: if(puff_frame[i] == 0){
      0005AA 79                    1467 	ld	a, c
      0005AB B7                    1468 	or	a, a
      0005AC 20 0D                 1469 	jr	NZ, 00102$
                                   1470 ;src/player.c:311: hide_sprite(FIRST_PUFF + i);
                                   1471 ;C:/gbdk/include/gb/gb.h:1546: shadow_OAM[nb].y = 0;
      0005AE 11r00r00              1472 	ld	de, #_shadow_OAM+0
      0005B1 68                    1473 	ld	l, b
                                   1474 ;	spillPairReg hl
                                   1475 ;	spillPairReg hl
      0005B2 26 00                 1476 	ld	h, #0x00
                                   1477 ;	spillPairReg hl
                                   1478 ;	spillPairReg hl
      0005B4 29                    1479 	add	hl, hl
      0005B5 29                    1480 	add	hl, hl
      0005B6 19                    1481 	add	hl, de
      0005B7 36 00                 1482 	ld	(hl), #0x00
                           0005B9  1483 	C$player.c$312$4_0$228	= .
                                   1484 	.globl	C$player.c$312$4_0$228
                                   1485 ;src/player.c:312: continue;
      0005B9 18 25                 1486 	jr	00103$
      0005BB                       1487 00102$:
                                   1488 ;src/player.c:314: set_sprite_tile(FIRST_PUFF + i, PLAYER_SPRITES - 1 + (puff_frame[i] >> 2));
      0005BB 79                    1489 	ld	a, c
      0005BC 0F                    1490 	rrca
      0005BD 0F                    1491 	rrca
      0005BE E6 3F                 1492 	and	a, #0x3f
      0005C0 C6 17                 1493 	add	a, #0x17
      0005C2 4F                    1494 	ld	c, a
                                   1495 ;C:/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0005C3 68                    1496 	ld	l, b
                                   1497 ;	spillPairReg hl
                                   1498 ;	spillPairReg hl
      0005C4 26 00                 1499 	ld	h, #0x00
                                   1500 ;	spillPairReg hl
                                   1501 ;	spillPairReg hl
      0005C6 29                    1502 	add	hl, hl
      0005C7 29                    1503 	add	hl, hl
      0005C8 11r00r00              1504 	ld	de, #_shadow_OAM
      0005CB 19                    1505 	add	hl, de
      0005CC 23                    1506 	inc	hl
      0005CD 23                    1507 	inc	hl
      0005CE 71                    1508 	ld	(hl), c
                           0005CF  1509 	C$player.c$315$3_0$227	= .
                                   1510 	.globl	C$player.c$315$3_0$227
                                   1511 ;src/player.c:315: puff_frame[i] = (puff_frame[i] + 1) & 0x0f; //puff_frame[i]++ mod 16 
      0005CF 3Er00                 1512 	ld	a, #<(_puff_frame)
      0005D1 21r04r00              1513 	ld	hl, #_i
      0005D4 86                    1514 	add	a, (hl)
      0005D5 4F                    1515 	ld	c, a
      0005D6 3Es00                 1516 	ld	a, #>(_puff_frame)
      0005D8 CE 00                 1517 	adc	a, #0x00
      0005DA 47                    1518 	ld	b, a
      0005DB 0A                    1519 	ld	a, (bc)
      0005DC 3C                    1520 	inc	a
      0005DD E6 0F                 1521 	and	a, #0x0f
      0005DF 02                    1522 	ld	(bc), a
      0005E0                       1523 00103$:
                           0005E0  1524 	C$player.c$309$2_0$226	= .
                                   1525 	.globl	C$player.c$309$2_0$226
                                   1526 ;src/player.c:309: for(i = 0; i < MAX_PUFF; i++){
      0005E0 21r04r00              1527 	ld	hl, #_i
      0005E3 34                    1528 	inc	(hl)
      0005E4 7E                    1529 	ld	a, (hl)
      0005E5 D6 04                 1530 	sub	a, #0x04
      0005E7 38 AF                 1531 	jr	C, 00127$
                           0005E9  1532 	C$player.c$319$1_0$225	= .
                                   1533 	.globl	C$player.c$319$1_0$225
                                   1534 ;src/player.c:319: if(brick_frame == 0){
      0005E9 FAr18r00              1535 	ld	a, (#_brick_frame)
      0005EC B7                    1536 	or	a, a
      0005ED 20 0A                 1537 	jr	NZ, 00106$
                           0005EF  1538 	C$player.c$320$2_0$229	= .
                                   1539 	.globl	C$player.c$320$2_0$229
                                   1540 ;src/player.c:320: hide_sprites_range(12, 16);
      0005EF 21 0C 10              1541 	ld	hl, #0x100c
      0005F2 E5                    1542 	push	hl
      0005F3 CDr00r00              1543 	call	_hide_sprites_range
      0005F6 E1                    1544 	pop	hl
      0005F7 18 36                 1545 	jr	00107$
      0005F9                       1546 00106$:
                           0005F9  1547 	C$player.c$323$2_0$230	= .
                                   1548 	.globl	C$player.c$323$2_0$230
                                   1549 ;src/player.c:323: brick_frame--;
      0005F9 21r18r00              1550 	ld	hl, #_brick_frame
      0005FC 35                    1551 	dec	(hl)
                                   1552 ;src/player.c:324: scroll_sprite(12, 1, brick_y_speed>>1);
      0005FD 21r19r00              1553 	ld	hl, #_brick_y_speed
      000600 5E                    1554 	ld	e, (hl)
      000601 CB 2B                 1555 	sra	e
                                   1556 ;C:/gbdk/include/gb/gb.h:1536: OAM_item_t * itm = &shadow_OAM[nb];
      000603 01r30r00              1557 	ld	bc, #_shadow_OAM+48
                                   1558 ;C:/gbdk/include/gb/gb.h:1537: itm->y+=y, itm->x+=x;
      000606 0A                    1559 	ld	a, (bc)
      000607 83                    1560 	add	a, e
      000608 02                    1561 	ld	(bc), a
      000609 03                    1562 	inc	bc
      00060A 0A                    1563 	ld	a, (bc)
      00060B 3C                    1564 	inc	a
      00060C 02                    1565 	ld	(bc), a
                                   1566 ;src/player.c:325: scroll_sprite(13, -1, brick_y_speed>>1);
      00060D 5E                    1567 	ld	e, (hl)
      00060E CB 2B                 1568 	sra	e
                                   1569 ;C:/gbdk/include/gb/gb.h:1536: OAM_item_t * itm = &shadow_OAM[nb];
      000610 01r34r00              1570 	ld	bc, #_shadow_OAM+52
                                   1571 ;C:/gbdk/include/gb/gb.h:1537: itm->y+=y, itm->x+=x;
      000613 0A                    1572 	ld	a, (bc)
      000614 83                    1573 	add	a, e
      000615 02                    1574 	ld	(bc), a
      000616 03                    1575 	inc	bc
      000617 0A                    1576 	ld	a, (bc)
      000618 3D                    1577 	dec	a
      000619 02                    1578 	ld	(bc), a
                                   1579 ;C:/gbdk/include/gb/gb.h:1536: OAM_item_t * itm = &shadow_OAM[nb];
      00061A 01r38r00              1580 	ld	bc, #_shadow_OAM+56
                                   1581 ;C:/gbdk/include/gb/gb.h:1537: itm->y+=y, itm->x+=x;
      00061D 0A                    1582 	ld	a, (bc)
      00061E 3C                    1583 	inc	a
      00061F 02                    1584 	ld	(bc), a
      000620 03                    1585 	inc	bc
      000621 0A                    1586 	ld	a, (bc)
      000622 3C                    1587 	inc	a
      000623 02                    1588 	ld	(bc), a
                                   1589 ;C:/gbdk/include/gb/gb.h:1536: OAM_item_t * itm = &shadow_OAM[nb];
      000624 01r3Cr00              1590 	ld	bc, #_shadow_OAM+60
                                   1591 ;C:/gbdk/include/gb/gb.h:1537: itm->y+=y, itm->x+=x;
      000627 0A                    1592 	ld	a, (bc)
      000628 3C                    1593 	inc	a
      000629 02                    1594 	ld	(bc), a
      00062A 03                    1595 	inc	bc
      00062B 0A                    1596 	ld	a, (bc)
      00062C 3D                    1597 	dec	a
      00062D 02                    1598 	ld	(bc), a
                           00062E  1599 	C$player.c$328$2_0$230	= .
                                   1600 	.globl	C$player.c$328$2_0$230
                                   1601 ;src/player.c:328: brick_y_speed++;
      00062E 34                    1602 	inc	(hl)
      00062F                       1603 00107$:
                           00062F  1604 	C$player.c$332$1_0$225	= .
                                   1605 	.globl	C$player.c$332$1_0$225
                                   1606 ;src/player.c:332: if(current_state != PLAYER_STATE_RUNNING) return;
      00062F FAr10r00              1607 	ld	a, (#_current_state)
      000632 3D                    1608 	dec	a
      000633 C2rF8r06              1609 	jp	NZ,00128$
                           000636  1610 	C$player.c$333$1_0$225	= .
                                   1611 	.globl	C$player.c$333$1_0$225
                                   1612 ;src/player.c:333: if((frame_counter != 0) || (!(current_frame == 0 || current_frame == 3))) return;
      000636 FAr01r00              1613 	ld	a, (#_frame_counter)
      000639 B7                    1614 	or	a, a
      00063A C2rF8r06              1615 	jp	NZ,00128$
      00063D 21r02r00              1616 	ld	hl, #_current_frame
      000640 7E                    1617 	ld	a, (hl)
      000641 B7                    1618 	or	a, a
      000642 28 06                 1619 	jr	Z, 00111$
      000644 7E                    1620 	ld	a, (hl)
      000645 D6 03                 1621 	sub	a, #0x03
      000647 C2rF8r06              1622 	jp	NZ,00128$
      00064A                       1623 00111$:
                           00064A  1624 	C$player.c$336$1_0$225	= .
                                   1625 	.globl	C$player.c$336$1_0$225
                                   1626 ;src/player.c:336: i = FIRST_PUFF + next_free_puff;
      00064A FAr17r00              1627 	ld	a, (#_next_free_puff)
      00064D C6 08                 1628 	add	a, #0x08
      00064F 21r04r00              1629 	ld	hl, #_i
      000652 77                    1630 	ld	(hl), a
                                   1631 ;src/player.c:337: set_sprite_tile(i, PLAYER_SPRITES);
      000653 4E                    1632 	ld	c, (hl)
                                   1633 ;C:/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000654 26 00                 1634 	ld	h, #0x00
                                   1635 ;	spillPairReg hl
                                   1636 ;	spillPairReg hl
      000656 69                    1637 	ld	l, c
      000657 29                    1638 	add	hl, hl
      000658 29                    1639 	add	hl, hl
      000659 11r00r00              1640 	ld	de, #_shadow_OAM
      00065C 19                    1641 	add	hl, de
      00065D 23                    1642 	inc	hl
      00065E 23                    1643 	inc	hl
      00065F 36 18                 1644 	ld	(hl), #0x18
                                   1645 ;src/player.c:338: set_sprite_prop(i, get_sprite_prop(i) & 0xDF); // reset the flip
      000661 21r04r00              1646 	ld	hl, #_i
      000664 4E                    1647 	ld	c, (hl)
                                   1648 ;C:/gbdk/include/gb/gb.h:1503: return shadow_OAM[nb].prop;
      000665 26 00                 1649 	ld	h, #0x00
                                   1650 ;	spillPairReg hl
                                   1651 ;	spillPairReg hl
      000667 69                    1652 	ld	l, c
      000668 29                    1653 	add	hl, hl
      000669 29                    1654 	add	hl, hl
      00066A 11r00r00              1655 	ld	de, #_shadow_OAM
      00066D 19                    1656 	add	hl, de
      00066E 23                    1657 	inc	hl
      00066F 23                    1658 	inc	hl
      000670 23                    1659 	inc	hl
      000671 4E                    1660 	ld	c, (hl)
                                   1661 ;src/player.c:338: set_sprite_prop(i, get_sprite_prop(i) & 0xDF); // reset the flip
      000672 CB A9                 1662 	res	5, c
      000674 21r04r00              1663 	ld	hl, #_i
                                   1664 ;C:/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000677 6E                    1665 	ld	l, (hl)
                                   1666 ;	spillPairReg hl
                                   1667 ;	spillPairReg hl
      000678 26 00                 1668 	ld	h, #0x00
                                   1669 ;	spillPairReg hl
                                   1670 ;	spillPairReg hl
      00067A 29                    1671 	add	hl, hl
      00067B 29                    1672 	add	hl, hl
      00067C 11r00r00              1673 	ld	de, #_shadow_OAM
      00067F 19                    1674 	add	hl, de
      000680 23                    1675 	inc	hl
      000681 23                    1676 	inc	hl
      000682 23                    1677 	inc	hl
      000683 71                    1678 	ld	(hl), c
                           000684  1679 	C$player.c$339$1_0$225	= .
                                   1680 	.globl	C$player.c$339$1_0$225
                                   1681 ;src/player.c:339: puff_frame[next_free_puff] = 4;
      000684 3Er00                 1682 	ld	a, #<(_puff_frame)
      000686 21r17r00              1683 	ld	hl, #_next_free_puff
      000689 86                    1684 	add	a, (hl)
      00068A 4F                    1685 	ld	c, a
      00068B 3Es00                 1686 	ld	a, #>(_puff_frame)
      00068D CE 00                 1687 	adc	a, #0x00
      00068F 47                    1688 	ld	b, a
      000690 3E 04                 1689 	ld	a, #0x04
      000692 02                    1690 	ld	(bc), a
                                   1691 ;src/player.c:340: move_sprite(i, player_x + X_OFFSET, (uint8_t)((player_y + Y_OFFSET) - camera_y));
      000693 FAr0Dr00              1692 	ld	a, (#_player_y)
      000696 C6 08                 1693 	add	a, #0x08
      000698 21r00r00              1694 	ld	hl, #_camera_y
      00069B 4E                    1695 	ld	c, (hl)
      00069C 91                    1696 	sub	a, c
      00069D F8 02                 1697 	ldhl	sp,	#2
      00069F 77                    1698 	ld	(hl), a
      0006A0 FAr0Cr00              1699 	ld	a, (#_player_x)
      0006A3 C6 FC                 1700 	add	a, #0xfc
      0006A5 F8 03                 1701 	ldhl	sp,	#3
      0006A7 77                    1702 	ld	(hl), a
      0006A8 21r04r00              1703 	ld	hl, #_i
      0006AB 4E                    1704 	ld	c, (hl)
                                   1705 ;C:/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0006AC AF                    1706 	xor	a, a
      0006AD CB 21                 1707 	sla	c
      0006AF 8F                    1708 	adc	a, a
      0006B0 CB 21                 1709 	sla	c
      0006B2 8F                    1710 	adc	a, a
      0006B3 F8 00                 1711 	ldhl	sp,	#0
      0006B5 71                    1712 	ld	(hl), c
      0006B6 23                    1713 	inc	hl
      0006B7 77                    1714 	ld	(hl), a
      0006B8 11r00r00              1715 	ld	de, #_shadow_OAM
      0006BB E1                    1716 	pop	hl
      0006BC E5                    1717 	push	hl
      0006BD 19                    1718 	add	hl, de
      0006BE E5                    1719 	push	hl
      0006BF 7D                    1720 	ld	a, l
      0006C0 F8 06                 1721 	ldhl	sp,	#6
      0006C2 77                    1722 	ld	(hl), a
      0006C3 E1                    1723 	pop	hl
      0006C4 7C                    1724 	ld	a, h
      0006C5 F8 05                 1725 	ldhl	sp,	#5
                                   1726 ;C:/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0006C7 32                    1727 	ld	(hl-), a
      0006C8 2A                    1728 	ld	a, (hl+)
      0006C9 5F                    1729 	ld	e, a
      0006CA 56                    1730 	ld	d, (hl)
      0006CB F8 02                 1731 	ldhl	sp,	#2
      0006CD 2A                    1732 	ld	a, (hl+)
      0006CE 23                    1733 	inc	hl
      0006CF 12                    1734 	ld	(de), a
      0006D0 2A                    1735 	ld	a, (hl+)
      0006D1 4F                    1736 	ld	c, a
      0006D2 3A                    1737 	ld	a, (hl-)
      0006D3 2B                    1738 	dec	hl
      0006D4 47                    1739 	ld	b, a
      0006D5 03                    1740 	inc	bc
      0006D6 7E                    1741 	ld	a, (hl)
      0006D7 02                    1742 	ld	(bc), a
                           0006D8  1743 	C$player.c$341$1_0$225	= .
                                   1744 	.globl	C$player.c$341$1_0$225
                                   1745 ;src/player.c:341: if(!is_facing_right) set_sprite_prop(i, S_FLIPX); //flip if facing left
      0006D8 21r08r00              1746 	ld	hl, #_is_facing_right
      0006DB CB 46                 1747 	bit	0, (hl)
      0006DD 20 11                 1748 	jr	NZ, 00115$
      0006DF 21r04r00              1749 	ld	hl, #_i
                                   1750 ;C:/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0006E2 6E                    1751 	ld	l, (hl)
      0006E3 01r00r00              1752 	ld	bc, #_shadow_OAM+0
                                   1753 ;	spillPairReg hl
                                   1754 ;	spillPairReg hl
      0006E6 26 00                 1755 	ld	h, #0x00
                                   1756 ;	spillPairReg hl
                                   1757 ;	spillPairReg hl
      0006E8 29                    1758 	add	hl, hl
      0006E9 29                    1759 	add	hl, hl
      0006EA 09                    1760 	add	hl, bc
      0006EB 23                    1761 	inc	hl
      0006EC 23                    1762 	inc	hl
      0006ED 23                    1763 	inc	hl
      0006EE 36 20                 1764 	ld	(hl), #0x20
                           0006F0  1765 	C$player.c$341$1_0$225	= .
                                   1766 	.globl	C$player.c$341$1_0$225
                                   1767 ;src/player.c:341: if(!is_facing_right) set_sprite_prop(i, S_FLIPX); //flip if facing left
      0006F0                       1768 00115$:
                           0006F0  1769 	C$player.c$343$1_0$225	= .
                                   1770 	.globl	C$player.c$343$1_0$225
                                   1771 ;src/player.c:343: next_free_puff = (next_free_puff + 1) & 0x03;
      0006F0 21r17r00              1772 	ld	hl, #_next_free_puff
      0006F3 7E                    1773 	ld	a, (hl)
      0006F4 3C                    1774 	inc	a
      0006F5 E6 03                 1775 	and	a, #0x03
      0006F7 77                    1776 	ld	(hl), a
      0006F8                       1777 00128$:
                           0006F8  1778 	C$player.c$344$1_0$225	= .
                                   1779 	.globl	C$player.c$344$1_0$225
                                   1780 ;src/player.c:344: }
      0006F8 E8 06                 1781 	add	sp, #6
                           0006FA  1782 	C$player.c$344$1_0$225	= .
                                   1783 	.globl	C$player.c$344$1_0$225
                           0006FA  1784 	XFplayer$render_all_particles$0$0	= .
                                   1785 	.globl	XFplayer$render_all_particles$0$0
      0006FA C9                    1786 	ret
                           0006FB  1787 	Fplayer$instanciate_collision_puffs$0$0	= .
                                   1788 	.globl	Fplayer$instanciate_collision_puffs$0$0
                           0006FB  1789 	C$player.c$346$1_0$265	= .
                                   1790 	.globl	C$player.c$346$1_0$265
                                   1791 ;src/player.c:346: static void instanciate_collision_puffs(void){
                                   1792 ;	---------------------------------
                                   1793 ; Function instanciate_collision_puffs
                                   1794 ; ---------------------------------
      0006FB                       1795 _instanciate_collision_puffs:
                           0006FB  1796 	C$player.c$348$1_0$265	= .
                                   1797 	.globl	C$player.c$348$1_0$265
                                   1798 ;src/player.c:348: uint8_t i = FIRST_PUFF + next_free_puff;
      0006FB FAr17r00              1799 	ld	a, (#_next_free_puff)
      0006FE C6 08                 1800 	add	a, #0x08
      000700 4F                    1801 	ld	c, a
                                   1802 ;C:/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000701 11r00r00              1803 	ld	de, #_shadow_OAM+0
      000704 69                    1804 	ld	l, c
                                   1805 ;	spillPairReg hl
                                   1806 ;	spillPairReg hl
      000705 26 00                 1807 	ld	h, #0x00
                                   1808 ;	spillPairReg hl
                                   1809 ;	spillPairReg hl
      000707 29                    1810 	add	hl, hl
      000708 29                    1811 	add	hl, hl
      000709 19                    1812 	add	hl, de
      00070A 23                    1813 	inc	hl
      00070B 23                    1814 	inc	hl
      00070C 36 18                 1815 	ld	(hl), #0x18
                                   1816 ;C:/gbdk/include/gb/gb.h:1503: return shadow_OAM[nb].prop;
      00070E 69                    1817 	ld	l, c
                                   1818 ;	spillPairReg hl
                                   1819 ;	spillPairReg hl
      00070F 26 00                 1820 	ld	h, #0x00
                                   1821 ;	spillPairReg hl
                                   1822 ;	spillPairReg hl
      000711 29                    1823 	add	hl, hl
      000712 29                    1824 	add	hl, hl
      000713 5D                    1825 	ld	e, l
      000714 54                    1826 	ld	d, h
      000715 21r01r00              1827 	ld	hl,#_shadow_OAM + 1
      000718 19                    1828 	add	hl,de
      000719 23                    1829 	inc	hl
      00071A 23                    1830 	inc	hl
      00071B 4E                    1831 	ld	c, (hl)
                                   1832 ;src/player.c:350: set_sprite_prop(i, get_sprite_prop(i) & 0xDF); // remove flip
      00071C CB A9                 1833 	res	5, c
                                   1834 ;C:/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00071E 21r01r00              1835 	ld	hl,#_shadow_OAM + 1
      000721 19                    1836 	add	hl,de
      000722 23                    1837 	inc	hl
      000723 23                    1838 	inc	hl
      000724 71                    1839 	ld	(hl), c
                           000725  1840 	C$player.c$351$1_0$265	= .
                                   1841 	.globl	C$player.c$351$1_0$265
                                   1842 ;src/player.c:351: puff_frame[next_free_puff] = 4;
      000725 3Er00                 1843 	ld	a, #<(_puff_frame)
      000727 21r17r00              1844 	ld	hl, #_next_free_puff
      00072A 86                    1845 	add	a, (hl)
      00072B 4F                    1846 	ld	c, a
      00072C 3Es00                 1847 	ld	a, #>(_puff_frame)
      00072E CE 00                 1848 	adc	a, #0x00
      000730 47                    1849 	ld	b, a
      000731 3E 04                 1850 	ld	a, #0x04
      000733 02                    1851 	ld	(bc), a
                                   1852 ;src/player.c:352: move_sprite(i, player_x + X_OFFSET - 8U, (uint8_t)((player_y + Y_OFFSET) - camera_y));
      000734 FAr0Dr00              1853 	ld	a, (#_player_y)
      000737 C6 08                 1854 	add	a, #0x08
      000739 21r00r00              1855 	ld	hl, #_camera_y
      00073C 4E                    1856 	ld	c, (hl)
      00073D 91                    1857 	sub	a, c
      00073E 47                    1858 	ld	b, a
      00073F FAr0Cr00              1859 	ld	a, (#_player_x)
      000742 C6 F4                 1860 	add	a, #0xf4
      000744 4F                    1861 	ld	c, a
                                   1862 ;C:/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000745 21r00r00              1863 	ld	hl, #_shadow_OAM
      000748 19                    1864 	add	hl, de
                                   1865 ;C:/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000749 78                    1866 	ld	a, b
      00074A 22                    1867 	ld	(hl+), a
      00074B 71                    1868 	ld	(hl), c
                           00074C  1869 	C$player.c$354$1_0$265	= .
                                   1870 	.globl	C$player.c$354$1_0$265
                                   1871 ;src/player.c:354: next_free_puff = (next_free_puff + 1) & 0x03;
      00074C 21r17r00              1872 	ld	hl, #_next_free_puff
      00074F 7E                    1873 	ld	a, (hl)
      000750 3C                    1874 	inc	a
      000751 E6 03                 1875 	and	a, #0x03
      000753 77                    1876 	ld	(hl), a
                           000754  1877 	C$player.c$356$1_0$265	= .
                                   1878 	.globl	C$player.c$356$1_0$265
                                   1879 ;src/player.c:356: i = FIRST_PUFF + next_free_puff;
      000754 7E                    1880 	ld	a, (hl)
      000755 C6 08                 1881 	add	a, #0x08
      000757 4F                    1882 	ld	c, a
                                   1883 ;C:/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000758 11r00r00              1884 	ld	de, #_shadow_OAM+0
      00075B 69                    1885 	ld	l, c
                                   1886 ;	spillPairReg hl
                                   1887 ;	spillPairReg hl
      00075C 26 00                 1888 	ld	h, #0x00
                                   1889 ;	spillPairReg hl
                                   1890 ;	spillPairReg hl
      00075E 29                    1891 	add	hl, hl
      00075F 29                    1892 	add	hl, hl
      000760 19                    1893 	add	hl, de
      000761 23                    1894 	inc	hl
      000762 23                    1895 	inc	hl
      000763 36 18                 1896 	ld	(hl), #0x18
                                   1897 ;C:/gbdk/include/gb/gb.h:1503: return shadow_OAM[nb].prop;
      000765 69                    1898 	ld	l, c
                                   1899 ;	spillPairReg hl
                                   1900 ;	spillPairReg hl
      000766 26 00                 1901 	ld	h, #0x00
                                   1902 ;	spillPairReg hl
                                   1903 ;	spillPairReg hl
      000768 29                    1904 	add	hl, hl
      000769 29                    1905 	add	hl, hl
      00076A 5D                    1906 	ld	e, l
      00076B 54                    1907 	ld	d, h
      00076C 21r01r00              1908 	ld	hl,#_shadow_OAM + 1
      00076F 19                    1909 	add	hl,de
      000770 23                    1910 	inc	hl
      000771 23                    1911 	inc	hl
      000772 4E                    1912 	ld	c, (hl)
                                   1913 ;src/player.c:358: set_sprite_prop(i, get_sprite_prop(i) | 0x20); // add flip
      000773 CB E9                 1914 	set	5, c
                                   1915 ;C:/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000775 21r01r00              1916 	ld	hl,#_shadow_OAM + 1
      000778 19                    1917 	add	hl,de
      000779 23                    1918 	inc	hl
      00077A 23                    1919 	inc	hl
      00077B 71                    1920 	ld	(hl), c
                           00077C  1921 	C$player.c$359$1_0$265	= .
                                   1922 	.globl	C$player.c$359$1_0$265
                                   1923 ;src/player.c:359: puff_frame[next_free_puff] = 4;
      00077C 3Er00                 1924 	ld	a, #<(_puff_frame)
      00077E 21r17r00              1925 	ld	hl, #_next_free_puff
      000781 86                    1926 	add	a, (hl)
      000782 4F                    1927 	ld	c, a
      000783 3Es00                 1928 	ld	a, #>(_puff_frame)
      000785 CE 00                 1929 	adc	a, #0x00
      000787 47                    1930 	ld	b, a
      000788 3E 04                 1931 	ld	a, #0x04
      00078A 02                    1932 	ld	(bc), a
                                   1933 ;src/player.c:360: move_sprite(i, player_x + X_OFFSET + 8U, (uint8_t)((player_y + Y_OFFSET) - camera_y));
      00078B FAr0Dr00              1934 	ld	a, (#_player_y)
      00078E C6 08                 1935 	add	a, #0x08
      000790 21r00r00              1936 	ld	hl, #_camera_y
      000793 4E                    1937 	ld	c, (hl)
      000794 91                    1938 	sub	a, c
      000795 47                    1939 	ld	b, a
      000796 FAr0Cr00              1940 	ld	a, (#_player_x)
      000799 C6 04                 1941 	add	a, #0x04
      00079B 4F                    1942 	ld	c, a
                                   1943 ;C:/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      00079C 21r00r00              1944 	ld	hl, #_shadow_OAM
      00079F 19                    1945 	add	hl, de
                                   1946 ;C:/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0007A0 78                    1947 	ld	a, b
      0007A1 22                    1948 	ld	(hl+), a
      0007A2 71                    1949 	ld	(hl), c
                           0007A3  1950 	C$player.c$362$1_0$265	= .
                                   1951 	.globl	C$player.c$362$1_0$265
                                   1952 ;src/player.c:362: next_free_puff = (next_free_puff + 1) & 0x03;
      0007A3 21r17r00              1953 	ld	hl, #_next_free_puff
      0007A6 7E                    1954 	ld	a, (hl)
      0007A7 3C                    1955 	inc	a
      0007A8 E6 03                 1956 	and	a, #0x03
      0007AA 77                    1957 	ld	(hl), a
                           0007AB  1958 	C$player.c$363$1_0$265	= .
                                   1959 	.globl	C$player.c$363$1_0$265
                                   1960 ;src/player.c:363: }
                           0007AB  1961 	C$player.c$363$1_0$265	= .
                                   1962 	.globl	C$player.c$363$1_0$265
                           0007AB  1963 	XFplayer$instanciate_collision_puffs$0$0	= .
                                   1964 	.globl	XFplayer$instanciate_collision_puffs$0$0
      0007AB C9                    1965 	ret
                           0007AC  1966 	Fplayer$instanciate_brick_particles$0$0	= .
                                   1967 	.globl	Fplayer$instanciate_brick_particles$0$0
                           0007AC  1968 	C$player.c$365$1_0$291	= .
                                   1969 	.globl	C$player.c$365$1_0$291
                                   1970 ;src/player.c:365: static void instanciate_brick_particles(void){
                                   1971 ;	---------------------------------
                                   1972 ; Function instanciate_brick_particles
                                   1973 ; ---------------------------------
      0007AC                       1974 _instanciate_brick_particles:
                           0007AC  1975 	C$player.c$367$1_0$291	= .
                                   1976 	.globl	C$player.c$367$1_0$291
                                   1977 ;src/player.c:367: uint8_t particle_x = ((3 + (i<<1 & 0x0C)) << 3) + 14u;
      0007AC FAr04r00              1978 	ld	a, (#_i)
      0007AF 87                    1979 	add	a, a
      0007B0 E6 0C                 1980 	and	a, #0x0c
      0007B2 C6 03                 1981 	add	a, #0x03
      0007B4 87                    1982 	add	a, a
      0007B5 87                    1983 	add	a, a
      0007B6 87                    1984 	add	a, a
      0007B7 C6 0E                 1985 	add	a, #0x0e
      0007B9 4F                    1986 	ld	c, a
                           0007BA  1987 	C$player.c$368$1_0$291	= .
                                   1988 	.globl	C$player.c$368$1_0$291
                                   1989 ;src/player.c:368: uint8_t particle_y = (((PLAYER_FLOOR << 3) + 1 + ((~i & 0x01) << 2)) << 3) - camera_y + 16u;
      0007BA FAr0Dr00              1990 	ld	a, (#_player_y)
      0007BD 07                    1991 	rlca
      0007BE 07                    1992 	rlca
      0007BF E6 03                 1993 	and	a, #0x03
      0007C1 87                    1994 	add	a, a
      0007C2 87                    1995 	add	a, a
      0007C3 87                    1996 	add	a, a
      0007C4 47                    1997 	ld	b, a
      0007C5 04                    1998 	inc	b
      0007C6 FAr04r00              1999 	ld	a, (#_i)
      0007C9 2F                    2000 	cpl
      0007CA E6 01                 2001 	and	a, #0x01
      0007CC 87                    2002 	add	a, a
      0007CD 87                    2003 	add	a, a
      0007CE 80                    2004 	add	a, b
      0007CF 87                    2005 	add	a, a
      0007D0 87                    2006 	add	a, a
      0007D1 87                    2007 	add	a, a
      0007D2 21r00r00              2008 	ld	hl, #_camera_y
      0007D5 46                    2009 	ld	b, (hl)
      0007D6 90                    2010 	sub	a, b
      0007D7 C6 10                 2011 	add	a, #0x10
      0007D9 47                    2012 	ld	b, a
                                   2013 ;src/player.c:369: move_sprite(12, particle_x, particle_y);
      0007DA 59                    2014 	ld	e, c
                                   2015 ;C:/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0007DB 21r30r00              2016 	ld	hl, #(_shadow_OAM + 48)
                                   2017 ;C:/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0007DE 70                    2018 	ld	(hl), b
      0007DF 23                    2019 	inc	hl
      0007E0 73                    2020 	ld	(hl), e
                                   2021 ;C:/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0007E1 21r34r00              2022 	ld	hl, #(_shadow_OAM + 52)
                                   2023 ;C:/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0007E4 70                    2024 	ld	(hl), b
      0007E5 23                    2025 	inc	hl
      0007E6 71                    2026 	ld	(hl), c
                                   2027 ;C:/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0007E7 21r38r00              2028 	ld	hl, #(_shadow_OAM + 56)
                                   2029 ;C:/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0007EA 70                    2030 	ld	(hl), b
      0007EB 23                    2031 	inc	hl
      0007EC 71                    2032 	ld	(hl), c
                                   2033 ;C:/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0007ED 21r3Cr00              2034 	ld	hl, #(_shadow_OAM + 60)
                                   2035 ;C:/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0007F0 70                    2036 	ld	(hl), b
      0007F1 23                    2037 	inc	hl
      0007F2 71                    2038 	ld	(hl), c
                           0007F3  2039 	C$player.c$373$1_0$291	= .
                                   2040 	.globl	C$player.c$373$1_0$291
                                   2041 ;src/player.c:373: brick_frame = 10;
      0007F3 21r18r00              2042 	ld	hl, #_brick_frame
      0007F6 36 0A                 2043 	ld	(hl), #0x0a
                           0007F8  2044 	C$player.c$374$1_0$291	= .
                                   2045 	.globl	C$player.c$374$1_0$291
                                   2046 ;src/player.c:374: brick_y_speed = -5;
      0007F8 21r19r00              2047 	ld	hl, #_brick_y_speed
      0007FB 36 FB                 2048 	ld	(hl), #0xfb
                           0007FD  2049 	C$player.c$375$1_0$291	= .
                                   2050 	.globl	C$player.c$375$1_0$291
                                   2051 ;src/player.c:375: }
                           0007FD  2052 	C$player.c$375$1_0$291	= .
                                   2053 	.globl	C$player.c$375$1_0$291
                           0007FD  2054 	XFplayer$instanciate_brick_particles$0$0	= .
                                   2055 	.globl	XFplayer$instanciate_brick_particles$0$0
      0007FD C9                    2056 	ret
                           0007FE  2057 	Fplayer$hurt_frame$0$0	= .
                                   2058 	.globl	Fplayer$hurt_frame$0$0
                           0007FE  2059 	C$player.c$377$1_0$305	= .
                                   2060 	.globl	C$player.c$377$1_0$305
                                   2061 ;src/player.c:377: static void hurt_frame(void){
                                   2062 ;	---------------------------------
                                   2063 ; Function hurt_frame
                                   2064 ; ---------------------------------
      0007FE                       2065 _hurt_frame:
                           0007FE  2066 	C$player.c$378$1_0$305	= .
                                   2067 	.globl	C$player.c$378$1_0$305
                                   2068 ;src/player.c:378: if(frame_counter >= HURT_FRAMES){
      0007FE FAr01r00              2069 	ld	a, (#_frame_counter)
      000801 D6 15                 2070 	sub	a, #0x15
      000803 38 0B                 2071 	jr	C, 00102$
                           000805  2072 	C$player.c$379$2_0$306	= .
                                   2073 	.globl	C$player.c$379$2_0$306
                                   2074 ;src/player.c:379: switch_state(PLAYER_STATE_FALLING);
      000805 3E 03                 2075 	ld	a, #0x03
      000807 F5                    2076 	push	af
      000808 33                    2077 	inc	sp
      000809 CDrC8r08              2078 	call	_switch_state
      00080C 33                    2079 	inc	sp
                           00080D  2080 	C$player.c$380$2_0$306	= .
                                   2081 	.globl	C$player.c$380$2_0$306
                                   2082 ;src/player.c:380: stop_hurt_sfx();
                           00080D  2083 	C$player.c$381$2_0$306	= .
                                   2084 	.globl	C$player.c$381$2_0$306
                                   2085 ;src/player.c:381: return;
      00080D C3r00r00              2086 	jp	_stop_hurt_sfx
      000810                       2087 00102$:
                           000810  2088 	C$player.c$383$1_0$305	= .
                                   2089 	.globl	C$player.c$383$1_0$305
                                   2090 ;src/player.c:383: player_x = is_facing_right ? player_x - (x_speed >> PHYSICS_DAMPNER) : player_x + (x_speed >> PHYSICS_DAMPNER);
      000810 21r07r00              2091 	ld	hl, #_x_speed
      000813 4E                    2092 	ld	c, (hl)
      000814 CB 39                 2093 	srl	c
      000816 CB 39                 2094 	srl	c
      000818 21r08r00              2095 	ld	hl, #_is_facing_right
      00081B CB 46                 2096 	bit	0, (hl)
      00081D 28 06                 2097 	jr	Z, 00105$
      00081F FAr0Cr00              2098 	ld	a, (#_player_x)
      000822 91                    2099 	sub	a, c
      000823 18 04                 2100 	jr	00106$
      000825                       2101 00105$:
      000825 FAr0Cr00              2102 	ld	a, (#_player_x)
      000828 81                    2103 	add	a, c
      000829                       2104 00106$:
      000829 EAr0Cr00              2105 	ld	(#_player_x),a
                           00082C  2106 	C$player.c$384$1_0$305	= .
                                   2107 	.globl	C$player.c$384$1_0$305
                                   2108 ;src/player.c:384: player_y += (y_speed >> PHYSICS_DAMPNER);
      00082C FAr0Br00              2109 	ld	a, (#_y_speed)
      00082F CB 2F                 2110 	sra	a
      000831 CB 2F                 2111 	sra	a
      000833 21r0Dr00              2112 	ld	hl, #_player_y
      000836 4E                    2113 	ld	c, (hl)
      000837 81                    2114 	add	a, c
      000838 77                    2115 	ld	(hl), a
                           000839  2116 	C$player.c$385$1_0$305	= .
                                   2117 	.globl	C$player.c$385$1_0$305
                                   2118 ;src/player.c:385: y_speed = y_speed >= clamp_y_velocity ? clamp_y_velocity : y_speed + HURT_G;
      000839 21rCCr00              2119 	ld	hl, #_clamp_y_velocity
      00083C 4E                    2120 	ld	c, (hl)
      00083D 59                    2121 	ld	e, c
      00083E FAr0Br00              2122 	ld	a, (#_y_speed)
      000841 57                    2123 	ld	d,a
      000842 91                    2124 	sub	a, c
      000843 CB 7B                 2125 	bit	7, e
      000845 28 07                 2126 	jr	Z, 00124$
      000847 CB 7A                 2127 	bit	7, d
      000849 20 08                 2128 	jr	NZ, 00125$
      00084B BF                    2129 	cp	a, a
      00084C 18 05                 2130 	jr	00125$
      00084E                       2131 00124$:
      00084E CB 7A                 2132 	bit	7, d
      000850 28 01                 2133 	jr	Z, 00125$
      000852 37                    2134 	scf
      000853                       2135 00125$:
      000853 30 06                 2136 	jr	NC, 00108$
      000855 21r0Br00              2137 	ld	hl, #_y_speed
      000858 4E                    2138 	ld	c, (hl)
      000859 0C                    2139 	inc	c
      00085A 0C                    2140 	inc	c
      00085B                       2141 00108$:
      00085B 21r0Br00              2142 	ld	hl, #_y_speed
      00085E 71                    2143 	ld	(hl), c
                           00085F  2144 	C$player.c$386$1_0$305	= .
                                   2145 	.globl	C$player.c$386$1_0$305
                                   2146 ;src/player.c:386: }
                           00085F  2147 	C$player.c$386$1_0$305	= .
                                   2148 	.globl	C$player.c$386$1_0$305
                           00085F  2149 	XFplayer$hurt_frame$0$0	= .
                                   2150 	.globl	XFplayer$hurt_frame$0$0
      00085F C9                    2151 	ret
                           000860  2152 	Fplayer$end_frame$0$0	= .
                                   2153 	.globl	Fplayer$end_frame$0$0
                           000860  2154 	C$player.c$388$1_0$308	= .
                                   2155 	.globl	C$player.c$388$1_0$308
                                   2156 ;src/player.c:388: static void end_frame(void){
                                   2157 ;	---------------------------------
                                   2158 ; Function end_frame
                                   2159 ; ---------------------------------
      000860                       2160 _end_frame:
                           000860  2161 	C$player.c$389$1_0$308	= .
                                   2162 	.globl	C$player.c$389$1_0$308
                                   2163 ;src/player.c:389: if(frame_counter == (uint8_t)(metasprites_speeds[current_state][current_frame])){
      000860 01r00r00              2164 	ld	bc, #_metasprites_speeds+0
      000863 21r10r00              2165 	ld	hl, #_current_state
      000866 6E                    2166 	ld	l, (hl)
                                   2167 ;	spillPairReg hl
                                   2168 ;	spillPairReg hl
      000867 26 00                 2169 	ld	h, #0x00
                                   2170 ;	spillPairReg hl
                                   2171 ;	spillPairReg hl
      000869 29                    2172 	add	hl, hl
      00086A 09                    2173 	add	hl, bc
      00086B 2A                    2174 	ld	a, (hl+)
      00086C 4F                    2175 	ld	c, a
      00086D 46                    2176 	ld	b, (hl)
      00086E 79                    2177 	ld	a, c
      00086F 21r02r00              2178 	ld	hl, #_current_frame
      000872 86                    2179 	add	a, (hl)
      000873 4F                    2180 	ld	c, a
      000874 30 01                 2181 	jr	NC, 00125$
      000876 04                    2182 	inc	b
      000877                       2183 00125$:
      000877 0A                    2184 	ld	a, (bc)
      000878 4F                    2185 	ld	c, a
      000879 FAr01r00              2186 	ld	a, (#_frame_counter)
      00087C 91                    2187 	sub	a, c
      00087D 20 24                 2188 	jr	NZ, 00104$
                           00087F  2189 	C$player.c$390$2_0$309	= .
                                   2190 	.globl	C$player.c$390$2_0$309
                                   2191 ;src/player.c:390: frame_counter = 0;
      00087F 21r01r00              2192 	ld	hl, #_frame_counter
      000882 36 00                 2193 	ld	(hl), #0x00
                           000884  2194 	C$player.c$391$2_0$309	= .
                                   2195 	.globl	C$player.c$391$2_0$309
                                   2196 ;src/player.c:391: current_frame++;
      000884 21r02r00              2197 	ld	hl, #_current_frame
      000887 34                    2198 	inc	(hl)
                           000888  2199 	C$player.c$392$2_0$309	= .
                                   2200 	.globl	C$player.c$392$2_0$309
                                   2201 ;src/player.c:392: if(current_frame == frames_in_state[current_state]){current_frame = 0;}
      000888 01r00r00              2202 	ld	bc, #_frames_in_state+0
      00088B 79                    2203 	ld	a, c
      00088C 21r10r00              2204 	ld	hl, #_current_state
      00088F 86                    2205 	add	a, (hl)
      000890 4F                    2206 	ld	c, a
      000891 30 01                 2207 	jr	NC, 00128$
      000893 04                    2208 	inc	b
      000894                       2209 00128$:
      000894 0A                    2210 	ld	a, (bc)
      000895 4F                    2211 	ld	c, a
      000896 FAr02r00              2212 	ld	a, (#_current_frame)
      000899 91                    2213 	sub	a, c
      00089A 20 0B                 2214 	jr	NZ, 00105$
      00089C 21r02r00              2215 	ld	hl, #_current_frame
      00089F 36 00                 2216 	ld	(hl), #0x00
      0008A1 18 04                 2217 	jr	00105$
      0008A3                       2218 00104$:
                           0008A3  2219 	C$player.c$394$2_0$311	= .
                                   2220 	.globl	C$player.c$394$2_0$311
                                   2221 ;src/player.c:394: frame_counter++;
      0008A3 21r01r00              2222 	ld	hl, #_frame_counter
      0008A6 34                    2223 	inc	(hl)
      0008A7                       2224 00105$:
                           0008A7  2225 	C$player.c$397$1_0$308	= .
                                   2226 	.globl	C$player.c$397$1_0$308
                                   2227 ;src/player.c:397: if(!rand_init){
      0008A7 21r00r00              2228 	ld	hl, #_rand_init
      0008AA CB 46                 2229 	bit	0, (hl)
      0008AC C0                    2230 	ret	NZ
                           0008AD  2231 	C$player.c$398$2_0$312	= .
                                   2232 	.globl	C$player.c$398$2_0$312
                                   2233 ;src/player.c:398: r = r ^ DIV_REG ^ (current_frame << frame_counter);
      0008AD F0r00                 2234 	ldh	a, (_DIV_REG + 0)
      0008AF 21r00r00              2235 	ld	hl, #_r
      0008B2 AE                    2236 	xor	a, (hl)
      0008B3 21r01r00              2237 	ld	hl, #_frame_counter
      0008B6 46                    2238 	ld	b, (hl)
      0008B7 21r02r00              2239 	ld	hl, #_current_frame
      0008BA 4E                    2240 	ld	c, (hl)
      0008BB 04                    2241 	inc	b
      0008BC 18 02                 2242 	jr	00132$
      0008BE                       2243 00131$:
      0008BE CB 21                 2244 	sla	c
      0008C0                       2245 00132$:
      0008C0 05                    2246 	dec	b
      0008C1 20 FB                 2247 	jr	NZ,00131$
      0008C3 A9                    2248 	xor	a, c
      0008C4 EAr00r00              2249 	ld	(#_r),a
                           0008C7  2250 	C$player.c$400$1_0$308	= .
                                   2251 	.globl	C$player.c$400$1_0$308
                                   2252 ;src/player.c:400: }
                           0008C7  2253 	C$player.c$400$1_0$308	= .
                                   2254 	.globl	C$player.c$400$1_0$308
                           0008C7  2255 	XFplayer$end_frame$0$0	= .
                                   2256 	.globl	XFplayer$end_frame$0$0
      0008C7 C9                    2257 	ret
                           0008C8  2258 	Fplayer$switch_state$0$0	= .
                                   2259 	.globl	Fplayer$switch_state$0$0
                           0008C8  2260 	C$player.c$402$1_0$314	= .
                                   2261 	.globl	C$player.c$402$1_0$314
                                   2262 ;src/player.c:402: static inline void switch_state(PlayerState state){
                                   2263 ;	---------------------------------
                                   2264 ; Function switch_state
                                   2265 ; ---------------------------------
      0008C8                       2266 _switch_state:
                           0008C8  2267 	C$player.c$403$1_0$314	= .
                                   2268 	.globl	C$player.c$403$1_0$314
                                   2269 ;src/player.c:403: if(current_state == state) {return;}
      0008C8 FAr10r00              2270 	ld	a, (#_current_state)
      0008CB F8 02                 2271 	ldhl	sp,	#2
      0008CD 96                    2272 	sub	a, (hl)
      0008CE C8                    2273 	ret	Z
      0008CF 18 00                 2274 	jr	00102$
      0008D1                       2275 00102$:
                           0008D1  2276 	C$player.c$404$1_0$314	= .
                                   2277 	.globl	C$player.c$404$1_0$314
                                   2278 ;src/player.c:404: if(current_state == PLAYER_STATE_FALLING){instanciate_collision_puffs();}
      0008D1 FAr10r00              2279 	ld	a, (#_current_state)
      0008D4 D6 03                 2280 	sub	a, #0x03
      0008D6 20 03                 2281 	jr	NZ, 00104$
      0008D8 CDrFBr06              2282 	call	_instanciate_collision_puffs
      0008DB                       2283 00104$:
                           0008DB  2284 	C$player.c$405$1_0$314	= .
                                   2285 	.globl	C$player.c$405$1_0$314
                                   2286 ;src/player.c:405: frame_counter = 0;
      0008DB 21r01r00              2287 	ld	hl, #_frame_counter
      0008DE 36 00                 2288 	ld	(hl), #0x00
                           0008E0  2289 	C$player.c$406$1_0$314	= .
                                   2290 	.globl	C$player.c$406$1_0$314
                                   2291 ;src/player.c:406: current_frame = 0;
      0008E0 21r02r00              2292 	ld	hl, #_current_frame
      0008E3 36 00                 2293 	ld	(hl), #0x00
                           0008E5  2294 	C$player.c$407$1_0$314	= .
                                   2295 	.globl	C$player.c$407$1_0$314
                                   2296 ;src/player.c:407: current_state = state;
      0008E5 F8 02                 2297 	ldhl	sp,	#2
      0008E7 7E                    2298 	ld	a, (hl)
      0008E8 EAr10r00              2299 	ld	(#_current_state),a
                           0008EB  2300 	C$player.c$408$1_0$314	= .
                                   2301 	.globl	C$player.c$408$1_0$314
                                   2302 ;src/player.c:408: }
                           0008EB  2303 	C$player.c$408$1_0$314	= .
                                   2304 	.globl	C$player.c$408$1_0$314
                           0008EB  2305 	XFplayer$switch_state$0$0	= .
                                   2306 	.globl	XFplayer$switch_state$0$0
      0008EB C9                    2307 	ret
                           0008EC  2308 	Fplayer$check_collisions$0$0	= .
                                   2309 	.globl	Fplayer$check_collisions$0$0
                           0008EC  2310 	C$player.c$412$1_0$319	= .
                                   2311 	.globl	C$player.c$412$1_0$319
                                   2312 ;src/player.c:412: static void check_collisions(void){
                                   2313 ;	---------------------------------
                                   2314 ; Function check_collisions
                                   2315 ; ---------------------------------
      0008EC                       2316 _check_collisions:
      0008EC E8 F1                 2317 	add	sp, #-15
                           0008EE  2318 	C$player.c$414$2_0$319	= .
                                   2319 	.globl	C$player.c$414$2_0$319
                                   2320 ;src/player.c:414: for(i=0; i<8; i++){
      0008EE 21r04r00              2321 	ld	hl, #_i
      0008F1 36 00                 2322 	ld	(hl), #0x00
      0008F3                       2323 00133$:
                           0008F3  2324 	C$player.c$415$3_0$320	= .
                                   2325 	.globl	C$player.c$415$3_0$320
                                   2326 ;src/player.c:415: r = &rect_list[PLAYER_FLOOR][i];
      0008F3 FAr0Dr00              2327 	ld	a, (#_player_y)
      0008F6 07                    2328 	rlca
      0008F7 07                    2329 	rlca
      0008F8 E6 03                 2330 	and	a, #0x03
      0008FA 4F                    2331 	ld	c, a
      0008FB 06 00                 2332 	ld	b, #0x00
      0008FD 69                    2333 	ld	l, c
      0008FE 60                    2334 	ld	h, b
      0008FF 29                    2335 	add	hl, hl
      000900 29                    2336 	add	hl, hl
      000901 09                    2337 	add	hl, bc
      000902 29                    2338 	add	hl, hl
      000903 29                    2339 	add	hl, hl
      000904 29                    2340 	add	hl, hl
      000905 01r00r00              2341 	ld	bc,#_rect_list
      000908 09                    2342 	add	hl,bc
      000909 4D                    2343 	ld	c, l
      00090A 44                    2344 	ld	b, h
      00090B FAr04r00              2345 	ld	a, (#_i)
      00090E 5F                    2346 	ld	e, a
      00090F 87                    2347 	add	a, a
      000910 87                    2348 	add	a, a
      000911 83                    2349 	add	a, e
      000912 81                    2350 	add	a, c
      000913 4F                    2351 	ld	c, a
      000914 3E 00                 2352 	ld	a, #0x00
      000916 88                    2353 	adc	a, b
      000917 F8 02                 2354 	ldhl	sp,	#2
      000919 71                    2355 	ld	(hl), c
      00091A 23                    2356 	inc	hl
                           00091B  2357 	C$player.c$416$3_0$320	= .
                                   2358 	.globl	C$player.c$416$3_0$320
                                   2359 ;src/player.c:416: if(r->type == INACTIVE) continue;
      00091B 32                    2360 	ld	(hl-), a
      00091C 2A                    2361 	ld	a, (hl+)
      00091D 5F                    2362 	ld	e, a
      00091E 56                    2363 	ld	d, (hl)
      00091F 21 04 00              2364 	ld	hl, #0x0004
      000922 19                    2365 	add	hl, de
      000923 4D                    2366 	ld	c, l
      000924 44                    2367 	ld	b, h
      000925 0A                    2368 	ld	a, (bc)
      000926 D6 02                 2369 	sub	a, #0x02
      000928 CAr83r0E              2370 	jp	Z,00131$
                           00092B  2371 	C$player.c$417$3_0$320	= .
                                   2372 	.globl	C$player.c$417$3_0$320
                                   2373 ;src/player.c:417: if(!point_vs_rect(r)) {
      00092B F8 02                 2374 	ldhl	sp,	#2
      00092D 2A                    2375 	ld	a, (hl+)
      00092E 5F                    2376 	ld	e, a
      00092F 56                    2377 	ld	d, (hl)
      000930 D5                    2378 	push	de
      000931 CDr23r0F              2379 	call	_point_vs_rect
      000934 E1                    2380 	pop	hl
      000935 CB 43                 2381 	bit	0, e
      000937 CAr83r0E              2382 	jp	Z, 00131$
                           00093A  2383 	C$player.c$421$4_0$322	= .
                                   2384 	.globl	C$player.c$421$4_0$322
                                   2385 ;src/player.c:421: uint8_t external_point_area = 0x00;
      00093A 0E 00                 2386 	ld	c, #0x00
                           00093C  2387 	C$player.c$426$3_1$322	= .
                                   2388 	.globl	C$player.c$426$3_1$322
                                   2389 ;src/player.c:426: external_point_area |= (last_x >= (r->x + r->size_x)) ? 0x10 : (last_x <= r->x) ? 0x20 : 0x30;        
      00093C F8 02                 2390 	ldhl	sp,#2
      00093E 2A                    2391 	ld	a, (hl+)
      00093F 5F                    2392 	ld	e, a
      000940 56                    2393 	ld	d, (hl)
      000941 1A                    2394 	ld	a, (de)
      000942 47                    2395 	ld	b, a
      000943 F8 0D                 2396 	ldhl	sp,	#13
      000945 78                    2397 	ld	a, b
      000946 22                    2398 	ld	(hl+), a
      000947 36 00                 2399 	ld	(hl), #0x00
      000949 F8 02                 2400 	ldhl	sp,#2
      00094B 2A                    2401 	ld	a, (hl+)
      00094C 5F                    2402 	ld	e, a
      00094D 56                    2403 	ld	d, (hl)
      00094E 21 02 00              2404 	ld	hl, #0x0002
      000951 19                    2405 	add	hl, de
      000952 E5                    2406 	push	hl
      000953 7D                    2407 	ld	a, l
      000954 F8 0B                 2408 	ldhl	sp,	#11
      000956 77                    2409 	ld	(hl), a
      000957 E1                    2410 	pop	hl
      000958 7C                    2411 	ld	a, h
      000959 F8 0A                 2412 	ldhl	sp,	#10
      00095B 32                    2413 	ld	(hl-), a
      00095C 2A                    2414 	ld	a, (hl+)
      00095D 5F                    2415 	ld	e, a
      00095E 56                    2416 	ld	d, (hl)
      00095F 1A                    2417 	ld	a, (de)
      000960 16 00                 2418 	ld	d, #0x00
      000962 5F                    2419 	ld	e, a
      000963 F8 0D                 2420 	ldhl	sp,	#13
      000965 2A                    2421 	ld	a,	(hl+)
      000966 66                    2422 	ld	h, (hl)
      000967 6F                    2423 	ld	l, a
      000968 19                    2424 	add	hl, de
      000969 E5                    2425 	push	hl
      00096A 7D                    2426 	ld	a, l
      00096B F8 0D                 2427 	ldhl	sp,	#13
      00096D 77                    2428 	ld	(hl), a
      00096E E1                    2429 	pop	hl
      00096F 7C                    2430 	ld	a, h
      000970 F8 0C                 2431 	ldhl	sp,	#12
      000972 77                    2432 	ld	(hl), a
      000973 FAr0Er00              2433 	ld	a, (#_last_x)
      000976 F8 0D                 2434 	ldhl	sp,	#13
      000978 22                    2435 	ld	(hl+), a
      000979 36 00                 2436 	ld	(hl), #0x00
      00097B F8 0D                 2437 	ldhl	sp,	#13
      00097D 5D                    2438 	ld	e, l
      00097E 54                    2439 	ld	d, h
      00097F F8 0B                 2440 	ldhl	sp,	#11
      000981 1A                    2441 	ld	a, (de)
      000982 13                    2442 	inc	de
      000983 96                    2443 	sub	a, (hl)
      000984 23                    2444 	inc	hl
      000985 1A                    2445 	ld	a, (de)
      000986 9E                    2446 	sbc	a, (hl)
      000987 1A                    2447 	ld	a, (de)
      000988 57                    2448 	ld	d, a
      000989 CB 7E                 2449 	bit	7, (hl)
      00098B 28 07                 2450 	jr	Z, 00257$
      00098D CB 7A                 2451 	bit	7, d
      00098F 20 08                 2452 	jr	NZ, 00258$
      000991 BF                    2453 	cp	a, a
      000992 18 05                 2454 	jr	00258$
      000994                       2455 00257$:
      000994 CB 7A                 2456 	bit	7, d
      000996 28 01                 2457 	jr	Z, 00258$
      000998 37                    2458 	scf
      000999                       2459 00258$:
      000999 38 05                 2460 	jr	C, 00136$
      00099B 11 10 00              2461 	ld	de, #0x0010
      00099E 18 0F                 2462 	jr	00137$
      0009A0                       2463 00136$:
      0009A0 78                    2464 	ld	a, b
      0009A1 21r0Er00              2465 	ld	hl, #_last_x
      0009A4 96                    2466 	sub	a, (hl)
      0009A5 38 05                 2467 	jr	C, 00138$
      0009A7 11 20 00              2468 	ld	de, #0x0020
      0009AA 18 03                 2469 	jr	00139$
      0009AC                       2470 00138$:
      0009AC 11 30 00              2471 	ld	de, #0x0030
      0009AF                       2472 00139$:
      0009AF                       2473 00137$:
      0009AF 7B                    2474 	ld	a, e
      0009B0 B1                    2475 	or	a, c
      0009B1 F8 04                 2476 	ldhl	sp,	#4
                           0009B3  2477 	C$player.c$427$3_1$322	= .
                                   2478 	.globl	C$player.c$427$3_1$322
                                   2479 ;src/player.c:427: external_point_area |= (last_y <= (r->y - r->size_y)) ? 0x01 : (last_y >= r->y) ? 0x02 : 0x03;
      0009B3 32                    2480 	ld	(hl-), a
      0009B4 2B                    2481 	dec	hl
      0009B5 2A                    2482 	ld	a, (hl+)
      0009B6 5F                    2483 	ld	e, a
      0009B7 56                    2484 	ld	d, (hl)
      0009B8 6B                    2485 	ld	l, e
      0009B9 62                    2486 	ld	h, d
      0009BA 23                    2487 	inc	hl
      0009BB E5                    2488 	push	hl
      0009BC 7D                    2489 	ld	a, l
      0009BD F8 0F                 2490 	ldhl	sp,	#15
      0009BF 77                    2491 	ld	(hl), a
      0009C0 E1                    2492 	pop	hl
      0009C1 7C                    2493 	ld	a, h
      0009C2 F8 0E                 2494 	ldhl	sp,	#14
      0009C4 32                    2495 	ld	(hl-), a
      0009C5 2A                    2496 	ld	a, (hl+)
      0009C6 5F                    2497 	ld	e, a
      0009C7 56                    2498 	ld	d, (hl)
      0009C8 1A                    2499 	ld	a, (de)
      0009C9 4F                    2500 	ld	c, a
      0009CA F8 00                 2501 	ldhl	sp,	#0
      0009CC 79                    2502 	ld	a, c
      0009CD 22                    2503 	ld	(hl+), a
      0009CE AF                    2504 	xor	a, a
      0009CF 22                    2505 	ld	(hl+), a
      0009D0 2A                    2506 	ld	a, (hl+)
      0009D1 5F                    2507 	ld	e, a
      0009D2 56                    2508 	ld	d, (hl)
      0009D3 21 03 00              2509 	ld	hl, #0x0003
      0009D6 19                    2510 	add	hl, de
      0009D7 E5                    2511 	push	hl
      0009D8 7D                    2512 	ld	a, l
      0009D9 F8 0D                 2513 	ldhl	sp,	#13
      0009DB 77                    2514 	ld	(hl), a
      0009DC E1                    2515 	pop	hl
      0009DD 7C                    2516 	ld	a, h
      0009DE F8 0C                 2517 	ldhl	sp,	#12
      0009E0 32                    2518 	ld	(hl-), a
      0009E1 2A                    2519 	ld	a, (hl+)
      0009E2 5F                    2520 	ld	e, a
      0009E3 56                    2521 	ld	d, (hl)
      0009E4 1A                    2522 	ld	a, (de)
      0009E5 F8 05                 2523 	ldhl	sp,	#5
      0009E7 22                    2524 	ld	(hl+), a
      0009E8 36 00                 2525 	ld	(hl), #0x00
      0009EA D1                    2526 	pop	de
      0009EB D5                    2527 	push	de
      0009EC 3A                    2528 	ld	a, (hl-)
      0009ED 6E                    2529 	ld	l, (hl)
      0009EE 67                    2530 	ld	h, a
      0009EF 7B                    2531 	ld	a, e
      0009F0 95                    2532 	sub	a, l
      0009F1 5F                    2533 	ld	e, a
      0009F2 7A                    2534 	ld	a, d
      0009F3 9C                    2535 	sbc	a, h
      0009F4 F8 08                 2536 	ldhl	sp,	#8
      0009F6 32                    2537 	ld	(hl-), a
      0009F7 73                    2538 	ld	(hl), e
      0009F8 FAr0Fr00              2539 	ld	a, (#_last_y)
      0009FB F8 05                 2540 	ldhl	sp,	#5
      0009FD 22                    2541 	ld	(hl+), a
      0009FE 36 00                 2542 	ld	(hl), #0x00
      000A00 F8 07                 2543 	ldhl	sp,	#7
      000A02 5D                    2544 	ld	e, l
      000A03 54                    2545 	ld	d, h
      000A04 F8 05                 2546 	ldhl	sp,	#5
      000A06 1A                    2547 	ld	a, (de)
      000A07 13                    2548 	inc	de
      000A08 96                    2549 	sub	a, (hl)
      000A09 23                    2550 	inc	hl
      000A0A 1A                    2551 	ld	a, (de)
      000A0B 9E                    2552 	sbc	a, (hl)
      000A0C 1A                    2553 	ld	a, (de)
      000A0D 57                    2554 	ld	d, a
      000A0E CB 7E                 2555 	bit	7, (hl)
      000A10 28 07                 2556 	jr	Z, 00259$
      000A12 CB 7A                 2557 	bit	7, d
      000A14 20 08                 2558 	jr	NZ, 00260$
      000A16 BF                    2559 	cp	a, a
      000A17 18 05                 2560 	jr	00260$
      000A19                       2561 00259$:
      000A19 CB 7A                 2562 	bit	7, d
      000A1B 28 01                 2563 	jr	Z, 00260$
      000A1D 37                    2564 	scf
      000A1E                       2565 00260$:
      000A1E 38 04                 2566 	jr	C, 00140$
      000A20 3E 01                 2567 	ld	a, #0x01
      000A22 18 19                 2568 	jr	00141$
      000A24                       2569 00140$:
      000A24 FAr0Fr00              2570 	ld	a, (#_last_y)
      000A27 91                    2571 	sub	a, c
      000A28 38 09                 2572 	jr	C, 00142$
      000A2A F8 07                 2573 	ldhl	sp,	#7
      000A2C 3E 02                 2574 	ld	a, #0x02
      000A2E 22                    2575 	ld	(hl+), a
      000A2F AF                    2576 	xor	a, a
      000A30 77                    2577 	ld	(hl), a
      000A31 18 07                 2578 	jr	00143$
      000A33                       2579 00142$:
      000A33 F8 07                 2580 	ldhl	sp,	#7
      000A35 3E 03                 2581 	ld	a, #0x03
      000A37 22                    2582 	ld	(hl+), a
      000A38 AF                    2583 	xor	a, a
      000A39 77                    2584 	ld	(hl), a
      000A3A                       2585 00143$:
      000A3A F8 07                 2586 	ldhl	sp,	#7
      000A3C 2A                    2587 	ld	a, (hl+)
      000A3D                       2588 00141$:
      000A3D F8 04                 2589 	ldhl	sp,	#4
      000A3F B6                    2590 	or	a, (hl)
      000A40 4F                    2591 	ld	c, a
                           000A41  2592 	C$player.c$429$3_1$322	= .
                                   2593 	.globl	C$player.c$429$3_1$322
                                   2594 ;src/player.c:429: if((player_y > last_y) ? (player_y - last_y) > 50 : (last_y - player_y) > 50){
      000A41 FAr0Fr00              2595 	ld	a, (#_last_y)
      000A44 21r0Dr00              2596 	ld	hl, #_player_y
      000A47 96                    2597 	sub	a, (hl)
      000A48 30 2C                 2598 	jr	NC, 00144$
      000A4A 7E                    2599 	ld	a, (hl)
      000A4B 06 00                 2600 	ld	b, #0x00
      000A4D 21r0Fr00              2601 	ld	hl, #_last_y
      000A50 5E                    2602 	ld	e, (hl)
      000A51 16 00                 2603 	ld	d, #0x00
      000A53 93                    2604 	sub	a, e
      000A54 6F                    2605 	ld	l, a
                                   2606 ;	spillPairReg hl
                                   2607 ;	spillPairReg hl
      000A55 78                    2608 	ld	a, b
      000A56 9A                    2609 	sbc	a, d
      000A57 67                    2610 	ld	h, a
                                   2611 ;	spillPairReg hl
                                   2612 ;	spillPairReg hl
      000A58 5C                    2613 	ld	e, h
      000A59 16 00                 2614 	ld	d, #0x00
      000A5B 3E 32                 2615 	ld	a, #0x32
      000A5D BD                    2616 	cp	a, l
      000A5E 3E 00                 2617 	ld	a, #0x00
      000A60 9C                    2618 	sbc	a, h
      000A61 CB 7B                 2619 	bit	7, e
      000A63 28 07                 2620 	jr	Z, 00261$
      000A65 CB 7A                 2621 	bit	7, d
      000A67 20 08                 2622 	jr	NZ, 00262$
      000A69 BF                    2623 	cp	a, a
      000A6A 18 05                 2624 	jr	00262$
      000A6C                       2625 00261$:
      000A6C CB 7A                 2626 	bit	7, d
      000A6E 28 01                 2627 	jr	Z, 00262$
      000A70 37                    2628 	scf
      000A71                       2629 00262$:
      000A71 3E 00                 2630 	ld	a, #0x00
      000A73 17                    2631 	rla
      000A74 18 2E                 2632 	jr	00145$
      000A76                       2633 00144$:
      000A76 21r0Fr00              2634 	ld	hl, #_last_y
      000A79 5E                    2635 	ld	e, (hl)
      000A7A 16 00                 2636 	ld	d, #0x00
      000A7C 21r0Dr00              2637 	ld	hl, #_player_y
      000A7F 6E                    2638 	ld	l, (hl)
                                   2639 ;	spillPairReg hl
                                   2640 ;	spillPairReg hl
      000A80 26 00                 2641 	ld	h, #0x00
                                   2642 ;	spillPairReg hl
                                   2643 ;	spillPairReg hl
      000A82 7B                    2644 	ld	a, e
      000A83 95                    2645 	sub	a, l
      000A84 6F                    2646 	ld	l, a
                                   2647 ;	spillPairReg hl
                                   2648 ;	spillPairReg hl
      000A85 7A                    2649 	ld	a, d
      000A86 9C                    2650 	sbc	a, h
      000A87 47                    2651 	ld	b, a
      000A88 58                    2652 	ld	e, b
      000A89 16 00                 2653 	ld	d, #0x00
      000A8B 3E 32                 2654 	ld	a, #0x32
      000A8D BD                    2655 	cp	a, l
      000A8E 3E 00                 2656 	ld	a, #0x00
      000A90 98                    2657 	sbc	a, b
      000A91 CB 7B                 2658 	bit	7, e
      000A93 28 07                 2659 	jr	Z, 00263$
      000A95 CB 7A                 2660 	bit	7, d
      000A97 20 08                 2661 	jr	NZ, 00264$
      000A99 BF                    2662 	cp	a, a
      000A9A 18 05                 2663 	jr	00264$
      000A9C                       2664 00263$:
      000A9C CB 7A                 2665 	bit	7, d
      000A9E 28 01                 2666 	jr	Z, 00264$
      000AA0 37                    2667 	scf
      000AA1                       2668 00264$:
      000AA1 3E 00                 2669 	ld	a, #0x00
      000AA3 17                    2670 	rla
      000AA4                       2671 00145$:
      000AA4 B7                    2672 	or	a, a
      000AA5 28 06                 2673 	jr	Z, 00106$
                           000AA7  2674 	C$player.c$430$4_1$323	= .
                                   2675 	.globl	C$player.c$430$4_1$323
                                   2676 ;src/player.c:430: external_point_area = (external_point_area & 0xF0) + 0x02; //check for overflow height
      000AA7 79                    2677 	ld	a, c
      000AA8 E6 F0                 2678 	and	a, #0xf0
      000AAA C6 02                 2679 	add	a, #0x02
      000AAC 4F                    2680 	ld	c, a
      000AAD                       2681 00106$:
                           000AAD  2682 	C$player.c$433$3_1$322	= .
                                   2683 	.globl	C$player.c$433$3_1$322
                                   2684 ;src/player.c:433: if(rect_functions[r->type](external_point_area)) continue;
      000AAD F8 02                 2685 	ldhl	sp,#2
      000AAF 2A                    2686 	ld	a, (hl+)
      000AB0 5F                    2687 	ld	e, a
      000AB1 56                    2688 	ld	d, (hl)
      000AB2 21 04 00              2689 	ld	hl, #0x0004
      000AB5 19                    2690 	add	hl, de
      000AB6 5D                    2691 	ld	e, l
      000AB7 54                    2692 	ld	d, h
      000AB8 1A                    2693 	ld	a, (de)
      000AB9 26 00                 2694 	ld	h, #0x00
                                   2695 ;	spillPairReg hl
                                   2696 ;	spillPairReg hl
      000ABB 6F                    2697 	ld	l, a
      000ABC 29                    2698 	add	hl, hl
      000ABD 11r04r00              2699 	ld	de, #_rect_functions
      000AC0 19                    2700 	add	hl, de
      000AC1 2A                    2701 	ld	a, (hl+)
      000AC2 47                    2702 	ld	b, a
      000AC3 66                    2703 	ld	h, (hl)
                                   2704 ;	spillPairReg hl
      000AC4 C5                    2705 	push	bc
      000AC5 79                    2706 	ld	a, c
      000AC6 F5                    2707 	push	af
      000AC7 33                    2708 	inc	sp
      000AC8 68                    2709 	ld	l, b
                                   2710 ;	spillPairReg hl
                                   2711 ;	spillPairReg hl
      000AC9 CDr00r00              2712 	call	___sdcc_call_hl
      000ACC 33                    2713 	inc	sp
      000ACD 6B                    2714 	ld	l, e
                                   2715 ;	spillPairReg hl
                                   2716 ;	spillPairReg hl
      000ACE C1                    2717 	pop	bc
      000ACF CB 45                 2718 	bit	0, l
      000AD1 C2r83r0E              2719 	jp	NZ, 00131$
                           000AD4  2720 	C$player.c$436$3_2$324	= .
                                   2721 	.globl	C$player.c$436$3_2$324
                                   2722 ;src/player.c:436: switch (external_point_area)
      000AD4 79                    2723 	ld	a,c
      000AD5 FE 11                 2724 	cp	a,#0x11
      000AD7 28 26                 2725 	jr	Z, 00109$
      000AD9 FE 12                 2726 	cp	a,#0x12
      000ADB CArDAr0B              2727 	jp	Z,00113$
      000ADE FE 13                 2728 	cp	a,#0x13
      000AE0 CArA1r0C              2729 	jp	Z,00117$
      000AE3 FE 21                 2730 	cp	a,#0x21
      000AE5 CArBBr0C              2731 	jp	Z,00118$
      000AE8 FE 22                 2732 	cp	a,#0x22
      000AEA CAr8Ar0D              2733 	jp	Z,00122$
      000AED FE 23                 2734 	cp	a,#0x23
      000AEF CAr3Dr0E              2735 	jp	Z,00126$
      000AF2 FE 31                 2736 	cp	a,#0x31
      000AF4 CAr4Er0E              2737 	jp	Z,00127$
      000AF7 D6 32                 2738 	sub	a, #0x32
      000AF9 CAr74r0E              2739 	jp	Z,00128$
      000AFC C3r83r0E              2740 	jp	00131$
                           000AFF  2741 	C$player.c$438$4_2$325	= .
                                   2742 	.globl	C$player.c$438$4_2$325
                                   2743 ;src/player.c:438: case RIGHT_UP: // RIGHT - UP
      000AFF                       2744 00109$:
                           000AFF  2745 	C$player.c$439$4_2$325	= .
                                   2746 	.globl	C$player.c$439$4_2$325
                                   2747 ;src/player.c:439: rx = r->x + r->size_x;
      000AFF F8 02                 2748 	ldhl	sp,#2
      000B01 2A                    2749 	ld	a, (hl+)
      000B02 5F                    2750 	ld	e, a
      000B03 56                    2751 	ld	d, (hl)
      000B04 1A                    2752 	ld	a, (de)
      000B05 F8 09                 2753 	ldhl	sp,#9
      000B07 5E                    2754 	ld	e, (hl)
      000B08 23                    2755 	inc	hl
      000B09 56                    2756 	ld	d, (hl)
      000B0A F5                    2757 	push	af
      000B0B 1A                    2758 	ld	a, (de)
      000B0C F8 06                 2759 	ldhl	sp,	#6
      000B0E 77                    2760 	ld	(hl), a
      000B0F F1                    2761 	pop	af
      000B10 86                    2762 	add	a, (hl)
      000B11 23                    2763 	inc	hl
      000B12 77                    2764 	ld	(hl), a
                           000B13  2765 	C$player.c$440$4_2$325	= .
                                   2766 	.globl	C$player.c$440$4_2$325
                                   2767 ;src/player.c:440: ry = r->y - r->size_y;
      000B13 F8 0D                 2768 	ldhl	sp,#13
      000B15 2A                    2769 	ld	a, (hl+)
      000B16 5F                    2770 	ld	e, a
      000B17 3A                    2771 	ld	a, (hl-)
      000B18 2B                    2772 	dec	hl
      000B19 2B                    2773 	dec	hl
      000B1A 57                    2774 	ld	d, a
      000B1B 1A                    2775 	ld	a, (de)
      000B1C 5E                    2776 	ld	e, (hl)
      000B1D 23                    2777 	inc	hl
      000B1E 56                    2778 	ld	d, (hl)
      000B1F F5                    2779 	push	af
      000B20 1A                    2780 	ld	a, (de)
      000B21 4F                    2781 	ld	c, a
      000B22 F1                    2782 	pop	af
      000B23 91                    2783 	sub	a, c
      000B24 F8 06                 2784 	ldhl	sp,	#6
      000B26 77                    2785 	ld	(hl), a
      000B27 4E                    2786 	ld	c, (hl)
                           000B28  2787 	C$player.c$441$4_2$325	= .
                                   2788 	.globl	C$player.c$441$4_2$325
                                   2789 ;src/player.c:441: if((ry-player_y)*(last_x - player_x) < (last_y - player_y)*(rx-player_x)){
      000B28 06 00                 2790 	ld	b, #0x00
      000B2A FAr0Dr00              2791 	ld	a, (#_player_y)
      000B2D F8 07                 2792 	ldhl	sp,	#7
      000B2F 22                    2793 	ld	(hl+), a
      000B30 AF                    2794 	xor	a, a
      000B31 32                    2795 	ld	(hl-), a
      000B32 2A                    2796 	ld	a, (hl+)
      000B33 5F                    2797 	ld	e, a
      000B34 56                    2798 	ld	d, (hl)
      000B35 79                    2799 	ld	a, c
      000B36 93                    2800 	sub	a, e
      000B37 5F                    2801 	ld	e, a
      000B38 78                    2802 	ld	a, b
      000B39 9A                    2803 	sbc	a, d
      000B3A F8 0E                 2804 	ldhl	sp,	#14
      000B3C 32                    2805 	ld	(hl-), a
      000B3D 73                    2806 	ld	(hl), e
      000B3E FAr0Er00              2807 	ld	a, (#_last_x)
      000B41 1E 00                 2808 	ld	e, #0x00
      000B43 21r0Cr00              2809 	ld	hl, #_player_x
      000B46 4E                    2810 	ld	c, (hl)
      000B47 06 00                 2811 	ld	b, #0x00
      000B49 91                    2812 	sub	a, c
      000B4A 6F                    2813 	ld	l, a
                                   2814 ;	spillPairReg hl
                                   2815 ;	spillPairReg hl
      000B4B 7B                    2816 	ld	a, e
      000B4C 98                    2817 	sbc	a, b
      000B4D 67                    2818 	ld	h, a
                                   2819 ;	spillPairReg hl
                                   2820 ;	spillPairReg hl
      000B4E C5                    2821 	push	bc
      000B4F E5                    2822 	push	hl
      000B50 F8 11                 2823 	ldhl	sp,	#17
      000B52 2A                    2824 	ld	a, (hl+)
      000B53 5F                    2825 	ld	e, a
      000B54 56                    2826 	ld	d, (hl)
      000B55 D5                    2827 	push	de
      000B56 CDr00r00              2828 	call	__mulint
      000B59 E8 04                 2829 	add	sp, #4
      000B5B F8 0B                 2830 	ldhl	sp,	#11
      000B5D 7B                    2831 	ld	a, e
      000B5E 22                    2832 	ld	(hl+), a
      000B5F 72                    2833 	ld	(hl), d
      000B60 C1                    2834 	pop	bc
      000B61 FAr0Fr00              2835 	ld	a, (#_last_y)
      000B64 F8 0B                 2836 	ldhl	sp,	#11
      000B66 22                    2837 	ld	(hl+), a
      000B67 AF                    2838 	xor	a, a
      000B68 32                    2839 	ld	(hl-), a
      000B69 2A                    2840 	ld	a, (hl+)
      000B6A 5F                    2841 	ld	e, a
      000B6B 56                    2842 	ld	d, (hl)
      000B6C F8 07                 2843 	ldhl	sp,	#7
      000B6E 2A                    2844 	ld	a,	(hl+)
      000B6F 66                    2845 	ld	h, (hl)
      000B70 6F                    2846 	ld	l, a
      000B71 7B                    2847 	ld	a, e
      000B72 95                    2848 	sub	a, l
      000B73 5F                    2849 	ld	e, a
      000B74 7A                    2850 	ld	a, d
      000B75 9C                    2851 	sbc	a, h
      000B76 F8 0E                 2852 	ldhl	sp,	#14
      000B78 32                    2853 	ld	(hl-), a
      000B79 73                    2854 	ld	(hl), e
      000B7A F8 05                 2855 	ldhl	sp,	#5
      000B7C 5E                    2856 	ld	e, (hl)
      000B7D 16 00                 2857 	ld	d, #0x00
      000B7F 7B                    2858 	ld	a, e
      000B80 91                    2859 	sub	a, c
      000B81 4F                    2860 	ld	c, a
      000B82 7A                    2861 	ld	a, d
      000B83 98                    2862 	sbc	a, b
      000B84 47                    2863 	ld	b, a
      000B85 C5                    2864 	push	bc
      000B86 F8 0F                 2865 	ldhl	sp,	#15
      000B88 2A                    2866 	ld	a, (hl+)
      000B89 5F                    2867 	ld	e, a
      000B8A 56                    2868 	ld	d, (hl)
      000B8B D5                    2869 	push	de
      000B8C CDr00r00              2870 	call	__mulint
      000B8F E8 04                 2871 	add	sp, #4
      000B91 4B                    2872 	ld	c, e
      000B92 42                    2873 	ld	b, d
      000B93 F8 09                 2874 	ldhl	sp,	#9
      000B95 2A                    2875 	ld	a, (hl+)
      000B96 91                    2876 	sub	a, c
      000B97 7E                    2877 	ld	a, (hl)
      000B98 98                    2878 	sbc	a, b
      000B99 56                    2879 	ld	d, (hl)
      000B9A 78                    2880 	ld	a, b
      000B9B CB 7F                 2881 	bit	7,a
      000B9D 28 07                 2882 	jr	Z, 00273$
      000B9F CB 7A                 2883 	bit	7, d
      000BA1 20 08                 2884 	jr	NZ, 00274$
      000BA3 BF                    2885 	cp	a, a
      000BA4 18 05                 2886 	jr	00274$
      000BA6                       2887 00273$:
      000BA6 CB 7A                 2888 	bit	7, d
      000BA8 28 01                 2889 	jr	Z, 00274$
      000BAA 37                    2890 	scf
      000BAB                       2891 00274$:
      000BAB 30 14                 2892 	jr	NC, 00111$
                           000BAD  2893 	C$player.c$443$5_2$326	= .
                                   2894 	.globl	C$player.c$443$5_2$326
                                   2895 ;src/player.c:443: player_x = r->x + r->size_x + 1;
      000BAD F8 02                 2896 	ldhl	sp,#2
      000BAF 2A                    2897 	ld	a, (hl+)
      000BB0 5F                    2898 	ld	e, a
      000BB1 2A                    2899 	ld	a, (hl+)
      000BB2 57                    2900 	ld	d, a
      000BB3 1A                    2901 	ld	a, (de)
      000BB4 86                    2902 	add	a, (hl)
      000BB5 3C                    2903 	inc	a
      000BB6 EAr0Cr00              2904 	ld	(#_player_x),a
                           000BB9  2905 	C$player.c$444$5_2$326	= .
                                   2906 	.globl	C$player.c$444$5_2$326
                                   2907 ;src/player.c:444: x_speed = 0;
      000BB9 21r07r00              2908 	ld	hl, #_x_speed
      000BBC 36 00                 2909 	ld	(hl), #0x00
      000BBE C3r83r0E              2910 	jp	00131$
      000BC1                       2911 00111$:
                           000BC1  2912 	C$player.c$447$5_2$327	= .
                                   2913 	.globl	C$player.c$447$5_2$327
                                   2914 ;src/player.c:447: player_y = r->y - r->size_y - 1;
      000BC1 F8 06                 2915 	ldhl	sp,	#6
      000BC3 7E                    2916 	ld	a, (hl)
      000BC4 3D                    2917 	dec	a
      000BC5 EAr0Dr00              2918 	ld	(#_player_y),a
                           000BC8  2919 	C$player.c$448$5_2$327	= .
                                   2920 	.globl	C$player.c$448$5_2$327
                                   2921 ;src/player.c:448: is_grounded = true;
      000BC8 21r09r00              2922 	ld	hl, #_is_grounded
      000BCB 36 01                 2923 	ld	(hl), #0x01
                           000BCD  2924 	C$player.c$449$5_2$327	= .
                                   2925 	.globl	C$player.c$449$5_2$327
                                   2926 ;src/player.c:449: current_coyote_frames = 0;
      000BCD 21r11r00              2927 	ld	hl, #_current_coyote_frames
      000BD0 36 00                 2928 	ld	(hl), #0x00
                           000BD2  2929 	C$player.c$450$5_2$327	= .
                                   2930 	.globl	C$player.c$450$5_2$327
                                   2931 ;src/player.c:450: y_speed = 0;
      000BD2 21r0Br00              2932 	ld	hl, #_y_speed
      000BD5 36 00                 2933 	ld	(hl), #0x00
                           000BD7  2934 	C$player.c$452$4_2$325	= .
                                   2935 	.globl	C$player.c$452$4_2$325
                                   2936 ;src/player.c:452: break;
      000BD7 C3r83r0E              2937 	jp	00131$
                           000BDA  2938 	C$player.c$454$4_2$325	= .
                                   2939 	.globl	C$player.c$454$4_2$325
                                   2940 ;src/player.c:454: case RIGHT_DOWN: // RIGHT - DOWN
      000BDA                       2941 00113$:
                           000BDA  2942 	C$player.c$455$4_2$325	= .
                                   2943 	.globl	C$player.c$455$4_2$325
                                   2944 ;src/player.c:455: rx = r->x + r->size_x;
      000BDA F8 02                 2945 	ldhl	sp,#2
      000BDC 2A                    2946 	ld	a, (hl+)
      000BDD 5F                    2947 	ld	e, a
      000BDE 56                    2948 	ld	d, (hl)
      000BDF 1A                    2949 	ld	a, (de)
      000BE0 F8 09                 2950 	ldhl	sp,#9
      000BE2 5E                    2951 	ld	e, (hl)
      000BE3 23                    2952 	inc	hl
      000BE4 56                    2953 	ld	d, (hl)
      000BE5 F5                    2954 	push	af
      000BE6 1A                    2955 	ld	a, (de)
      000BE7 F8 06                 2956 	ldhl	sp,	#6
      000BE9 77                    2957 	ld	(hl), a
      000BEA F1                    2958 	pop	af
      000BEB 86                    2959 	add	a, (hl)
      000BEC 23                    2960 	inc	hl
      000BED 77                    2961 	ld	(hl), a
                           000BEE  2962 	C$player.c$456$4_2$325	= .
                                   2963 	.globl	C$player.c$456$4_2$325
                                   2964 ;src/player.c:456: ry = r->y;
      000BEE F8 0D                 2965 	ldhl	sp,#13
      000BF0 2A                    2966 	ld	a, (hl+)
      000BF1 5F                    2967 	ld	e, a
      000BF2 56                    2968 	ld	d, (hl)
      000BF3 1A                    2969 	ld	a, (de)
      000BF4 F8 06                 2970 	ldhl	sp,	#6
      000BF6 77                    2971 	ld	(hl), a
      000BF7 4E                    2972 	ld	c, (hl)
                           000BF8  2973 	C$player.c$457$4_2$325	= .
                                   2974 	.globl	C$player.c$457$4_2$325
                                   2975 ;src/player.c:457: if((ry-player_y)*(last_x - player_x) > (last_y - player_y)*(rx-player_x)){
      000BF8 06 00                 2976 	ld	b, #0x00
      000BFA FAr0Dr00              2977 	ld	a, (#_player_y)
      000BFD F8 07                 2978 	ldhl	sp,	#7
      000BFF 22                    2979 	ld	(hl+), a
      000C00 AF                    2980 	xor	a, a
      000C01 32                    2981 	ld	(hl-), a
      000C02 2A                    2982 	ld	a, (hl+)
      000C03 5F                    2983 	ld	e, a
      000C04 56                    2984 	ld	d, (hl)
      000C05 79                    2985 	ld	a, c
      000C06 93                    2986 	sub	a, e
      000C07 5F                    2987 	ld	e, a
      000C08 78                    2988 	ld	a, b
      000C09 9A                    2989 	sbc	a, d
      000C0A F8 0E                 2990 	ldhl	sp,	#14
      000C0C 32                    2991 	ld	(hl-), a
      000C0D 73                    2992 	ld	(hl), e
      000C0E FAr0Er00              2993 	ld	a, (#_last_x)
      000C11 1E 00                 2994 	ld	e, #0x00
      000C13 21r0Cr00              2995 	ld	hl, #_player_x
      000C16 4E                    2996 	ld	c, (hl)
      000C17 06 00                 2997 	ld	b, #0x00
      000C19 91                    2998 	sub	a, c
      000C1A 6F                    2999 	ld	l, a
                                   3000 ;	spillPairReg hl
                                   3001 ;	spillPairReg hl
      000C1B 7B                    3002 	ld	a, e
      000C1C 98                    3003 	sbc	a, b
      000C1D 67                    3004 	ld	h, a
                                   3005 ;	spillPairReg hl
                                   3006 ;	spillPairReg hl
      000C1E C5                    3007 	push	bc
      000C1F E5                    3008 	push	hl
      000C20 F8 11                 3009 	ldhl	sp,	#17
      000C22 2A                    3010 	ld	a, (hl+)
      000C23 5F                    3011 	ld	e, a
      000C24 56                    3012 	ld	d, (hl)
      000C25 D5                    3013 	push	de
      000C26 CDr00r00              3014 	call	__mulint
      000C29 E8 04                 3015 	add	sp, #4
      000C2B F8 0B                 3016 	ldhl	sp,	#11
      000C2D 7B                    3017 	ld	a, e
      000C2E 22                    3018 	ld	(hl+), a
      000C2F 72                    3019 	ld	(hl), d
      000C30 C1                    3020 	pop	bc
      000C31 FAr0Fr00              3021 	ld	a, (#_last_y)
      000C34 F8 0B                 3022 	ldhl	sp,	#11
      000C36 22                    3023 	ld	(hl+), a
      000C37 AF                    3024 	xor	a, a
      000C38 32                    3025 	ld	(hl-), a
      000C39 2A                    3026 	ld	a, (hl+)
      000C3A 5F                    3027 	ld	e, a
      000C3B 56                    3028 	ld	d, (hl)
      000C3C F8 07                 3029 	ldhl	sp,	#7
      000C3E 2A                    3030 	ld	a,	(hl+)
      000C3F 66                    3031 	ld	h, (hl)
      000C40 6F                    3032 	ld	l, a
      000C41 7B                    3033 	ld	a, e
      000C42 95                    3034 	sub	a, l
      000C43 5F                    3035 	ld	e, a
      000C44 7A                    3036 	ld	a, d
      000C45 9C                    3037 	sbc	a, h
      000C46 F8 0E                 3038 	ldhl	sp,	#14
      000C48 32                    3039 	ld	(hl-), a
      000C49 73                    3040 	ld	(hl), e
      000C4A F8 05                 3041 	ldhl	sp,	#5
      000C4C 5E                    3042 	ld	e, (hl)
      000C4D 16 00                 3043 	ld	d, #0x00
      000C4F 7B                    3044 	ld	a, e
      000C50 91                    3045 	sub	a, c
      000C51 4F                    3046 	ld	c, a
      000C52 7A                    3047 	ld	a, d
      000C53 98                    3048 	sbc	a, b
      000C54 47                    3049 	ld	b, a
      000C55 C5                    3050 	push	bc
      000C56 F8 0F                 3051 	ldhl	sp,	#15
      000C58 2A                    3052 	ld	a, (hl+)
      000C59 5F                    3053 	ld	e, a
      000C5A 56                    3054 	ld	d, (hl)
      000C5B D5                    3055 	push	de
      000C5C CDr00r00              3056 	call	__mulint
      000C5F E8 04                 3057 	add	sp, #4
      000C61 4B                    3058 	ld	c, e
      000C62 42                    3059 	ld	b, d
      000C63 F8 09                 3060 	ldhl	sp,	#9
      000C65 79                    3061 	ld	a, c
      000C66 96                    3062 	sub	a, (hl)
      000C67 23                    3063 	inc	hl
      000C68 78                    3064 	ld	a, b
      000C69 9E                    3065 	sbc	a, (hl)
      000C6A 78                    3066 	ld	a, b
      000C6B 57                    3067 	ld	d, a
      000C6C CB 7E                 3068 	bit	7, (hl)
      000C6E 28 07                 3069 	jr	Z, 00275$
      000C70 CB 7A                 3070 	bit	7, d
      000C72 20 08                 3071 	jr	NZ, 00276$
      000C74 BF                    3072 	cp	a, a
      000C75 18 05                 3073 	jr	00276$
      000C77                       3074 00275$:
      000C77 CB 7A                 3075 	bit	7, d
      000C79 28 01                 3076 	jr	Z, 00276$
      000C7B 37                    3077 	scf
      000C7C                       3078 00276$:
      000C7C 30 14                 3079 	jr	NC, 00115$
                           000C7E  3080 	C$player.c$459$5_2$328	= .
                                   3081 	.globl	C$player.c$459$5_2$328
                                   3082 ;src/player.c:459: player_x = r->x + r->size_x + 1;
      000C7E F8 02                 3083 	ldhl	sp,#2
      000C80 2A                    3084 	ld	a, (hl+)
      000C81 5F                    3085 	ld	e, a
      000C82 2A                    3086 	ld	a, (hl+)
      000C83 57                    3087 	ld	d, a
      000C84 1A                    3088 	ld	a, (de)
      000C85 86                    3089 	add	a, (hl)
      000C86 3C                    3090 	inc	a
      000C87 EAr0Cr00              3091 	ld	(#_player_x),a
                           000C8A  3092 	C$player.c$460$5_2$328	= .
                                   3093 	.globl	C$player.c$460$5_2$328
                                   3094 ;src/player.c:460: x_speed = 0;
      000C8A 21r07r00              3095 	ld	hl, #_x_speed
      000C8D 36 00                 3096 	ld	(hl), #0x00
      000C8F C3r83r0E              3097 	jp	00131$
      000C92                       3098 00115$:
                           000C92  3099 	C$player.c$463$5_2$329	= .
                                   3100 	.globl	C$player.c$463$5_2$329
                                   3101 ;src/player.c:463: player_y = r->y + 1;
      000C92 F8 06                 3102 	ldhl	sp,	#6
      000C94 7E                    3103 	ld	a, (hl)
      000C95 3C                    3104 	inc	a
      000C96 EAr0Dr00              3105 	ld	(#_player_y),a
                           000C99  3106 	C$player.c$464$5_2$329	= .
                                   3107 	.globl	C$player.c$464$5_2$329
                                   3108 ;src/player.c:464: y_speed = 0;
      000C99 21r0Br00              3109 	ld	hl, #_y_speed
      000C9C 36 00                 3110 	ld	(hl), #0x00
                           000C9E  3111 	C$player.c$467$4_2$325	= .
                                   3112 	.globl	C$player.c$467$4_2$325
                                   3113 ;src/player.c:467: break;
      000C9E C3r83r0E              3114 	jp	00131$
                           000CA1  3115 	C$player.c$469$4_2$325	= .
                                   3116 	.globl	C$player.c$469$4_2$325
                                   3117 ;src/player.c:469: case RIGHT_CENTER: // RIGHT - CENTER
      000CA1                       3118 00117$:
                           000CA1  3119 	C$player.c$470$4_2$325	= .
                                   3120 	.globl	C$player.c$470$4_2$325
                                   3121 ;src/player.c:470: player_x = r->x + r->size_x + 1;
      000CA1 F8 02                 3122 	ldhl	sp,#2
      000CA3 2A                    3123 	ld	a, (hl+)
      000CA4 5F                    3124 	ld	e, a
      000CA5 56                    3125 	ld	d, (hl)
      000CA6 1A                    3126 	ld	a, (de)
      000CA7 4F                    3127 	ld	c, a
      000CA8 F8 09                 3128 	ldhl	sp,#9
      000CAA 2A                    3129 	ld	a, (hl+)
      000CAB 5F                    3130 	ld	e, a
      000CAC 56                    3131 	ld	d, (hl)
      000CAD 1A                    3132 	ld	a, (de)
      000CAE 81                    3133 	add	a, c
      000CAF 3C                    3134 	inc	a
      000CB0 EAr0Cr00              3135 	ld	(#_player_x),a
                           000CB3  3136 	C$player.c$471$4_2$325	= .
                                   3137 	.globl	C$player.c$471$4_2$325
                                   3138 ;src/player.c:471: x_speed = 0;
      000CB3 21r07r00              3139 	ld	hl, #_x_speed
      000CB6 36 00                 3140 	ld	(hl), #0x00
                           000CB8  3141 	C$player.c$472$4_2$325	= .
                                   3142 	.globl	C$player.c$472$4_2$325
                                   3143 ;src/player.c:472: break;
      000CB8 C3r83r0E              3144 	jp	00131$
                           000CBB  3145 	C$player.c$474$4_2$325	= .
                                   3146 	.globl	C$player.c$474$4_2$325
                                   3147 ;src/player.c:474: case LEFT_UP: // LEFT - UP
      000CBB                       3148 00118$:
                           000CBB  3149 	C$player.c$475$4_2$325	= .
                                   3150 	.globl	C$player.c$475$4_2$325
                                   3151 ;src/player.c:475: rx = r->x;
      000CBB F8 02                 3152 	ldhl	sp,#2
      000CBD 2A                    3153 	ld	a, (hl+)
      000CBE 5F                    3154 	ld	e, a
      000CBF 56                    3155 	ld	d, (hl)
      000CC0 1A                    3156 	ld	a, (de)
      000CC1 F8 0A                 3157 	ldhl	sp,	#10
      000CC3 77                    3158 	ld	(hl), a
                           000CC4  3159 	C$player.c$476$4_2$325	= .
                                   3160 	.globl	C$player.c$476$4_2$325
                                   3161 ;src/player.c:476: ry = r->y - r->size_y;
      000CC4 F8 0D                 3162 	ldhl	sp,#13
      000CC6 2A                    3163 	ld	a, (hl+)
      000CC7 5F                    3164 	ld	e, a
      000CC8 3A                    3165 	ld	a, (hl-)
      000CC9 2B                    3166 	dec	hl
      000CCA 2B                    3167 	dec	hl
      000CCB 57                    3168 	ld	d, a
      000CCC 1A                    3169 	ld	a, (de)
      000CCD 5E                    3170 	ld	e, (hl)
      000CCE 23                    3171 	inc	hl
      000CCF 56                    3172 	ld	d, (hl)
      000CD0 F5                    3173 	push	af
      000CD1 1A                    3174 	ld	a, (de)
      000CD2 4F                    3175 	ld	c, a
      000CD3 F1                    3176 	pop	af
      000CD4 91                    3177 	sub	a, c
      000CD5 F8 05                 3178 	ldhl	sp,	#5
      000CD7 77                    3179 	ld	(hl), a
      000CD8 4E                    3180 	ld	c, (hl)
                           000CD9  3181 	C$player.c$477$4_2$325	= .
                                   3182 	.globl	C$player.c$477$4_2$325
                                   3183 ;src/player.c:477: if((ry-player_y)*(last_x - player_x) > (last_y - player_y)*(rx-player_x)){
      000CD9 06 00                 3184 	ld	b, #0x00
      000CDB FAr0Dr00              3185 	ld	a, (#_player_y)
      000CDE F8 06                 3186 	ldhl	sp,	#6
      000CE0 22                    3187 	ld	(hl+), a
      000CE1 AF                    3188 	xor	a, a
      000CE2 32                    3189 	ld	(hl-), a
      000CE3 2A                    3190 	ld	a, (hl+)
      000CE4 5F                    3191 	ld	e, a
      000CE5 56                    3192 	ld	d, (hl)
      000CE6 79                    3193 	ld	a, c
      000CE7 93                    3194 	sub	a, e
      000CE8 5F                    3195 	ld	e, a
      000CE9 78                    3196 	ld	a, b
      000CEA 9A                    3197 	sbc	a, d
      000CEB F8 0E                 3198 	ldhl	sp,	#14
      000CED 32                    3199 	ld	(hl-), a
      000CEE 73                    3200 	ld	(hl), e
      000CEF FAr0Er00              3201 	ld	a, (#_last_x)
      000CF2 1E 00                 3202 	ld	e, #0x00
      000CF4 21r0Cr00              3203 	ld	hl, #_player_x
      000CF7 4E                    3204 	ld	c, (hl)
      000CF8 06 00                 3205 	ld	b, #0x00
      000CFA 91                    3206 	sub	a, c
      000CFB 6F                    3207 	ld	l, a
                                   3208 ;	spillPairReg hl
                                   3209 ;	spillPairReg hl
      000CFC 7B                    3210 	ld	a, e
      000CFD 98                    3211 	sbc	a, b
      000CFE 67                    3212 	ld	h, a
                                   3213 ;	spillPairReg hl
                                   3214 ;	spillPairReg hl
      000CFF C5                    3215 	push	bc
      000D00 E5                    3216 	push	hl
      000D01 F8 11                 3217 	ldhl	sp,	#17
      000D03 2A                    3218 	ld	a, (hl+)
      000D04 5F                    3219 	ld	e, a
      000D05 56                    3220 	ld	d, (hl)
      000D06 D5                    3221 	push	de
      000D07 CDr00r00              3222 	call	__mulint
      000D0A E8 04                 3223 	add	sp, #4
      000D0C F8 0A                 3224 	ldhl	sp,	#10
      000D0E 7B                    3225 	ld	a, e
      000D0F 22                    3226 	ld	(hl+), a
      000D10 72                    3227 	ld	(hl), d
      000D11 C1                    3228 	pop	bc
      000D12 FAr0Fr00              3229 	ld	a, (#_last_y)
      000D15 F8 0B                 3230 	ldhl	sp,	#11
      000D17 22                    3231 	ld	(hl+), a
      000D18 AF                    3232 	xor	a, a
      000D19 32                    3233 	ld	(hl-), a
      000D1A 2A                    3234 	ld	a, (hl+)
      000D1B 5F                    3235 	ld	e, a
      000D1C 56                    3236 	ld	d, (hl)
      000D1D F8 06                 3237 	ldhl	sp,	#6
      000D1F 2A                    3238 	ld	a,	(hl+)
      000D20 66                    3239 	ld	h, (hl)
      000D21 6F                    3240 	ld	l, a
      000D22 7B                    3241 	ld	a, e
      000D23 95                    3242 	sub	a, l
      000D24 5F                    3243 	ld	e, a
      000D25 7A                    3244 	ld	a, d
      000D26 9C                    3245 	sbc	a, h
      000D27 F8 0E                 3246 	ldhl	sp,	#14
      000D29 32                    3247 	ld	(hl-), a
      000D2A 73                    3248 	ld	(hl), e
      000D2B F8 0A                 3249 	ldhl	sp,	#10
      000D2D 5E                    3250 	ld	e, (hl)
      000D2E 16 00                 3251 	ld	d, #0x00
      000D30 7B                    3252 	ld	a, e
      000D31 91                    3253 	sub	a, c
      000D32 4F                    3254 	ld	c, a
      000D33 7A                    3255 	ld	a, d
      000D34 98                    3256 	sbc	a, b
      000D35 47                    3257 	ld	b, a
      000D36 C5                    3258 	push	bc
      000D37 F8 0F                 3259 	ldhl	sp,	#15
      000D39 2A                    3260 	ld	a, (hl+)
      000D3A 5F                    3261 	ld	e, a
      000D3B 56                    3262 	ld	d, (hl)
      000D3C D5                    3263 	push	de
      000D3D CDr00r00              3264 	call	__mulint
      000D40 E8 04                 3265 	add	sp, #4
      000D42 4B                    3266 	ld	c, e
      000D43 42                    3267 	ld	b, d
      000D44 F8 08                 3268 	ldhl	sp,	#8
      000D46 79                    3269 	ld	a, c
      000D47 96                    3270 	sub	a, (hl)
      000D48 23                    3271 	inc	hl
      000D49 78                    3272 	ld	a, b
      000D4A 9E                    3273 	sbc	a, (hl)
      000D4B 78                    3274 	ld	a, b
      000D4C 57                    3275 	ld	d, a
      000D4D CB 7E                 3276 	bit	7, (hl)
      000D4F 28 07                 3277 	jr	Z, 00277$
      000D51 CB 7A                 3278 	bit	7, d
      000D53 20 08                 3279 	jr	NZ, 00278$
      000D55 BF                    3280 	cp	a, a
      000D56 18 05                 3281 	jr	00278$
      000D58                       3282 00277$:
      000D58 CB 7A                 3283 	bit	7, d
      000D5A 28 01                 3284 	jr	Z, 00278$
      000D5C 37                    3285 	scf
      000D5D                       3286 00278$:
      000D5D 30 12                 3287 	jr	NC, 00120$
                           000D5F  3288 	C$player.c$479$5_2$330	= .
                                   3289 	.globl	C$player.c$479$5_2$330
                                   3290 ;src/player.c:479: player_x = r->x - 1;
      000D5F F8 02                 3291 	ldhl	sp,#2
      000D61 2A                    3292 	ld	a, (hl+)
      000D62 5F                    3293 	ld	e, a
      000D63 56                    3294 	ld	d, (hl)
      000D64 1A                    3295 	ld	a, (de)
      000D65 3D                    3296 	dec	a
      000D66 EAr0Cr00              3297 	ld	(#_player_x),a
                           000D69  3298 	C$player.c$480$5_2$330	= .
                                   3299 	.globl	C$player.c$480$5_2$330
                                   3300 ;src/player.c:480: x_speed = 0;
      000D69 21r07r00              3301 	ld	hl, #_x_speed
      000D6C 36 00                 3302 	ld	(hl), #0x00
      000D6E C3r83r0E              3303 	jp	00131$
      000D71                       3304 00120$:
                           000D71  3305 	C$player.c$483$5_2$331	= .
                                   3306 	.globl	C$player.c$483$5_2$331
                                   3307 ;src/player.c:483: player_y = r->y - r->size_y - 1;
      000D71 F8 05                 3308 	ldhl	sp,	#5
      000D73 7E                    3309 	ld	a, (hl)
      000D74 3D                    3310 	dec	a
      000D75 EAr0Dr00              3311 	ld	(#_player_y),a
                           000D78  3312 	C$player.c$484$5_2$331	= .
                                   3313 	.globl	C$player.c$484$5_2$331
                                   3314 ;src/player.c:484: is_grounded = true;
      000D78 21r09r00              3315 	ld	hl, #_is_grounded
      000D7B 36 01                 3316 	ld	(hl), #0x01
                           000D7D  3317 	C$player.c$485$5_2$331	= .
                                   3318 	.globl	C$player.c$485$5_2$331
                                   3319 ;src/player.c:485: current_coyote_frames = 0;
      000D7D 21r11r00              3320 	ld	hl, #_current_coyote_frames
      000D80 36 00                 3321 	ld	(hl), #0x00
                           000D82  3322 	C$player.c$486$5_2$331	= .
                                   3323 	.globl	C$player.c$486$5_2$331
                                   3324 ;src/player.c:486: y_speed = 0;
      000D82 21r0Br00              3325 	ld	hl, #_y_speed
      000D85 36 00                 3326 	ld	(hl), #0x00
                           000D87  3327 	C$player.c$488$4_2$325	= .
                                   3328 	.globl	C$player.c$488$4_2$325
                                   3329 ;src/player.c:488: break;
      000D87 C3r83r0E              3330 	jp	00131$
                           000D8A  3331 	C$player.c$490$4_2$325	= .
                                   3332 	.globl	C$player.c$490$4_2$325
                                   3333 ;src/player.c:490: case LEFT_DOWN: // LEFT - DOWN
      000D8A                       3334 00122$:
                           000D8A  3335 	C$player.c$491$4_2$325	= .
                                   3336 	.globl	C$player.c$491$4_2$325
                                   3337 ;src/player.c:491: rx = r->x;
      000D8A F8 02                 3338 	ldhl	sp,#2
      000D8C 2A                    3339 	ld	a, (hl+)
      000D8D 5F                    3340 	ld	e, a
      000D8E 56                    3341 	ld	d, (hl)
      000D8F 1A                    3342 	ld	a, (de)
      000D90 F8 0C                 3343 	ldhl	sp,	#12
                           000D92  3344 	C$player.c$492$4_2$325	= .
                                   3345 	.globl	C$player.c$492$4_2$325
                                   3346 ;src/player.c:492: ry = r->y;
      000D92 22                    3347 	ld	(hl+), a
      000D93 2A                    3348 	ld	a, (hl+)
      000D94 5F                    3349 	ld	e, a
      000D95 56                    3350 	ld	d, (hl)
      000D96 1A                    3351 	ld	a, (de)
      000D97 77                    3352 	ld	(hl), a
      000D98 4E                    3353 	ld	c, (hl)
                           000D99  3354 	C$player.c$493$4_2$325	= .
                                   3355 	.globl	C$player.c$493$4_2$325
                                   3356 ;src/player.c:493: if((ry-player_y)*(last_x - player_x) < (last_y - player_y)*(rx-player_x)){
      000D99 06 00                 3357 	ld	b, #0x00
      000D9B FAr0Dr00              3358 	ld	a, (#_player_y)
      000D9E F8 04                 3359 	ldhl	sp,	#4
      000DA0 22                    3360 	ld	(hl+), a
      000DA1 AF                    3361 	xor	a, a
      000DA2 32                    3362 	ld	(hl-), a
      000DA3 2A                    3363 	ld	a, (hl+)
      000DA4 5F                    3364 	ld	e, a
      000DA5 56                    3365 	ld	d, (hl)
      000DA6 79                    3366 	ld	a, c
      000DA7 93                    3367 	sub	a, e
      000DA8 5F                    3368 	ld	e, a
      000DA9 78                    3369 	ld	a, b
      000DAA 9A                    3370 	sbc	a, d
      000DAB F8 0B                 3371 	ldhl	sp,	#11
      000DAD 32                    3372 	ld	(hl-), a
      000DAE 73                    3373 	ld	(hl), e
      000DAF FAr0Er00              3374 	ld	a, (#_last_x)
      000DB2 1E 00                 3375 	ld	e, #0x00
      000DB4 21r0Cr00              3376 	ld	hl, #_player_x
      000DB7 4E                    3377 	ld	c, (hl)
      000DB8 06 00                 3378 	ld	b, #0x00
      000DBA 91                    3379 	sub	a, c
      000DBB 6F                    3380 	ld	l, a
                                   3381 ;	spillPairReg hl
                                   3382 ;	spillPairReg hl
      000DBC 7B                    3383 	ld	a, e
      000DBD 98                    3384 	sbc	a, b
      000DBE 67                    3385 	ld	h, a
                                   3386 ;	spillPairReg hl
                                   3387 ;	spillPairReg hl
      000DBF C5                    3388 	push	bc
      000DC0 E5                    3389 	push	hl
      000DC1 F8 0E                 3390 	ldhl	sp,	#14
      000DC3 2A                    3391 	ld	a, (hl+)
      000DC4 5F                    3392 	ld	e, a
      000DC5 56                    3393 	ld	d, (hl)
      000DC6 D5                    3394 	push	de
      000DC7 CDr00r00              3395 	call	__mulint
      000DCA E8 04                 3396 	add	sp, #4
      000DCC F8 08                 3397 	ldhl	sp,	#8
      000DCE 7B                    3398 	ld	a, e
      000DCF 22                    3399 	ld	(hl+), a
      000DD0 72                    3400 	ld	(hl), d
      000DD1 C1                    3401 	pop	bc
      000DD2 FAr0Fr00              3402 	ld	a, (#_last_y)
      000DD5 F8 08                 3403 	ldhl	sp,	#8
      000DD7 22                    3404 	ld	(hl+), a
      000DD8 AF                    3405 	xor	a, a
      000DD9 32                    3406 	ld	(hl-), a
      000DDA 2A                    3407 	ld	a, (hl+)
      000DDB 5F                    3408 	ld	e, a
      000DDC 56                    3409 	ld	d, (hl)
      000DDD F8 04                 3410 	ldhl	sp,	#4
      000DDF 2A                    3411 	ld	a,	(hl+)
      000DE0 66                    3412 	ld	h, (hl)
      000DE1 6F                    3413 	ld	l, a
      000DE2 7B                    3414 	ld	a, e
      000DE3 95                    3415 	sub	a, l
      000DE4 5F                    3416 	ld	e, a
      000DE5 7A                    3417 	ld	a, d
      000DE6 9C                    3418 	sbc	a, h
      000DE7 F8 0B                 3419 	ldhl	sp,	#11
      000DE9 32                    3420 	ld	(hl-), a
      000DEA 7B                    3421 	ld	a, e
      000DEB 22                    3422 	ld	(hl+), a
      000DEC 23                    3423 	inc	hl
      000DED 3A                    3424 	ld	a, (hl-)
      000DEE 2B                    3425 	dec	hl
      000DEF 5F                    3426 	ld	e, a
      000DF0 16 00                 3427 	ld	d, #0x00
      000DF2 7B                    3428 	ld	a, e
      000DF3 91                    3429 	sub	a, c
      000DF4 4F                    3430 	ld	c, a
      000DF5 7A                    3431 	ld	a, d
      000DF6 98                    3432 	sbc	a, b
      000DF7 47                    3433 	ld	b, a
      000DF8 C5                    3434 	push	bc
      000DF9 2A                    3435 	ld	a, (hl+)
      000DFA 5F                    3436 	ld	e, a
      000DFB 56                    3437 	ld	d, (hl)
      000DFC D5                    3438 	push	de
      000DFD CDr00r00              3439 	call	__mulint
      000E00 E8 04                 3440 	add	sp, #4
      000E02 4B                    3441 	ld	c, e
      000E03 42                    3442 	ld	b, d
      000E04 F8 06                 3443 	ldhl	sp,	#6
      000E06 2A                    3444 	ld	a, (hl+)
      000E07 91                    3445 	sub	a, c
      000E08 7E                    3446 	ld	a, (hl)
      000E09 98                    3447 	sbc	a, b
      000E0A 56                    3448 	ld	d, (hl)
      000E0B 78                    3449 	ld	a, b
      000E0C CB 7F                 3450 	bit	7,a
      000E0E 28 07                 3451 	jr	Z, 00279$
      000E10 CB 7A                 3452 	bit	7, d
      000E12 20 08                 3453 	jr	NZ, 00280$
      000E14 BF                    3454 	cp	a, a
      000E15 18 05                 3455 	jr	00280$
      000E17                       3456 00279$:
      000E17 CB 7A                 3457 	bit	7, d
      000E19 28 01                 3458 	jr	Z, 00280$
      000E1B 37                    3459 	scf
      000E1C                       3460 00280$:
      000E1C 30 11                 3461 	jr	NC, 00124$
                           000E1E  3462 	C$player.c$495$5_2$332	= .
                                   3463 	.globl	C$player.c$495$5_2$332
                                   3464 ;src/player.c:495: player_x = r->x - 1;
      000E1E F8 02                 3465 	ldhl	sp,#2
      000E20 2A                    3466 	ld	a, (hl+)
      000E21 5F                    3467 	ld	e, a
      000E22 56                    3468 	ld	d, (hl)
      000E23 1A                    3469 	ld	a, (de)
      000E24 3D                    3470 	dec	a
      000E25 EAr0Cr00              3471 	ld	(#_player_x),a
                           000E28  3472 	C$player.c$496$5_2$332	= .
                                   3473 	.globl	C$player.c$496$5_2$332
                                   3474 ;src/player.c:496: x_speed = 0;
      000E28 21r07r00              3475 	ld	hl, #_x_speed
      000E2B 36 00                 3476 	ld	(hl), #0x00
      000E2D 18 54                 3477 	jr	00131$
      000E2F                       3478 00124$:
                           000E2F  3479 	C$player.c$499$5_2$333	= .
                                   3480 	.globl	C$player.c$499$5_2$333
                                   3481 ;src/player.c:499: player_y = r->y + 1;
      000E2F F8 0E                 3482 	ldhl	sp,	#14
      000E31 7E                    3483 	ld	a, (hl)
      000E32 3C                    3484 	inc	a
      000E33 EAr0Dr00              3485 	ld	(#_player_y),a
                           000E36  3486 	C$player.c$500$5_2$333	= .
                                   3487 	.globl	C$player.c$500$5_2$333
                                   3488 ;src/player.c:500: y_speed = 0;
      000E36 21r0Br00              3489 	ld	hl, #_y_speed
      000E39 36 00                 3490 	ld	(hl), #0x00
                           000E3B  3491 	C$player.c$503$4_2$325	= .
                                   3492 	.globl	C$player.c$503$4_2$325
                                   3493 ;src/player.c:503: break;
      000E3B 18 46                 3494 	jr	00131$
                           000E3D  3495 	C$player.c$505$4_2$325	= .
                                   3496 	.globl	C$player.c$505$4_2$325
                                   3497 ;src/player.c:505: case LEFT_CENTER: // LEFT - CENTER
      000E3D                       3498 00126$:
                           000E3D  3499 	C$player.c$506$4_2$325	= .
                                   3500 	.globl	C$player.c$506$4_2$325
                                   3501 ;src/player.c:506: player_x = r->x - 1;
      000E3D F8 02                 3502 	ldhl	sp,#2
      000E3F 2A                    3503 	ld	a, (hl+)
      000E40 5F                    3504 	ld	e, a
      000E41 56                    3505 	ld	d, (hl)
      000E42 1A                    3506 	ld	a, (de)
      000E43 3D                    3507 	dec	a
      000E44 EAr0Cr00              3508 	ld	(#_player_x),a
                           000E47  3509 	C$player.c$507$4_2$325	= .
                                   3510 	.globl	C$player.c$507$4_2$325
                                   3511 ;src/player.c:507: x_speed = 0;
      000E47 21r07r00              3512 	ld	hl, #_x_speed
      000E4A 36 00                 3513 	ld	(hl), #0x00
                           000E4C  3514 	C$player.c$508$4_2$325	= .
                                   3515 	.globl	C$player.c$508$4_2$325
                                   3516 ;src/player.c:508: break;
      000E4C 18 35                 3517 	jr	00131$
                           000E4E  3518 	C$player.c$510$4_2$325	= .
                                   3519 	.globl	C$player.c$510$4_2$325
                                   3520 ;src/player.c:510: case CENTER_UP: // CENTER - UP
      000E4E                       3521 00127$:
                           000E4E  3522 	C$player.c$511$4_2$325	= .
                                   3523 	.globl	C$player.c$511$4_2$325
                                   3524 ;src/player.c:511: player_y = r->y - r->size_y - 1;
      000E4E F8 0D                 3525 	ldhl	sp,#13
      000E50 2A                    3526 	ld	a, (hl+)
      000E51 5F                    3527 	ld	e, a
      000E52 3A                    3528 	ld	a, (hl-)
      000E53 2B                    3529 	dec	hl
      000E54 2B                    3530 	dec	hl
      000E55 57                    3531 	ld	d, a
      000E56 1A                    3532 	ld	a, (de)
      000E57 5E                    3533 	ld	e, (hl)
      000E58 23                    3534 	inc	hl
      000E59 56                    3535 	ld	d, (hl)
      000E5A F5                    3536 	push	af
      000E5B 1A                    3537 	ld	a, (de)
      000E5C 4F                    3538 	ld	c, a
      000E5D F1                    3539 	pop	af
      000E5E 91                    3540 	sub	a, c
      000E5F 3D                    3541 	dec	a
      000E60 EAr0Dr00              3542 	ld	(#_player_y),a
                           000E63  3543 	C$player.c$512$4_2$325	= .
                                   3544 	.globl	C$player.c$512$4_2$325
                                   3545 ;src/player.c:512: is_grounded = true;
      000E63 21r09r00              3546 	ld	hl, #_is_grounded
      000E66 36 01                 3547 	ld	(hl), #0x01
                           000E68  3548 	C$player.c$513$4_2$325	= .
                                   3549 	.globl	C$player.c$513$4_2$325
                                   3550 ;src/player.c:513: current_coyote_frames = 0;
      000E68 21r11r00              3551 	ld	hl, #_current_coyote_frames
      000E6B 36 00                 3552 	ld	(hl), #0x00
                           000E6D  3553 	C$player.c$514$4_2$325	= .
                                   3554 	.globl	C$player.c$514$4_2$325
                                   3555 ;src/player.c:514: y_speed = 0;
      000E6D 21r0Br00              3556 	ld	hl, #_y_speed
      000E70 36 00                 3557 	ld	(hl), #0x00
                           000E72  3558 	C$player.c$515$4_2$325	= .
                                   3559 	.globl	C$player.c$515$4_2$325
                                   3560 ;src/player.c:515: break;
      000E72 18 0F                 3561 	jr	00131$
                           000E74  3562 	C$player.c$517$4_2$325	= .
                                   3563 	.globl	C$player.c$517$4_2$325
                                   3564 ;src/player.c:517: case CENTER_DOWN: // CENTER - DOWN
      000E74                       3565 00128$:
                           000E74  3566 	C$player.c$518$4_2$325	= .
                                   3567 	.globl	C$player.c$518$4_2$325
                                   3568 ;src/player.c:518: player_y = r->y + 1;
      000E74 F8 0D                 3569 	ldhl	sp,#13
      000E76 2A                    3570 	ld	a, (hl+)
      000E77 5F                    3571 	ld	e, a
      000E78 56                    3572 	ld	d, (hl)
      000E79 1A                    3573 	ld	a, (de)
      000E7A 3C                    3574 	inc	a
      000E7B EAr0Dr00              3575 	ld	(#_player_y),a
                           000E7E  3576 	C$player.c$519$4_2$325	= .
                                   3577 	.globl	C$player.c$519$4_2$325
                                   3578 ;src/player.c:519: y_speed = 0;
      000E7E 21r0Br00              3579 	ld	hl, #_y_speed
      000E81 36 00                 3580 	ld	(hl), #0x00
                           000E83  3581 	C$player.c$525$2_0$319	= .
                                   3582 	.globl	C$player.c$525$2_0$319
                                   3583 ;src/player.c:525: }
      000E83                       3584 00131$:
                           000E83  3585 	C$player.c$414$2_0$319	= .
                                   3586 	.globl	C$player.c$414$2_0$319
                                   3587 ;src/player.c:414: for(i=0; i<8; i++){
      000E83 21r04r00              3588 	ld	hl, #_i
      000E86 34                    3589 	inc	(hl)
      000E87 7E                    3590 	ld	a, (hl)
      000E88 D6 08                 3591 	sub	a, #0x08
      000E8A DArF3r08              3592 	jp	C, 00133$
                           000E8D  3593 	C$player.c$527$2_0$319	= .
                                   3594 	.globl	C$player.c$527$2_0$319
                                   3595 ;src/player.c:527: }
      000E8D E8 0F                 3596 	add	sp, #15
                           000E8F  3597 	C$player.c$527$2_0$319	= .
                                   3598 	.globl	C$player.c$527$2_0$319
                           000E8F  3599 	XFplayer$check_collisions$0$0	= .
                                   3600 	.globl	XFplayer$check_collisions$0$0
      000E8F C9                    3601 	ret
                           000E90  3602 	Fplayer$update_score$0$0	= .
                                   3603 	.globl	Fplayer$update_score$0$0
                           000E90  3604 	C$player.c$529$2_0$335	= .
                                   3605 	.globl	C$player.c$529$2_0$335
                                   3606 ;src/player.c:529: static void update_score(void){
                                   3607 ;	---------------------------------
                                   3608 ; Function update_score
                                   3609 ; ---------------------------------
      000E90                       3610 _update_score:
      000E90 3B                    3611 	dec	sp
      000E91 3B                    3612 	dec	sp
                           000E92  3613 	C$player.c$531$1_0$335	= .
                                   3614 	.globl	C$player.c$531$1_0$335
                                   3615 ;src/player.c:531: if((PREV_PLAYER_FLOOR != PLAYER_FLOOR) && PLAYER_FLOOR == ((highest_visited_floor - 1) & 0x03)){
      000E92 FAr0Fr00              3616 	ld	a, (#_last_y)
      000E95 07                    3617 	rlca
      000E96 07                    3618 	rlca
      000E97 E6 03                 3619 	and	a, #0x03
      000E99 F8 00                 3620 	ldhl	sp,	#0
      000E9B 77                    3621 	ld	(hl), a
      000E9C 21r0Dr00              3622 	ld	hl, #_player_y
      000E9F 7E                    3623 	ld	a, (hl)
      000EA0 07                    3624 	rlca
      000EA1 07                    3625 	rlca
      000EA2 E6 03                 3626 	and	a, #0x03
      000EA4 4F                    3627 	ld	c, a
                           000EA5  3628 	C$player.c$534$1_0$335	= .
                                   3629 	.globl	C$player.c$534$1_0$335
                                   3630 ;src/player.c:534: max_player_y = (uint8_t)((PREV_PLAYER_FLOOR << 6) - player_y);
      000EA5 7E                    3631 	ld	a, (hl)
      000EA6 F8 01                 3632 	ldhl	sp,	#1
                           000EA8  3633 	C$player.c$531$1_0$335	= .
                                   3634 	.globl	C$player.c$531$1_0$335
                                   3635 ;src/player.c:531: if((PREV_PLAYER_FLOOR != PLAYER_FLOOR) && PLAYER_FLOOR == ((highest_visited_floor - 1) & 0x03)){
      000EA8 32                    3636 	ld	(hl-), a
      000EA9 7E                    3637 	ld	a, (hl)
      000EAA 91                    3638 	sub	a, c
      000EAB 28 36                 3639 	jr	Z, 00102$
      000EAD 21r16r00              3640 	ld	hl, #_highest_visited_floor
      000EB0 5E                    3641 	ld	e, (hl)
      000EB1 16 00                 3642 	ld	d, #0x00
      000EB3 1B                    3643 	dec	de
      000EB4 7B                    3644 	ld	a, e
      000EB5 E6 03                 3645 	and	a, #0x03
      000EB7 5F                    3646 	ld	e, a
      000EB8 16 00                 3647 	ld	d, #0x00
                                   3648 ;	spillPairReg hl
                                   3649 ;	spillPairReg hl
      000EBA 79                    3650 	ld	a, c
      000EBB 06 00                 3651 	ld	b, #0x00
      000EBD 93                    3652 	sub	a, e
      000EBE 20 23                 3653 	jr	NZ, 00102$
      000EC0 78                    3654 	ld	a, b
      000EC1 92                    3655 	sub	a, d
      000EC2 20 1F                 3656 	jr	NZ, 00102$
                           000EC4  3657 	C$player.c$532$2_0$336	= .
                                   3658 	.globl	C$player.c$532$2_0$336
                                   3659 ;src/player.c:532: score += 4;
      000EC4 21r12r00              3660 	ld	hl, #_score
      000EC7 2A                    3661 	ld	a, (hl+)
      000EC8 5F                    3662 	ld	e, a
      000EC9 3A                    3663 	ld	a, (hl-)
      000ECA 57                    3664 	ld	d, a
      000ECB 13                    3665 	inc	de
      000ECC 13                    3666 	inc	de
      000ECD 13                    3667 	inc	de
      000ECE 13                    3668 	inc	de
      000ECF 7B                    3669 	ld	a, e
      000ED0 22                    3670 	ld	(hl+), a
      000ED1 72                    3671 	ld	(hl), d
                           000ED2  3672 	C$player.c$533$2_0$336	= .
                                   3673 	.globl	C$player.c$533$2_0$336
                                   3674 ;src/player.c:533: highest_visited_floor = PLAYER_FLOOR;
      000ED2 21r16r00              3675 	ld	hl, #_highest_visited_floor
      000ED5 71                    3676 	ld	(hl), c
                           000ED6  3677 	C$player.c$534$2_0$336	= .
                                   3678 	.globl	C$player.c$534$2_0$336
                                   3679 ;src/player.c:534: max_player_y = (uint8_t)((PREV_PLAYER_FLOOR << 6) - player_y);
      000ED6 F8 00                 3680 	ldhl	sp,	#0
      000ED8 2A                    3681 	ld	a, (hl+)
      000ED9 0F                    3682 	rrca
      000EDA 0F                    3683 	rrca
      000EDB E6 C0                 3684 	and	a, #0xc0
      000EDD 96                    3685 	sub	a, (hl)
      000EDE EAr14r00              3686 	ld	(#_max_player_y),a
                           000EE1  3687 	C$player.c$535$2_0$336	= .
                                   3688 	.globl	C$player.c$535$2_0$336
                                   3689 ;src/player.c:535: return;
      000EE1 18 21                 3690 	jr	00108$
      000EE3                       3691 00102$:
                           000EE3  3692 	C$player.c$538$1_0$335	= .
                                   3693 	.globl	C$player.c$538$1_0$335
                                   3694 ;src/player.c:538: if(PLAYER_FLOOR != highest_visited_floor) return;
      000EE3 FAr16r00              3695 	ld	a, (#_highest_visited_floor)
      000EE6 91                    3696 	sub	a, c
      000EE7 20 1B                 3697 	jr	NZ, 00108$
                           000EE9  3698 	C$player.c$540$1_0$335	= .
                                   3699 	.globl	C$player.c$540$1_0$335
                                   3700 ;src/player.c:540: test_max_player_y = (uint8_t)((((PLAYER_FLOOR + 1) & 0x03) << 6) - player_y);
      000EE9 79                    3701 	ld	a, c
      000EEA 3C                    3702 	inc	a
      000EEB E6 03                 3703 	and	a, #0x03
      000EED 0F                    3704 	rrca
      000EEE 0F                    3705 	rrca
      000EEF E6 C0                 3706 	and	a, #0xc0
      000EF1 F8 01                 3707 	ldhl	sp,	#1
      000EF3 96                    3708 	sub	a, (hl)
      000EF4 EAr15r00              3709 	ld	(#_test_max_player_y),a
                           000EF7  3710 	C$player.c$541$1_0$335	= .
                                   3711 	.globl	C$player.c$541$1_0$335
                                   3712 ;src/player.c:541: if(max_player_y < test_max_player_y){
      000EF7 FAr14r00              3713 	ld	a, (#_max_player_y)
      000EFA 21r15r00              3714 	ld	hl, #_test_max_player_y
      000EFD 96                    3715 	sub	a, (hl)
      000EFE 30 04                 3716 	jr	NC, 00108$
                           000F00  3717 	C$player.c$542$2_0$337	= .
                                   3718 	.globl	C$player.c$542$2_0$337
                                   3719 ;src/player.c:542: max_player_y = test_max_player_y;
      000F00 7E                    3720 	ld	a, (hl)
      000F01 EAr14r00              3721 	ld	(#_max_player_y),a
      000F04                       3722 00108$:
                           000F04  3723 	C$player.c$544$1_0$335	= .
                                   3724 	.globl	C$player.c$544$1_0$335
                                   3725 ;src/player.c:544: }
      000F04 33                    3726 	inc	sp
      000F05 33                    3727 	inc	sp
                           000F06  3728 	C$player.c$544$1_0$335	= .
                                   3729 	.globl	C$player.c$544$1_0$335
                           000F06  3730 	XFplayer$update_score$0$0	= .
                                   3731 	.globl	XFplayer$update_score$0$0
      000F06 C9                    3732 	ret
                           000F07  3733 	Fplayer$calculate_final_score$0$0	= .
                                   3734 	.globl	Fplayer$calculate_final_score$0$0
                           000F07  3735 	C$player.c$546$1_0$339	= .
                                   3736 	.globl	C$player.c$546$1_0$339
                                   3737 ;src/player.c:546: static void calculate_final_score(void){
                                   3738 ;	---------------------------------
                                   3739 ; Function calculate_final_score
                                   3740 ; ---------------------------------
      000F07                       3741 _calculate_final_score:
                           000F07  3742 	C$player.c$547$1_0$339	= .
                                   3743 	.globl	C$player.c$547$1_0$339
                                   3744 ;src/player.c:547: score += (max_player_y >> 4);
      000F07 FAr14r00              3745 	ld	a, (#_max_player_y)
      000F0A CB 37                 3746 	swap	a
      000F0C E6 0F                 3747 	and	a, #0x0f
      000F0E 4F                    3748 	ld	c, a
      000F0F 06 00                 3749 	ld	b, #0x00
      000F11 21r12r00              3750 	ld	hl, #_score
      000F14 6E                    3751 	ld	l, (hl)
                                   3752 ;	spillPairReg hl
                                   3753 ;	spillPairReg hl
      000F15 FAr13r00              3754 	ld	a, (_score + 1)
      000F18 67                    3755 	ld	h, a
                                   3756 ;	spillPairReg hl
                                   3757 ;	spillPairReg hl
      000F19 09                    3758 	add	hl, bc
      000F1A 4D                    3759 	ld	c, l
      000F1B 7C                    3760 	ld	a, h
      000F1C 21r12r00              3761 	ld	hl, #_score
      000F1F 71                    3762 	ld	(hl), c
      000F20 23                    3763 	inc	hl
      000F21 77                    3764 	ld	(hl), a
                           000F22  3765 	C$player.c$548$1_0$339	= .
                                   3766 	.globl	C$player.c$548$1_0$339
                                   3767 ;src/player.c:548: }
                           000F22  3768 	C$player.c$548$1_0$339	= .
                                   3769 	.globl	C$player.c$548$1_0$339
                           000F22  3770 	XFplayer$calculate_final_score$0$0	= .
                                   3771 	.globl	XFplayer$calculate_final_score$0$0
      000F22 C9                    3772 	ret
                           000F23  3773 	Fplayer$point_vs_rect$0$0	= .
                                   3774 	.globl	Fplayer$point_vs_rect$0$0
                           000F23  3775 	C$player.c$550$1_0$341	= .
                                   3776 	.globl	C$player.c$550$1_0$341
                                   3777 ;src/player.c:550: static inline bool point_vs_rect(rect *r){
                                   3778 ;	---------------------------------
                                   3779 ; Function point_vs_rect
                                   3780 ; ---------------------------------
      000F23                       3781 _point_vs_rect:
      000F23 E8 FC                 3782 	add	sp, #-4
                           000F25  3783 	C$player.c$551$1_0$341	= .
                                   3784 	.globl	C$player.c$551$1_0$341
                                   3785 ;src/player.c:551: return (player_x >= r->x && player_y <= r->y && player_x <= (r->x + r->size_x) && player_y >= (r->y - r->size_y));
      000F25 F8 06                 3786 	ldhl	sp,	#6
      000F27 7E                    3787 	ld	a, (hl)
      000F28 F8 00                 3788 	ldhl	sp,	#0
      000F2A 77                    3789 	ld	(hl), a
      000F2B F8 07                 3790 	ldhl	sp,	#7
      000F2D 7E                    3791 	ld	a, (hl)
      000F2E F8 01                 3792 	ldhl	sp,	#1
      000F30 22                    3793 	ld	(hl+), a
      000F31 D1                    3794 	pop	de
      000F32 D5                    3795 	push	de
      000F33 1A                    3796 	ld	a, (de)
      000F34 77                    3797 	ld	(hl), a
      000F35 FAr0Cr00              3798 	ld	a, (#_player_x)
      000F38 F8 02                 3799 	ldhl	sp,	#2
      000F3A 96                    3800 	sub	a, (hl)
      000F3B 38 6C                 3801 	jr	C, 00103$
      000F3D 23                    3802 	inc	hl
      000F3E C1                    3803 	pop	bc
      000F3F C5                    3804 	push	bc
      000F40 03                    3805 	inc	bc
      000F41 0A                    3806 	ld	a, (bc)
      000F42 77                    3807 	ld	(hl), a
      000F43 21r0Dr00              3808 	ld	hl, #_player_y
      000F46 96                    3809 	sub	a, (hl)
      000F47 38 60                 3810 	jr	C, 00103$
      000F49 F8 02                 3811 	ldhl	sp,	#2
      000F4B 4E                    3812 	ld	c, (hl)
      000F4C 06 00                 3813 	ld	b, #0x00
      000F4E D1                    3814 	pop	de
      000F4F D5                    3815 	push	de
      000F50 13                    3816 	inc	de
      000F51 13                    3817 	inc	de
      000F52 1A                    3818 	ld	a, (de)
      000F53 26 00                 3819 	ld	h, #0x00
                                   3820 ;	spillPairReg hl
                                   3821 ;	spillPairReg hl
      000F55 6F                    3822 	ld	l, a
      000F56 09                    3823 	add	hl, bc
      000F57 E5                    3824 	push	hl
      000F58 21r0Cr00              3825 	ld	hl, #_player_x
      000F5B 4E                    3826 	ld	c, (hl)
      000F5C E1                    3827 	pop	hl
      000F5D 06 00                 3828 	ld	b, #0x00
      000F5F 58                    3829 	ld	e, b
      000F60 54                    3830 	ld	d, h
      000F61 7D                    3831 	ld	a, l
      000F62 91                    3832 	sub	a, c
      000F63 7C                    3833 	ld	a, h
      000F64 98                    3834 	sbc	a, b
      000F65 CB 7B                 3835 	bit	7, e
      000F67 28 07                 3836 	jr	Z, 00125$
      000F69 CB 7A                 3837 	bit	7, d
      000F6B 20 08                 3838 	jr	NZ, 00126$
      000F6D BF                    3839 	cp	a, a
      000F6E 18 05                 3840 	jr	00126$
      000F70                       3841 00125$:
      000F70 CB 7A                 3842 	bit	7, d
      000F72 28 01                 3843 	jr	Z, 00126$
      000F74 37                    3844 	scf
      000F75                       3845 00126$:
      000F75 38 32                 3846 	jr	C, 00103$
      000F77 F8 03                 3847 	ldhl	sp,	#3
      000F79 4E                    3848 	ld	c, (hl)
      000F7A 06 00                 3849 	ld	b, #0x00
      000F7C D1                    3850 	pop	de
      000F7D D5                    3851 	push	de
      000F7E 13                    3852 	inc	de
      000F7F 13                    3853 	inc	de
      000F80 13                    3854 	inc	de
      000F81 1A                    3855 	ld	a, (de)
      000F82 5F                    3856 	ld	e, a
      000F83 16 00                 3857 	ld	d, #0x00
      000F85 79                    3858 	ld	a, c
      000F86 93                    3859 	sub	a, e
      000F87 4F                    3860 	ld	c, a
      000F88 78                    3861 	ld	a, b
      000F89 9A                    3862 	sbc	a, d
      000F8A 47                    3863 	ld	b, a
      000F8B 21r0Dr00              3864 	ld	hl, #_player_y
      000F8E 6E                    3865 	ld	l, (hl)
                                   3866 ;	spillPairReg hl
                                   3867 ;	spillPairReg hl
      000F8F 26 00                 3868 	ld	h, #0x00
                                   3869 ;	spillPairReg hl
                                   3870 ;	spillPairReg hl
      000F91 58                    3871 	ld	e, b
      000F92 54                    3872 	ld	d, h
      000F93 7D                    3873 	ld	a, l
      000F94 91                    3874 	sub	a, c
      000F95 7C                    3875 	ld	a, h
      000F96 98                    3876 	sbc	a, b
      000F97 CB 7B                 3877 	bit	7, e
      000F99 28 07                 3878 	jr	Z, 00127$
      000F9B CB 7A                 3879 	bit	7, d
      000F9D 20 08                 3880 	jr	NZ, 00128$
      000F9F BF                    3881 	cp	a, a
      000FA0 18 05                 3882 	jr	00128$
      000FA2                       3883 00127$:
      000FA2 CB 7A                 3884 	bit	7, d
      000FA4 28 01                 3885 	jr	Z, 00128$
      000FA6 37                    3886 	scf
      000FA7                       3887 00128$:
      000FA7 30 04                 3888 	jr	NC, 00104$
      000FA9                       3889 00103$:
      000FA9 1E 00                 3890 	ld	e, #0x00
      000FAB 18 02                 3891 	jr	00105$
      000FAD                       3892 00104$:
      000FAD 1E 01                 3893 	ld	e, #0x01
      000FAF                       3894 00105$:
                           000FAF  3895 	C$player.c$552$1_0$341	= .
                                   3896 	.globl	C$player.c$552$1_0$341
                                   3897 ;src/player.c:552: }
      000FAF E8 04                 3898 	add	sp, #4
                           000FB1  3899 	C$player.c$552$1_0$341	= .
                                   3900 	.globl	C$player.c$552$1_0$341
                           000FB1  3901 	XFplayer$point_vs_rect$0$0	= .
                                   3902 	.globl	XFplayer$point_vs_rect$0$0
      000FB1 C9                    3903 	ret
                           000FB2  3904 	Fplayer$r_solid_function$0$0	= .
                                   3905 	.globl	Fplayer$r_solid_function$0$0
                           000FB2  3906 	C$player.c$558$1_0$343	= .
                                   3907 	.globl	C$player.c$558$1_0$343
                                   3908 ;src/player.c:558: static bool r_solid_function(uint8_t epa){
                                   3909 ;	---------------------------------
                                   3910 ; Function r_solid_function
                                   3911 ; ---------------------------------
      000FB2                       3912 _r_solid_function:
      000FB2 3B                    3913 	dec	sp
      000FB3 3B                    3914 	dec	sp
                           000FB4  3915 	C$player.c$559$1_0$343	= .
                                   3916 	.globl	C$player.c$559$1_0$343
                                   3917 ;src/player.c:559: if(epa == CENTER_DOWN){
      000FB4 F8 04                 3918 	ldhl	sp,	#4
      000FB6 7E                    3919 	ld	a, (hl)
      000FB7 D6 32                 3920 	sub	a, #0x32
      000FB9 C2r14r12              3921 	jp	NZ,00111$
                           000FBC  3922 	C$player.c$562$3_0$344	= .
                                   3923 	.globl	C$player.c$562$3_0$344
                                   3924 ;src/player.c:562: bool is_upper = i & 0x01 == 0x01;
      000FBC FAr04r00              3925 	ld	a, (#_i)
      000FBF E6 01                 3926 	and	a, #0x01
      000FC1 4F                    3927 	ld	c, a
      000FC2 F8 00                 3928 	ldhl	sp,	#0
      000FC4 71                    3929 	ld	(hl), c
                           000FC5  3930 	C$player.c$563$1_0$343	= .
                                   3931 	.globl	C$player.c$563$1_0$343
                                   3932 ;src/player.c:563: component_at_r = is_upper ? map_components[PLAYER_FLOOR][i>>1].components >> 4 : map_components[PLAYER_FLOOR][i>>1].components & 0x0F;
      000FC5 FAr0Dr00              3933 	ld	a, (#_player_y)
      000FC8 07                    3934 	rlca
      000FC9 07                    3935 	rlca
      000FCA E6 03                 3936 	and	a, #0x03
      000FCC 5F                    3937 	ld	e, a
      000FCD FAr04r00              3938 	ld	a, (#_i)
      000FD0 CB 3F                 3939 	srl	a
      000FD2 16 00                 3940 	ld	d, #0x00
      000FD4 87                    3941 	add	a, a
      000FD5 F8 01                 3942 	ldhl	sp,	#1
      000FD7 77                    3943 	ld	(hl), a
      000FD8 CB 23                 3944 	sla	e
      000FDA CB 12                 3945 	rl	d
      000FDC CB 23                 3946 	sla	e
      000FDE CB 12                 3947 	rl	d
      000FE0 CB 23                 3948 	sla	e
      000FE2 CB 12                 3949 	rl	d
      000FE4 CB 41                 3950 	bit	0, c
      000FE6 28 15                 3951 	jr	Z, 00114$
      000FE8 21r00r00              3952 	ld	hl, #_map_components
      000FEB 19                    3953 	add	hl, de
      000FEC 4D                    3954 	ld	c, l
      000FED 44                    3955 	ld	b, h
      000FEE F8 01                 3956 	ldhl	sp,	#1
      000FF0 6E                    3957 	ld	l, (hl)
      000FF1 26 00                 3958 	ld	h, #0x00
      000FF3 09                    3959 	add	hl, bc
      000FF4 4D                    3960 	ld	c, l
      000FF5 44                    3961 	ld	b, h
      000FF6 0A                    3962 	ld	a, (bc)
      000FF7 CB 37                 3963 	swap	a
      000FF9 E6 0F                 3964 	and	a, #0x0f
      000FFB 18 11                 3965 	jr	00115$
      000FFD                       3966 00114$:
      000FFD 21r00r00              3967 	ld	hl, #_map_components
      001000 19                    3968 	add	hl, de
      001001 4D                    3969 	ld	c, l
      001002 44                    3970 	ld	b, h
      001003 F8 01                 3971 	ldhl	sp,	#1
      001005 6E                    3972 	ld	l, (hl)
      001006 26 00                 3973 	ld	h, #0x00
      001008 09                    3974 	add	hl, bc
      001009 4D                    3975 	ld	c, l
      00100A 44                    3976 	ld	b, h
      00100B 0A                    3977 	ld	a, (bc)
      00100C E6 0F                 3978 	and	a, #0x0f
      00100E                       3979 00115$:
                           00100E  3980 	C$player.c$564$2_0$344	= .
                                   3981 	.globl	C$player.c$564$2_0$344
                                   3982 ;src/player.c:564: if(component_at_r == 2){
      00100E D6 02                 3983 	sub	a, #0x02
      001010 C2r14r12              3984 	jp	NZ,00111$
                           001013  3985 	C$player.c$565$3_0$345	= .
                                   3986 	.globl	C$player.c$565$3_0$345
                                   3987 ;src/player.c:565: if(is_upper){
      001013 F8 00                 3988 	ldhl	sp,	#0
      001015 CB 46                 3989 	bit	0, (hl)
      001017 CAr18r11              3990 	jp	Z, 00106$
                           00101A  3991 	C$player.c$566$4_0$346	= .
                                   3992 	.globl	C$player.c$566$4_0$346
                                   3993 ;src/player.c:566: if((map_components[PLAYER_FLOOR][i>>1].status >> 4) == 0){
      00101A 23                    3994 	inc	hl
      00101B 01r00r00              3995 	ld	bc, #_map_components+0
      00101E 7B                    3996 	ld	a, e
      00101F 81                    3997 	add	a, c
      001020 5F                    3998 	ld	e, a
      001021 7A                    3999 	ld	a, d
      001022 88                    4000 	adc	a, b
      001023 57                    4001 	ld	d, a
      001024 6E                    4002 	ld	l, (hl)
      001025 26 00                 4003 	ld	h, #0x00
      001027 19                    4004 	add	hl, de
      001028 23                    4005 	inc	hl
      001029 5D                    4006 	ld	e, l
      00102A 54                    4007 	ld	d, h
      00102B 1A                    4008 	ld	a, (de)
      00102C CB 37                 4009 	swap	a
      00102E E6 0F                 4010 	and	a,#0x0f
      001030 20 4E                 4011 	jr	NZ, 00102$
                           001032  4012 	C$player.c$567$5_0$347	= .
                                   4013 	.globl	C$player.c$567$5_0$347
                                   4014 ;src/player.c:567: play_bump_sfx();
      001032 C5                    4015 	push	bc
      001033 CDr00r00              4016 	call	_play_bump_sfx
      001036 C1                    4017 	pop	bc
                           001037  4018 	C$player.c$568$5_0$347	= .
                                   4019 	.globl	C$player.c$568$5_0$347
                                   4020 ;src/player.c:568: set_bkg_tiles(3 + (i<<1 & 0x0C), (PLAYER_FLOOR << 3) + 1, 4, 1, top_map_02_broken);
      001037 FAr0Dr00              4021 	ld	a, (#_player_y)
      00103A 07                    4022 	rlca
      00103B 07                    4023 	rlca
      00103C E6 03                 4024 	and	a, #0x03
      00103E 87                    4025 	add	a, a
      00103F 87                    4026 	add	a, a
      001040 87                    4027 	add	a, a
      001041 57                    4028 	ld	d, a
      001042 14                    4029 	inc	d
      001043 FAr04r00              4030 	ld	a, (#_i)
      001046 87                    4031 	add	a, a
      001047 E6 0C                 4032 	and	a, #0x0c
      001049 C6 03                 4033 	add	a, #0x03
      00104B 21r00r00              4034 	ld	hl, #_top_map_02_broken
      00104E E5                    4035 	push	hl
      00104F 26 01                 4036 	ld	h, #0x01
                                   4037 ;	spillPairReg hl
                                   4038 ;	spillPairReg hl
      001051 E5                    4039 	push	hl
      001052 33                    4040 	inc	sp
      001053 26 04                 4041 	ld	h, #0x04
                                   4042 ;	spillPairReg hl
                                   4043 ;	spillPairReg hl
      001055 6A                    4044 	ld	l, d
      001056 E5                    4045 	push	hl
      001057 F5                    4046 	push	af
      001058 33                    4047 	inc	sp
      001059 CDr00r00              4048 	call	_set_bkg_tiles
      00105C E8 06                 4049 	add	sp, #6
                           00105E  4050 	C$player.c$569$5_0$347	= .
                                   4051 	.globl	C$player.c$569$5_0$347
                                   4052 ;src/player.c:569: map_components[PLAYER_FLOOR][i>>1].status |= 0x10;
      00105E FAr0Dr00              4053 	ld	a, (#_player_y)
      001061 07                    4054 	rlca
      001062 07                    4055 	rlca
      001063 E6 03                 4056 	and	a, #0x03
      001065 26 00                 4057 	ld	h, #0x00
                                   4058 ;	spillPairReg hl
                                   4059 ;	spillPairReg hl
      001067 6F                    4060 	ld	l, a
      001068 29                    4061 	add	hl, hl
      001069 29                    4062 	add	hl, hl
      00106A 29                    4063 	add	hl, hl
      00106B 09                    4064 	add	hl, bc
      00106C 4D                    4065 	ld	c, l
      00106D 44                    4066 	ld	b, h
      00106E FAr04r00              4067 	ld	a, (#_i)
      001071 CB 3F                 4068 	srl	a
      001073 87                    4069 	add	a, a
      001074 6F                    4070 	ld	l, a
      001075 26 00                 4071 	ld	h, #0x00
      001077 09                    4072 	add	hl, bc
      001078 23                    4073 	inc	hl
      001079 CB E6                 4074 	set	4, (hl)
                           00107B  4075 	C$player.c$570$5_0$347	= .
                                   4076 	.globl	C$player.c$570$5_0$347
                                   4077 ;src/player.c:570: return false;
      00107B 1E 00                 4078 	ld	e, #0x00
      00107D C3r16r12              4079 	jp	00112$
      001080                       4080 00102$:
                           001080  4081 	C$player.c$572$4_0$346	= .
                                   4082 	.globl	C$player.c$572$4_0$346
                                   4083 ;src/player.c:572: instanciate_brick_particles();
      001080 C5                    4084 	push	bc
      001081 CDrACr07              4085 	call	_instanciate_brick_particles
      001084 CDr00r00              4086 	call	_play_break_sfx
      001087 C1                    4087 	pop	bc
                           001088  4088 	C$player.c$574$4_0$346	= .
                                   4089 	.globl	C$player.c$574$4_0$346
                                   4090 ;src/player.c:574: set_bkg_tiles(3 + (i<<1 & 0x0C), (PLAYER_FLOOR << 3) + 1, 4, 1, top_map_00);
      001088 FAr0Dr00              4091 	ld	a, (#_player_y)
      00108B 07                    4092 	rlca
      00108C 07                    4093 	rlca
      00108D E6 03                 4094 	and	a, #0x03
      00108F 87                    4095 	add	a, a
      001090 87                    4096 	add	a, a
      001091 87                    4097 	add	a, a
      001092 57                    4098 	ld	d, a
      001093 14                    4099 	inc	d
      001094 FAr04r00              4100 	ld	a, (#_i)
      001097 87                    4101 	add	a, a
      001098 E6 0C                 4102 	and	a, #0x0c
      00109A C6 03                 4103 	add	a, #0x03
      00109C 21r00r00              4104 	ld	hl, #_top_map_00
      00109F E5                    4105 	push	hl
      0010A0 26 01                 4106 	ld	h, #0x01
                                   4107 ;	spillPairReg hl
                                   4108 ;	spillPairReg hl
      0010A2 E5                    4109 	push	hl
      0010A3 33                    4110 	inc	sp
      0010A4 26 04                 4111 	ld	h, #0x04
                                   4112 ;	spillPairReg hl
                                   4113 ;	spillPairReg hl
      0010A6 6A                    4114 	ld	l, d
      0010A7 E5                    4115 	push	hl
      0010A8 F5                    4116 	push	af
      0010A9 33                    4117 	inc	sp
      0010AA CDr00r00              4118 	call	_set_bkg_tiles
      0010AD E8 06                 4119 	add	sp, #6
                           0010AF  4120 	C$player.c$575$4_0$346	= .
                                   4121 	.globl	C$player.c$575$4_0$346
                                   4122 ;src/player.c:575: map_components[PLAYER_FLOOR][i>>1].components = map_components[PLAYER_FLOOR][i>>1].components & 0x0F;
      0010AF FAr0Dr00              4123 	ld	a, (#_player_y)
      0010B2 07                    4124 	rlca
      0010B3 07                    4125 	rlca
      0010B4 E6 03                 4126 	and	a, #0x03
      0010B6 26 00                 4127 	ld	h, #0x00
                                   4128 ;	spillPairReg hl
                                   4129 ;	spillPairReg hl
      0010B8 6F                    4130 	ld	l, a
      0010B9 29                    4131 	add	hl, hl
      0010BA 29                    4132 	add	hl, hl
      0010BB 29                    4133 	add	hl, hl
      0010BC 09                    4134 	add	hl, bc
      0010BD 5D                    4135 	ld	e, l
      0010BE 54                    4136 	ld	d, h
      0010BF FAr04r00              4137 	ld	a, (#_i)
      0010C2 CB 3F                 4138 	srl	a
      0010C4 87                    4139 	add	a, a
      0010C5 6F                    4140 	ld	l, a
      0010C6 26 00                 4141 	ld	h, #0x00
      0010C8 19                    4142 	add	hl, de
      0010C9 7E                    4143 	ld	a, (hl)
      0010CA E6 0F                 4144 	and	a, #0x0f
      0010CC 77                    4145 	ld	(hl), a
                           0010CD  4146 	C$player.c$576$4_0$346	= .
                                   4147 	.globl	C$player.c$576$4_0$346
                                   4148 ;src/player.c:576: map_components[PLAYER_FLOOR][i>>1].status = map_components[PLAYER_FLOOR][i>>1].status & 0x0F;
      0010CD FAr0Dr00              4149 	ld	a, (#_player_y)
      0010D0 07                    4150 	rlca
      0010D1 07                    4151 	rlca
      0010D2 E6 03                 4152 	and	a, #0x03
      0010D4 26 00                 4153 	ld	h, #0x00
                                   4154 ;	spillPairReg hl
                                   4155 ;	spillPairReg hl
      0010D6 6F                    4156 	ld	l, a
      0010D7 29                    4157 	add	hl, hl
      0010D8 29                    4158 	add	hl, hl
      0010D9 29                    4159 	add	hl, hl
      0010DA 09                    4160 	add	hl, bc
      0010DB 4D                    4161 	ld	c, l
      0010DC 44                    4162 	ld	b, h
      0010DD FAr04r00              4163 	ld	a, (#_i)
      0010E0 CB 3F                 4164 	srl	a
      0010E2 87                    4165 	add	a, a
      0010E3 6F                    4166 	ld	l, a
      0010E4 26 00                 4167 	ld	h, #0x00
      0010E6 09                    4168 	add	hl, bc
      0010E7 23                    4169 	inc	hl
      0010E8 7E                    4170 	ld	a, (hl)
      0010E9 E6 0F                 4171 	and	a, #0x0f
      0010EB 77                    4172 	ld	(hl), a
                           0010EC  4173 	C$player.c$577$4_0$346	= .
                                   4174 	.globl	C$player.c$577$4_0$346
                                   4175 ;src/player.c:577: rect_list[PLAYER_FLOOR][i].type = INACTIVE;
      0010EC 01r00r00              4176 	ld	bc, #_rect_list+0
      0010EF FAr0Dr00              4177 	ld	a, (#_player_y)
      0010F2 07                    4178 	rlca
      0010F3 07                    4179 	rlca
      0010F4 E6 03                 4180 	and	a, #0x03
      0010F6 5F                    4181 	ld	e, a
      0010F7 16 00                 4182 	ld	d, #0x00
      0010F9 6B                    4183 	ld	l, e
      0010FA 62                    4184 	ld	h, d
      0010FB 29                    4185 	add	hl, hl
      0010FC 29                    4186 	add	hl, hl
      0010FD 19                    4187 	add	hl, de
      0010FE 29                    4188 	add	hl, hl
      0010FF 29                    4189 	add	hl, hl
      001100 29                    4190 	add	hl, hl
      001101 09                    4191 	add	hl, bc
      001102 4D                    4192 	ld	c, l
      001103 44                    4193 	ld	b, h
      001104 FAr04r00              4194 	ld	a, (#_i)
      001107 5F                    4195 	ld	e, a
      001108 87                    4196 	add	a, a
      001109 87                    4197 	add	a, a
      00110A 83                    4198 	add	a, e
      00110B 6F                    4199 	ld	l, a
      00110C 26 00                 4200 	ld	h, #0x00
      00110E 09                    4201 	add	hl, bc
      00110F 01 04 00              4202 	ld	bc, #0x0004
      001112 09                    4203 	add	hl, bc
      001113 36 02                 4204 	ld	(hl), #0x02
      001115 C3r14r12              4205 	jp	00111$
      001118                       4206 00106$:
                           001118  4207 	C$player.c$579$4_0$348	= .
                                   4208 	.globl	C$player.c$579$4_0$348
                                   4209 ;src/player.c:579: if((map_components[PLAYER_FLOOR][i>>1].status & 0x0F) == 0){
      001118 01r00r00              4210 	ld	bc, #_map_components+0
      00111B 7B                    4211 	ld	a, e
      00111C 81                    4212 	add	a, c
      00111D 5F                    4213 	ld	e, a
      00111E 7A                    4214 	ld	a, d
      00111F 88                    4215 	adc	a, b
      001120 57                    4216 	ld	d, a
      001121 F8 01                 4217 	ldhl	sp,	#1
      001123 6E                    4218 	ld	l, (hl)
      001124 26 00                 4219 	ld	h, #0x00
      001126 19                    4220 	add	hl, de
      001127 23                    4221 	inc	hl
      001128 5D                    4222 	ld	e, l
      001129 54                    4223 	ld	d, h
      00112A 1A                    4224 	ld	a, (de)
      00112B E6 0F                 4225 	and	a, #0x0f
      00112D 20 4F                 4226 	jr	NZ, 00104$
                           00112F  4227 	C$player.c$580$5_0$349	= .
                                   4228 	.globl	C$player.c$580$5_0$349
                                   4229 ;src/player.c:580: play_bump_sfx();
      00112F C5                    4230 	push	bc
      001130 CDr00r00              4231 	call	_play_bump_sfx
      001133 C1                    4232 	pop	bc
                           001134  4233 	C$player.c$581$5_0$349	= .
                                   4234 	.globl	C$player.c$581$5_0$349
                                   4235 ;src/player.c:581: set_bkg_tiles(3 + (i<<1 & 0x0C), (PLAYER_FLOOR << 3) + 5, 4, 2, bot_map_02_broken);
      001134 FAr0Dr00              4236 	ld	a, (#_player_y)
      001137 07                    4237 	rlca
      001138 07                    4238 	rlca
      001139 E6 03                 4239 	and	a, #0x03
      00113B 87                    4240 	add	a, a
      00113C 87                    4241 	add	a, a
      00113D 87                    4242 	add	a, a
      00113E C6 05                 4243 	add	a, #0x05
      001140 57                    4244 	ld	d, a
      001141 FAr04r00              4245 	ld	a, (#_i)
      001144 87                    4246 	add	a, a
      001145 E6 0C                 4247 	and	a, #0x0c
      001147 C6 03                 4248 	add	a, #0x03
      001149 21r00r00              4249 	ld	hl, #_bot_map_02_broken
      00114C E5                    4250 	push	hl
      00114D 26 02                 4251 	ld	h, #0x02
                                   4252 ;	spillPairReg hl
                                   4253 ;	spillPairReg hl
      00114F E5                    4254 	push	hl
      001150 33                    4255 	inc	sp
      001151 26 04                 4256 	ld	h, #0x04
                                   4257 ;	spillPairReg hl
                                   4258 ;	spillPairReg hl
      001153 6A                    4259 	ld	l, d
      001154 E5                    4260 	push	hl
      001155 F5                    4261 	push	af
      001156 33                    4262 	inc	sp
      001157 CDr00r00              4263 	call	_set_bkg_tiles
      00115A E8 06                 4264 	add	sp, #6
                           00115C  4265 	C$player.c$582$5_0$349	= .
                                   4266 	.globl	C$player.c$582$5_0$349
                                   4267 ;src/player.c:582: map_components[PLAYER_FLOOR][i>>1].status |= 0x01;
      00115C FAr0Dr00              4268 	ld	a, (#_player_y)
      00115F 07                    4269 	rlca
      001160 07                    4270 	rlca
      001161 E6 03                 4271 	and	a, #0x03
      001163 26 00                 4272 	ld	h, #0x00
                                   4273 ;	spillPairReg hl
                                   4274 ;	spillPairReg hl
      001165 6F                    4275 	ld	l, a
      001166 29                    4276 	add	hl, hl
      001167 29                    4277 	add	hl, hl
      001168 29                    4278 	add	hl, hl
      001169 09                    4279 	add	hl, bc
      00116A 4D                    4280 	ld	c, l
      00116B 44                    4281 	ld	b, h
      00116C FAr04r00              4282 	ld	a, (#_i)
      00116F CB 3F                 4283 	srl	a
      001171 87                    4284 	add	a, a
      001172 6F                    4285 	ld	l, a
      001173 26 00                 4286 	ld	h, #0x00
      001175 09                    4287 	add	hl, bc
      001176 23                    4288 	inc	hl
      001177 CB C6                 4289 	set	0, (hl)
                           001179  4290 	C$player.c$583$5_0$349	= .
                                   4291 	.globl	C$player.c$583$5_0$349
                                   4292 ;src/player.c:583: return false;
      001179 1E 00                 4293 	ld	e, #0x00
      00117B C3r16r12              4294 	jp	00112$
      00117E                       4295 00104$:
                           00117E  4296 	C$player.c$585$4_0$348	= .
                                   4297 	.globl	C$player.c$585$4_0$348
                                   4298 ;src/player.c:585: instanciate_brick_particles();
      00117E C5                    4299 	push	bc
      00117F CDrACr07              4300 	call	_instanciate_brick_particles
      001182 CDr00r00              4301 	call	_play_break_sfx
      001185 C1                    4302 	pop	bc
                           001186  4303 	C$player.c$587$4_0$348	= .
                                   4304 	.globl	C$player.c$587$4_0$348
                                   4305 ;src/player.c:587: set_bkg_tiles(3 + (i<<1 & 0x0C), (PLAYER_FLOOR << 3) + 5, 4, 2, bot_map_00);
      001186 FAr0Dr00              4306 	ld	a, (#_player_y)
      001189 07                    4307 	rlca
      00118A 07                    4308 	rlca
      00118B E6 03                 4309 	and	a, #0x03
      00118D 87                    4310 	add	a, a
      00118E 87                    4311 	add	a, a
      00118F 87                    4312 	add	a, a
      001190 C6 05                 4313 	add	a, #0x05
      001192 57                    4314 	ld	d, a
      001193 FAr04r00              4315 	ld	a, (#_i)
      001196 87                    4316 	add	a, a
      001197 E6 0C                 4317 	and	a, #0x0c
      001199 C6 03                 4318 	add	a, #0x03
      00119B 21r00r00              4319 	ld	hl, #_bot_map_00
      00119E E5                    4320 	push	hl
      00119F 26 02                 4321 	ld	h, #0x02
                                   4322 ;	spillPairReg hl
                                   4323 ;	spillPairReg hl
      0011A1 E5                    4324 	push	hl
      0011A2 33                    4325 	inc	sp
      0011A3 26 04                 4326 	ld	h, #0x04
                                   4327 ;	spillPairReg hl
                                   4328 ;	spillPairReg hl
      0011A5 6A                    4329 	ld	l, d
      0011A6 E5                    4330 	push	hl
      0011A7 F5                    4331 	push	af
      0011A8 33                    4332 	inc	sp
      0011A9 CDr00r00              4333 	call	_set_bkg_tiles
      0011AC E8 06                 4334 	add	sp, #6
                           0011AE  4335 	C$player.c$588$4_0$348	= .
                                   4336 	.globl	C$player.c$588$4_0$348
                                   4337 ;src/player.c:588: map_components[PLAYER_FLOOR][i>>1].components = map_components[PLAYER_FLOOR][i>>1].components & 0xF0;
      0011AE FAr0Dr00              4338 	ld	a, (#_player_y)
      0011B1 07                    4339 	rlca
      0011B2 07                    4340 	rlca
      0011B3 E6 03                 4341 	and	a, #0x03
      0011B5 26 00                 4342 	ld	h, #0x00
                                   4343 ;	spillPairReg hl
                                   4344 ;	spillPairReg hl
      0011B7 6F                    4345 	ld	l, a
      0011B8 29                    4346 	add	hl, hl
      0011B9 29                    4347 	add	hl, hl
      0011BA 29                    4348 	add	hl, hl
      0011BB 09                    4349 	add	hl, bc
      0011BC 5D                    4350 	ld	e, l
      0011BD 54                    4351 	ld	d, h
      0011BE FAr04r00              4352 	ld	a, (#_i)
      0011C1 CB 3F                 4353 	srl	a
      0011C3 87                    4354 	add	a, a
      0011C4 6F                    4355 	ld	l, a
      0011C5 26 00                 4356 	ld	h, #0x00
      0011C7 19                    4357 	add	hl, de
      0011C8 7E                    4358 	ld	a, (hl)
      0011C9 E6 F0                 4359 	and	a, #0xf0
      0011CB 77                    4360 	ld	(hl), a
                           0011CC  4361 	C$player.c$589$4_0$348	= .
                                   4362 	.globl	C$player.c$589$4_0$348
                                   4363 ;src/player.c:589: map_components[PLAYER_FLOOR][i>>1].status = map_components[PLAYER_FLOOR][i>>1].status & 0xF0;
      0011CC FAr0Dr00              4364 	ld	a, (#_player_y)
      0011CF 07                    4365 	rlca
      0011D0 07                    4366 	rlca
      0011D1 E6 03                 4367 	and	a, #0x03
      0011D3 26 00                 4368 	ld	h, #0x00
                                   4369 ;	spillPairReg hl
                                   4370 ;	spillPairReg hl
      0011D5 6F                    4371 	ld	l, a
      0011D6 29                    4372 	add	hl, hl
      0011D7 29                    4373 	add	hl, hl
      0011D8 29                    4374 	add	hl, hl
      0011D9 09                    4375 	add	hl, bc
      0011DA 4D                    4376 	ld	c, l
      0011DB 44                    4377 	ld	b, h
      0011DC FAr04r00              4378 	ld	a, (#_i)
      0011DF CB 3F                 4379 	srl	a
      0011E1 87                    4380 	add	a, a
      0011E2 6F                    4381 	ld	l, a
      0011E3 26 00                 4382 	ld	h, #0x00
      0011E5 09                    4383 	add	hl, bc
      0011E6 23                    4384 	inc	hl
      0011E7 7E                    4385 	ld	a, (hl)
      0011E8 E6 F0                 4386 	and	a, #0xf0
      0011EA 77                    4387 	ld	(hl), a
                           0011EB  4388 	C$player.c$590$4_0$348	= .
                                   4389 	.globl	C$player.c$590$4_0$348
                                   4390 ;src/player.c:590: rect_list[PLAYER_FLOOR][i].type = INACTIVE;
      0011EB 01r00r00              4391 	ld	bc, #_rect_list+0
      0011EE FAr0Dr00              4392 	ld	a, (#_player_y)
      0011F1 07                    4393 	rlca
      0011F2 07                    4394 	rlca
      0011F3 E6 03                 4395 	and	a, #0x03
      0011F5 5F                    4396 	ld	e, a
      0011F6 16 00                 4397 	ld	d, #0x00
      0011F8 6B                    4398 	ld	l, e
      0011F9 62                    4399 	ld	h, d
      0011FA 29                    4400 	add	hl, hl
      0011FB 29                    4401 	add	hl, hl
      0011FC 19                    4402 	add	hl, de
      0011FD 29                    4403 	add	hl, hl
      0011FE 29                    4404 	add	hl, hl
      0011FF 29                    4405 	add	hl, hl
      001200 09                    4406 	add	hl, bc
      001201 4D                    4407 	ld	c, l
      001202 44                    4408 	ld	b, h
      001203 FAr04r00              4409 	ld	a, (#_i)
      001206 5F                    4410 	ld	e, a
      001207 87                    4411 	add	a, a
      001208 87                    4412 	add	a, a
      001209 83                    4413 	add	a, e
      00120A 6F                    4414 	ld	l, a
      00120B 26 00                 4415 	ld	h, #0x00
      00120D 09                    4416 	add	hl, bc
      00120E 01 04 00              4417 	ld	bc, #0x0004
      001211 09                    4418 	add	hl, bc
      001212 36 02                 4419 	ld	(hl), #0x02
      001214                       4420 00111$:
                           001214  4421 	C$player.c$596$1_0$343	= .
                                   4422 	.globl	C$player.c$596$1_0$343
                                   4423 ;src/player.c:596: return false;
      001214 1E 00                 4424 	ld	e, #0x00
      001216                       4425 00112$:
                           001216  4426 	C$player.c$597$1_0$343	= .
                                   4427 	.globl	C$player.c$597$1_0$343
                                   4428 ;src/player.c:597: }
      001216 33                    4429 	inc	sp
      001217 33                    4430 	inc	sp
                           001218  4431 	C$player.c$597$1_0$343	= .
                                   4432 	.globl	C$player.c$597$1_0$343
                           001218  4433 	XFplayer$r_solid_function$0$0	= .
                                   4434 	.globl	XFplayer$r_solid_function$0$0
      001218 C9                    4435 	ret
                           001219  4436 	Fplayer$r_traversable_function$0$0	= .
                                   4437 	.globl	Fplayer$r_traversable_function$0$0
                           001219  4438 	C$player.c$598$1_0$351	= .
                                   4439 	.globl	C$player.c$598$1_0$351
                                   4440 ;src/player.c:598: static bool r_traversable_function(uint8_t epa){
                                   4441 ;	---------------------------------
                                   4442 ; Function r_traversable_function
                                   4443 ; ---------------------------------
      001219                       4444 _r_traversable_function:
                           001219  4445 	C$player.c$599$1_0$351	= .
                                   4446 	.globl	C$player.c$599$1_0$351
                                   4447 ;src/player.c:599: return (bool)(epa != CENTER_UP || (joy & J_DOWN));
      001219 F8 02                 4448 	ldhl	sp,	#2
      00121B 7E                    4449 	ld	a, (hl)
      00121C D6 31                 4450 	sub	a, #0x31
      00121E 20 0C                 4451 	jr	NZ, 00104$
      001220 FAr05r00              4452 	ld	a, (#_joy)
      001223 0F                    4453 	rrca
      001224 0F                    4454 	rrca
      001225 0F                    4455 	rrca
      001226 E6 01                 4456 	and	a,#0x01
      001228 20 02                 4457 	jr	NZ, 00104$
      00122A 5F                    4458 	ld	e,a
      00122B C9                    4459 	ret
      00122C                       4460 00104$:
      00122C 1E 01                 4461 	ld	e, #0x01
                           00122E  4462 	C$player.c$600$1_0$351	= .
                                   4463 	.globl	C$player.c$600$1_0$351
                                   4464 ;src/player.c:600: }
                           00122E  4465 	C$player.c$600$1_0$351	= .
                                   4466 	.globl	C$player.c$600$1_0$351
                           00122E  4467 	XFplayer$r_traversable_function$0$0	= .
                                   4468 	.globl	XFplayer$r_traversable_function$0$0
      00122E C9                    4469 	ret
                           00122F  4470 	Fplayer$r_inactive_function$0$0	= .
                                   4471 	.globl	Fplayer$r_inactive_function$0$0
                           00122F  4472 	C$player.c$601$1_0$353	= .
                                   4473 	.globl	C$player.c$601$1_0$353
                                   4474 ;src/player.c:601: static bool r_inactive_function(uint8_t epa){
                                   4475 ;	---------------------------------
                                   4476 ; Function r_inactive_function
                                   4477 ; ---------------------------------
      00122F                       4478 _r_inactive_function:
                           00122F  4479 	C$player.c$602$1_0$353	= .
                                   4480 	.globl	C$player.c$602$1_0$353
                                   4481 ;src/player.c:602: return true;
      00122F 1E 01                 4482 	ld	e, #0x01
                           001231  4483 	C$player.c$603$1_0$353	= .
                                   4484 	.globl	C$player.c$603$1_0$353
                                   4485 ;src/player.c:603: }
                           001231  4486 	C$player.c$603$1_0$353	= .
                                   4487 	.globl	C$player.c$603$1_0$353
                           001231  4488 	XFplayer$r_inactive_function$0$0	= .
                                   4489 	.globl	XFplayer$r_inactive_function$0$0
      001231 C9                    4490 	ret
                           001232  4491 	Fplayer$r_bouncy_function$0$0	= .
                                   4492 	.globl	Fplayer$r_bouncy_function$0$0
                           001232  4493 	C$player.c$604$1_0$355	= .
                                   4494 	.globl	C$player.c$604$1_0$355
                                   4495 ;src/player.c:604: static bool r_bouncy_function(uint8_t epa){
                                   4496 ;	---------------------------------
                                   4497 ; Function r_bouncy_function
                                   4498 ; ---------------------------------
      001232                       4499 _r_bouncy_function:
                           001232  4500 	C$player.c$605$1_0$355	= .
                                   4501 	.globl	C$player.c$605$1_0$355
                                   4502 ;src/player.c:605: if(epa == CENTER_UP){
      001232 F8 02                 4503 	ldhl	sp,	#2
      001234 7E                    4504 	ld	a, (hl)
      001235 D6 31                 4505 	sub	a, #0x31
      001237 C2rEDr12              4506 	jp	NZ,00109$
                                   4507 ;src/player.c:403: if(current_state == state) {return;}
                                   4508 ;src/player.c:404: if(current_state == PLAYER_STATE_FALLING){instanciate_collision_puffs();}
      00123A FAr10r00              4509 	ld	a,(#_current_state)
      00123D FE 02                 4510 	cp	a,#0x02
      00123F 28 16                 4511 	jr	Z, 00114$
      001241 D6 03                 4512 	sub	a, #0x03
      001243 20 03                 4513 	jr	NZ, 00113$
      001245 CDrFBr06              4514 	call	_instanciate_collision_puffs
      001248                       4515 00113$:
                                   4516 ;src/player.c:405: frame_counter = 0;
      001248 21r01r00              4517 	ld	hl, #_frame_counter
      00124B 36 00                 4518 	ld	(hl), #0x00
                                   4519 ;src/player.c:406: current_frame = 0;
      00124D 21r02r00              4520 	ld	hl, #_current_frame
      001250 36 00                 4521 	ld	(hl), #0x00
                                   4522 ;src/player.c:407: current_state = state;
      001252 21r10r00              4523 	ld	hl, #_current_state
      001255 36 02                 4524 	ld	(hl), #0x02
                                   4525 ;src/player.c:606: switch_state(PLAYER_STATE_JUMPING);
      001257                       4526 00114$:
                           001257  4527 	C$player.c$607$2_0$356	= .
                                   4528 	.globl	C$player.c$607$2_0$356
                                   4529 ;src/player.c:607: play_boing_sfx();
      001257 CDr00r00              4530 	call	_play_boing_sfx
                           00125A  4531 	C$player.c$608$2_0$356	= .
                                   4532 	.globl	C$player.c$608$2_0$356
                                   4533 ;src/player.c:608: y_speed = (int8_t)(-45);
      00125A 21r0Br00              4534 	ld	hl, #_y_speed
      00125D 36 D3                 4535 	ld	(hl), #0xd3
                           00125F  4536 	C$player.c$609$2_0$356	= .
                                   4537 	.globl	C$player.c$609$2_0$356
                                   4538 ;src/player.c:609: is_grounded = false;
      00125F 21r09r00              4539 	ld	hl, #_is_grounded
      001262 36 00                 4540 	ld	(hl), #0x00
                           001264  4541 	C$player.c$610$2_0$356	= .
                                   4542 	.globl	C$player.c$610$2_0$356
                                   4543 ;src/player.c:610: is_jumping = true;
      001264 21r0Ar00              4544 	ld	hl, #_is_jumping
      001267 36 01                 4545 	ld	(hl), #0x01
                           001269  4546 	C$player.c$614$2_1$357	= .
                                   4547 	.globl	C$player.c$614$2_1$357
                                   4548 ;src/player.c:614: if(i & 0x01 == 0x01) {return true;}
      001269 E5                    4549 	push	hl
      00126A 21r04r00              4550 	ld	hl, #_i
      00126D CB 46                 4551 	bit	0, (hl)
      00126F E1                    4552 	pop	hl
      001270 28 03                 4553 	jr	Z, 00102$
      001272 1E 01                 4554 	ld	e, #0x01
      001274 C9                    4555 	ret
      001275                       4556 00102$:
                           001275  4557 	C$player.c$616$2_1$357	= .
                                   4558 	.globl	C$player.c$616$2_1$357
                                   4559 ;src/player.c:616: status_of_rack = map_components[PLAYER_FLOOR][i>>1].status & 0x0F;
      001275 FAr0Dr00              4560 	ld	a, (#_player_y)
      001278 07                    4561 	rlca
      001279 07                    4562 	rlca
      00127A E6 03                 4563 	and	a, #0x03
      00127C 6F                    4564 	ld	l, a
                                   4565 ;	spillPairReg hl
                                   4566 ;	spillPairReg hl
      00127D 26 00                 4567 	ld	h, #0x00
                                   4568 ;	spillPairReg hl
                                   4569 ;	spillPairReg hl
      00127F 29                    4570 	add	hl, hl
      001280 29                    4571 	add	hl, hl
      001281 29                    4572 	add	hl, hl
      001282 7D                    4573 	ld	a, l
      001283 C6r00                 4574 	add	a, #<(_map_components)
      001285 4F                    4575 	ld	c, a
      001286 7C                    4576 	ld	a, h
      001287 CEs00                 4577 	adc	a, #>(_map_components)
      001289 47                    4578 	ld	b, a
      00128A FAr04r00              4579 	ld	a, (#_i)
      00128D CB 3F                 4580 	srl	a
      00128F 87                    4581 	add	a, a
      001290 6F                    4582 	ld	l, a
      001291 26 00                 4583 	ld	h, #0x00
      001293 09                    4584 	add	hl, bc
      001294 23                    4585 	inc	hl
      001295 7E                    4586 	ld	a, (hl)
      001296 E6 0F                 4587 	and	a, #0x0f
                           001298  4588 	C$player.c$625$2_1$357	= .
                                   4589 	.globl	C$player.c$625$2_1$357
                                   4590 ;src/player.c:625: if(status_of_rack == 0x00){
      001298 4F                    4591 	ld	c, a
      001299 B7                    4592 	or	a, a
      00129A 20 03                 4593 	jr	NZ, 00104$
                           00129C  4594 	C$player.c$626$3_1$359	= .
                                   4595 	.globl	C$player.c$626$3_1$359
                                   4596 ;src/player.c:626: return true;
      00129C 1E 01                 4597 	ld	e, #0x01
      00129E C9                    4598 	ret
      00129F                       4599 00104$:
                           00129F  4600 	C$player.c$628$2_1$357	= .
                                   4601 	.globl	C$player.c$628$2_1$357
                                   4602 ;src/player.c:628: if((status_of_rack & 0b00001100) == 0b00001100){
      00129F 79                    4603 	ld	a, c
      0012A0 E6 0C                 4604 	and	a, #0x0c
      0012A2 5F                    4605 	ld	e, a
      0012A3 16 00                 4606 	ld	d, #0x00
                           0012A5  4607 	C$player.c$631$1_0$355	= .
                                   4608 	.globl	C$player.c$631$1_0$355
                                   4609 ;src/player.c:631: make_cloth_fall(status_of_rack & 0x03);
      0012A5 79                    4610 	ld	a, c
      0012A6 E6 03                 4611 	and	a, #0x03
      0012A8 47                    4612 	ld	b, a
                           0012A9  4613 	C$player.c$628$2_1$357	= .
                                   4614 	.globl	C$player.c$628$2_1$357
                                   4615 ;src/player.c:628: if((status_of_rack & 0b00001100) == 0b00001100){
      0012A9 7B                    4616 	ld	a, e
      0012AA D6 0C                 4617 	sub	a, #0x0c
      0012AC B2                    4618 	or	a, d
      0012AD 20 14                 4619 	jr	NZ, 00106$
                           0012AF  4620 	C$player.c$631$3_1$360	= .
                                   4621 	.globl	C$player.c$631$3_1$360
                                   4622 ;src/player.c:631: make_cloth_fall(status_of_rack & 0x03);
      0012AF C5                    4623 	push	bc
      0012B0 C5                    4624 	push	bc
      0012B1 33                    4625 	inc	sp
      0012B2 CDrF0r12              4626 	call	_make_cloth_fall
      0012B5 33                    4627 	inc	sp
      0012B6 C1                    4628 	pop	bc
                           0012B7  4629 	C$player.c$633$3_1$360	= .
                                   4630 	.globl	C$player.c$633$3_1$360
                                   4631 ;src/player.c:633: make_cloth_fall((status_of_rack + 1) & 0x03);
      0012B7 79                    4632 	ld	a, c
      0012B8 3C                    4633 	inc	a
      0012B9 E6 03                 4634 	and	a, #0x03
      0012BB F5                    4635 	push	af
      0012BC 33                    4636 	inc	sp
      0012BD CDrF0r12              4637 	call	_make_cloth_fall
      0012C0 33                    4638 	inc	sp
      0012C1 18 06                 4639 	jr	00107$
      0012C3                       4640 00106$:
                           0012C3  4641 	C$player.c$637$3_1$361	= .
                                   4642 	.globl	C$player.c$637$3_1$361
                                   4643 ;src/player.c:637: make_cloth_fall(status_of_rack & 0x03);
      0012C3 C5                    4644 	push	bc
      0012C4 33                    4645 	inc	sp
      0012C5 CDrF0r12              4646 	call	_make_cloth_fall
      0012C8 33                    4647 	inc	sp
      0012C9                       4648 00107$:
                           0012C9  4649 	C$player.c$639$2_1$357	= .
                                   4650 	.globl	C$player.c$639$2_1$357
                                   4651 ;src/player.c:639: map_components[PLAYER_FLOOR][i>>1].status &= 0xF0;
      0012C9 FAr0Dr00              4652 	ld	a, (#_player_y)
      0012CC 07                    4653 	rlca
      0012CD 07                    4654 	rlca
      0012CE E6 03                 4655 	and	a, #0x03
      0012D0 6F                    4656 	ld	l, a
                                   4657 ;	spillPairReg hl
                                   4658 ;	spillPairReg hl
      0012D1 26 00                 4659 	ld	h, #0x00
                                   4660 ;	spillPairReg hl
                                   4661 ;	spillPairReg hl
      0012D3 29                    4662 	add	hl, hl
      0012D4 29                    4663 	add	hl, hl
      0012D5 29                    4664 	add	hl, hl
      0012D6 7D                    4665 	ld	a, l
      0012D7 C6r00                 4666 	add	a, #<(_map_components)
      0012D9 4F                    4667 	ld	c, a
      0012DA 7C                    4668 	ld	a, h
      0012DB CEs00                 4669 	adc	a, #>(_map_components)
      0012DD 47                    4670 	ld	b, a
      0012DE FAr04r00              4671 	ld	a, (#_i)
      0012E1 CB 3F                 4672 	srl	a
      0012E3 87                    4673 	add	a, a
      0012E4 6F                    4674 	ld	l, a
      0012E5 26 00                 4675 	ld	h, #0x00
      0012E7 09                    4676 	add	hl, bc
      0012E8 23                    4677 	inc	hl
      0012E9 7E                    4678 	ld	a, (hl)
      0012EA E6 F0                 4679 	and	a, #0xf0
      0012EC 77                    4680 	ld	(hl), a
      0012ED                       4681 00109$:
                           0012ED  4682 	C$player.c$641$1_0$355	= .
                                   4683 	.globl	C$player.c$641$1_0$355
                                   4684 ;src/player.c:641: return true;
      0012ED 1E 01                 4685 	ld	e, #0x01
                           0012EF  4686 	C$player.c$642$1_0$355	= .
                                   4687 	.globl	C$player.c$642$1_0$355
                                   4688 ;src/player.c:642: }
                           0012EF  4689 	C$player.c$642$1_0$355	= .
                                   4690 	.globl	C$player.c$642$1_0$355
                           0012EF  4691 	XFplayer$r_bouncy_function$0$0	= .
                                   4692 	.globl	XFplayer$r_bouncy_function$0$0
      0012EF C9                    4693 	ret
                           0012F0  4694 	Fplayer$make_cloth_fall$0$0	= .
                                   4695 	.globl	Fplayer$make_cloth_fall$0$0
                           0012F0  4696 	C$player.c$644$1_0$368	= .
                                   4697 	.globl	C$player.c$644$1_0$368
                                   4698 ;src/player.c:644: static void make_cloth_fall(uint8_t sprite_in_OAM){
                                   4699 ;	---------------------------------
                                   4700 ; Function make_cloth_fall
                                   4701 ; ---------------------------------
      0012F0                       4702 _make_cloth_fall:
                           0012F0  4703 	C$player.c$645$1_0$368	= .
                                   4704 	.globl	C$player.c$645$1_0$368
                                   4705 ;src/player.c:645: clothes_speed |= (0b00000001 << ((sprite_in_OAM)<<1));
      0012F0 F8 02                 4706 	ldhl	sp,	#2
      0012F2 4E                    4707 	ld	c, (hl)
      0012F3 79                    4708 	ld	a, c
      0012F4 87                    4709 	add	a, a
      0012F5 47                    4710 	ld	b, a
      0012F6 3E 01                 4711 	ld	a, #0x01
      0012F8 04                    4712 	inc	b
      0012F9 18 01                 4713 	jr	00106$
      0012FB                       4714 00105$:
      0012FB 87                    4715 	add	a, a
      0012FC                       4716 00106$:
      0012FC 05                    4717 	dec	b
      0012FD 20 FC                 4718 	jr	NZ,00105$
      0012FF 21r00r00              4719 	ld	hl, #_clothes_speed
      001302 B6                    4720 	or	a, (hl)
      001303 77                    4721 	ld	(hl), a
                                   4722 ;src/player.c:646: set_sprite_tile(16 + sprite_in_OAM, get_sprite_tile(16 + sprite_in_OAM) + 2);
      001304 79                    4723 	ld	a, c
      001305 C6 10                 4724 	add	a, #0x10
      001307 5F                    4725 	ld	e, a
                                   4726 ;C:/gbdk/include/gb/gb.h:1458: return shadow_OAM[nb].tile;
      001308 6B                    4727 	ld	l, e
      001309 01r00r00              4728 	ld	bc, #_shadow_OAM+0
                                   4729 ;	spillPairReg hl
                                   4730 ;	spillPairReg hl
      00130C 26 00                 4731 	ld	h, #0x00
                                   4732 ;	spillPairReg hl
                                   4733 ;	spillPairReg hl
      00130E 29                    4734 	add	hl, hl
      00130F 29                    4735 	add	hl, hl
      001310 09                    4736 	add	hl, bc
      001311 23                    4737 	inc	hl
      001312 23                    4738 	inc	hl
      001313 4E                    4739 	ld	c, (hl)
                                   4740 ;src/player.c:646: set_sprite_tile(16 + sprite_in_OAM, get_sprite_tile(16 + sprite_in_OAM) + 2);
      001314 0C                    4741 	inc	c
      001315 0C                    4742 	inc	c
                                   4743 ;C:/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001316 6B                    4744 	ld	l, e
                                   4745 ;	spillPairReg hl
                                   4746 ;	spillPairReg hl
      001317 26 00                 4747 	ld	h, #0x00
                                   4748 ;	spillPairReg hl
                                   4749 ;	spillPairReg hl
      001319 29                    4750 	add	hl, hl
      00131A 29                    4751 	add	hl, hl
      00131B 11r00r00              4752 	ld	de, #_shadow_OAM
      00131E 19                    4753 	add	hl, de
      00131F 23                    4754 	inc	hl
      001320 23                    4755 	inc	hl
      001321 71                    4756 	ld	(hl), c
                           001322  4757 	C$player.c$646$3_0$368	= .
                                   4758 	.globl	C$player.c$646$3_0$368
                                   4759 ;src/player.c:646: set_sprite_tile(16 + sprite_in_OAM, get_sprite_tile(16 + sprite_in_OAM) + 2);
                           001322  4760 	C$player.c$647$3_0$368	= .
                                   4761 	.globl	C$player.c$647$3_0$368
                                   4762 ;src/player.c:647: }
                           001322  4763 	C$player.c$647$3_0$368	= .
                                   4764 	.globl	C$player.c$647$3_0$368
                           001322  4765 	XFplayer$make_cloth_fall$0$0	= .
                                   4766 	.globl	XFplayer$make_cloth_fall$0$0
      001322 C9                    4767 	ret
                           001323  4768 	Fplayer$r_shingled_function$0$0	= .
                                   4769 	.globl	Fplayer$r_shingled_function$0$0
                           001323  4770 	C$player.c$649$3_0$376	= .
                                   4771 	.globl	C$player.c$649$3_0$376
                                   4772 ;src/player.c:649: static bool r_shingled_function(uint8_t epa){
                                   4773 ;	---------------------------------
                                   4774 ; Function r_shingled_function
                                   4775 ; ---------------------------------
      001323                       4776 _r_shingled_function:
                           001323  4777 	C$player.c$650$1_0$376	= .
                                   4778 	.globl	C$player.c$650$1_0$376
                                   4779 ;src/player.c:650: if(epa == CENTER_UP){
      001323 F8 02                 4780 	ldhl	sp,	#2
      001325 7E                    4781 	ld	a, (hl)
      001326 D6 31                 4782 	sub	a, #0x31
      001328 20 2D                 4783 	jr	NZ, 00102$
                                   4784 ;src/player.c:403: if(current_state == state) {return;}
      00132A FAr10r00              4785 	ld	a, (#_current_state)
      00132D D6 04                 4786 	sub	a, #0x04
      00132F 28 19                 4787 	jr	Z, 00109$
                                   4788 ;src/player.c:404: if(current_state == PLAYER_STATE_FALLING){instanciate_collision_puffs();}
      001331 FAr10r00              4789 	ld	a, (#_current_state)
      001334 D6 03                 4790 	sub	a, #0x03
      001336 20 03                 4791 	jr	NZ, 00108$
      001338 CDrFBr06              4792 	call	_instanciate_collision_puffs
      00133B                       4793 00108$:
                                   4794 ;src/player.c:405: frame_counter = 0;
      00133B 21r01r00              4795 	ld	hl, #_frame_counter
      00133E 36 00                 4796 	ld	(hl), #0x00
                                   4797 ;src/player.c:406: current_frame = 0;
      001340 21r02r00              4798 	ld	hl, #_current_frame
      001343 36 00                 4799 	ld	(hl), #0x00
                                   4800 ;src/player.c:407: current_state = state;
      001345 21r10r00              4801 	ld	hl, #_current_state
      001348 36 04                 4802 	ld	(hl), #0x04
                                   4803 ;src/player.c:651: switch_state(PLAYER_STATE_HURT);
      00134A                       4804 00109$:
                           00134A  4805 	C$player.c$652$2_0$377	= .
                                   4806 	.globl	C$player.c$652$2_0$377
                                   4807 ;src/player.c:652: y_speed = 10;
      00134A 21r0Br00              4808 	ld	hl, #_y_speed
      00134D 36 0A                 4809 	ld	(hl), #0x0a
                           00134F  4810 	C$player.c$653$2_0$377	= .
                                   4811 	.globl	C$player.c$653$2_0$377
                                   4812 ;src/player.c:653: x_speed = 0;
      00134F 21r07r00              4813 	ld	hl, #_x_speed
      001352 36 00                 4814 	ld	(hl), #0x00
                           001354  4815 	C$player.c$654$2_0$377	= .
                                   4816 	.globl	C$player.c$654$2_0$377
                                   4817 ;src/player.c:654: return true;
      001354 1E 01                 4818 	ld	e, #0x01
      001356 C9                    4819 	ret
      001357                       4820 00102$:
                           001357  4821 	C$player.c$656$1_0$376	= .
                                   4822 	.globl	C$player.c$656$1_0$376
                                   4823 ;src/player.c:656: if(epa == CENTER_DOWN){
      001357 F8 02                 4824 	ldhl	sp,	#2
      001359 7E                    4825 	ld	a, (hl)
      00135A D6 32                 4826 	sub	a, #0x32
      00135C 20 03                 4827 	jr	NZ, 00104$
                           00135E  4828 	C$player.c$657$2_0$378	= .
                                   4829 	.globl	C$player.c$657$2_0$378
                                   4830 ;src/player.c:657: play_bump_sfx();
      00135E CDr00r00              4831 	call	_play_bump_sfx
      001361                       4832 00104$:
                           001361  4833 	C$player.c$659$1_0$376	= .
                                   4834 	.globl	C$player.c$659$1_0$376
                                   4835 ;src/player.c:659: return false;
      001361 1E 00                 4836 	ld	e, #0x00
                           001363  4837 	C$player.c$660$1_0$376	= .
                                   4838 	.globl	C$player.c$660$1_0$376
                                   4839 ;src/player.c:660: }
                           001363  4840 	C$player.c$660$1_0$376	= .
                                   4841 	.globl	C$player.c$660$1_0$376
                           001363  4842 	XFplayer$r_shingled_function$0$0	= .
                                   4843 	.globl	XFplayer$r_shingled_function$0$0
      001363 C9                    4844 	ret
                           001364  4845 	Fplayer$r_spikey_function$0$0	= .
                                   4846 	.globl	Fplayer$r_spikey_function$0$0
                           001364  4847 	C$player.c$661$1_0$385	= .
                                   4848 	.globl	C$player.c$661$1_0$385
                                   4849 ;src/player.c:661: static bool r_spikey_function(uint8_t epa){
                                   4850 ;	---------------------------------
                                   4851 ; Function r_spikey_function
                                   4852 ; ---------------------------------
      001364                       4853 _r_spikey_function:
                           001364  4854 	C$player.c$662$1_0$385	= .
                                   4855 	.globl	C$player.c$662$1_0$385
                                   4856 ;src/player.c:662: if(epa == CENTER_UP){
      001364 F8 02                 4857 	ldhl	sp,	#2
      001366 7E                    4858 	ld	a, (hl)
      001367 D6 31                 4859 	sub	a, #0x31
      001369 20 2A                 4860 	jr	NZ, 00102$
                                   4861 ;src/player.c:403: if(current_state == state) {return;}
                                   4862 ;src/player.c:404: if(current_state == PLAYER_STATE_FALLING){instanciate_collision_puffs();}
      00136B FAr10r00              4863 	ld	a,(#_current_state)
      00136E FE 04                 4864 	cp	a,#0x04
      001370 28 16                 4865 	jr	Z, 00109$
      001372 D6 03                 4866 	sub	a, #0x03
      001374 20 03                 4867 	jr	NZ, 00108$
      001376 CDrFBr06              4868 	call	_instanciate_collision_puffs
      001379                       4869 00108$:
                                   4870 ;src/player.c:405: frame_counter = 0;
      001379 21r01r00              4871 	ld	hl, #_frame_counter
      00137C 36 00                 4872 	ld	(hl), #0x00
                                   4873 ;src/player.c:406: current_frame = 0;
      00137E 21r02r00              4874 	ld	hl, #_current_frame
      001381 36 00                 4875 	ld	(hl), #0x00
                                   4876 ;src/player.c:407: current_state = state;
      001383 21r10r00              4877 	ld	hl, #_current_state
      001386 36 04                 4878 	ld	(hl), #0x04
                                   4879 ;src/player.c:663: switch_state(PLAYER_STATE_HURT);
      001388                       4880 00109$:
                           001388  4881 	C$player.c$664$2_0$386	= .
                                   4882 	.globl	C$player.c$664$2_0$386
                                   4883 ;src/player.c:664: y_speed = (int8_t)(HURT_Y_SPEED);
      001388 21r0Br00              4884 	ld	hl, #_y_speed
      00138B 36 F0                 4885 	ld	(hl), #0xf0
                           00138D  4886 	C$player.c$665$2_0$386	= .
                                   4887 	.globl	C$player.c$665$2_0$386
                                   4888 ;src/player.c:665: x_speed = HURT_X_SPEED;
      00138D 21r07r00              4889 	ld	hl, #_x_speed
      001390 36 08                 4890 	ld	(hl), #0x08
                           001392  4891 	C$player.c$666$2_0$386	= .
                                   4892 	.globl	C$player.c$666$2_0$386
                                   4893 ;src/player.c:666: return true;
      001392 1E 01                 4894 	ld	e, #0x01
      001394 C9                    4895 	ret
      001395                       4896 00102$:
                           001395  4897 	C$player.c$668$1_0$385	= .
                                   4898 	.globl	C$player.c$668$1_0$385
                                   4899 ;src/player.c:668: if(epa == CENTER_DOWN){
      001395 F8 02                 4900 	ldhl	sp,	#2
      001397 7E                    4901 	ld	a, (hl)
      001398 D6 32                 4902 	sub	a, #0x32
      00139A 20 03                 4903 	jr	NZ, 00104$
                           00139C  4904 	C$player.c$669$2_0$387	= .
                                   4905 	.globl	C$player.c$669$2_0$387
                                   4906 ;src/player.c:669: play_bump_sfx();
      00139C CDr00r00              4907 	call	_play_bump_sfx
      00139F                       4908 00104$:
                           00139F  4909 	C$player.c$671$1_0$385	= .
                                   4910 	.globl	C$player.c$671$1_0$385
                                   4911 ;src/player.c:671: return false;
      00139F 1E 00                 4912 	ld	e, #0x00
                           0013A1  4913 	C$player.c$672$1_0$385	= .
                                   4914 	.globl	C$player.c$672$1_0$385
                                   4915 ;src/player.c:672: }
                           0013A1  4916 	C$player.c$672$1_0$385	= .
                                   4917 	.globl	C$player.c$672$1_0$385
                           0013A1  4918 	XFplayer$r_spikey_function$0$0	= .
                                   4919 	.globl	XFplayer$r_spikey_function$0$0
      0013A1 C9                    4920 	ret
                           0013A2  4921 	Fplayer$r_initf_function$0$0	= .
                                   4922 	.globl	Fplayer$r_initf_function$0$0
                           0013A2  4923 	C$player.c$673$1_0$394	= .
                                   4924 	.globl	C$player.c$673$1_0$394
                                   4925 ;src/player.c:673: static bool r_initf_function(uint8_t epa){
                                   4926 ;	---------------------------------
                                   4927 ; Function r_initf_function
                                   4928 ; ---------------------------------
      0013A2                       4929 _r_initf_function:
                           0013A2  4930 	C$player.c$674$1_0$394	= .
                                   4931 	.globl	C$player.c$674$1_0$394
                                   4932 ;src/player.c:674: game_started_flag = epa == CENTER_UP;
      0013A2 F8 02                 4933 	ldhl	sp,	#2
      0013A4 7E                    4934 	ld	a, (hl)
      0013A5 D6 31                 4935 	sub	a, #0x31
      0013A7 3E 01                 4936 	ld	a, #0x01
      0013A9 28 01                 4937 	jr	Z, 00117$
      0013AB AF                    4938 	xor	a, a
      0013AC                       4939 00117$:
      0013AC 4F                    4940 	ld	c, a
      0013AD 21r00r00              4941 	ld	hl, #_game_started_flag
      0013B0 71                    4942 	ld	(hl), c
                           0013B1  4943 	C$player.c$675$1_0$394	= .
                                   4944 	.globl	C$player.c$675$1_0$394
                                   4945 ;src/player.c:675: return (bool)(epa != CENTER_UP || (joy & J_DOWN));
      0013B1 CB 41                 4946 	bit	0, c
      0013B3 28 0C                 4947 	jr	Z, 00104$
      0013B5 FAr05r00              4948 	ld	a, (#_joy)
      0013B8 0F                    4949 	rrca
      0013B9 0F                    4950 	rrca
      0013BA 0F                    4951 	rrca
      0013BB E6 01                 4952 	and	a,#0x01
      0013BD 20 02                 4953 	jr	NZ, 00104$
      0013BF 5F                    4954 	ld	e,a
      0013C0 C9                    4955 	ret
      0013C1                       4956 00104$:
      0013C1 1E 01                 4957 	ld	e, #0x01
                           0013C3  4958 	C$player.c$676$1_0$394	= .
                                   4959 	.globl	C$player.c$676$1_0$394
                                   4960 ;src/player.c:676: }
                           0013C3  4961 	C$player.c$676$1_0$394	= .
                                   4962 	.globl	C$player.c$676$1_0$394
                           0013C3  4963 	XFplayer$r_initf_function$0$0	= .
                                   4964 	.globl	XFplayer$r_initf_function$0$0
      0013C3 C9                    4965 	ret
                                   4966 	.area _CODE
                                   4967 	.area _INITIALIZER
                           000000  4968 Fplayer$__xinit_puff_frame$0_0$0 == .
      000000                       4969 __xinit__puff_frame:
      000000 00                    4970 	.db #0x00	; 0
      000001 00                    4971 	.db #0x00	; 0
      000002 00                    4972 	.db #0x00	; 0
      000003 00                    4973 	.db #0x00	; 0
                           000004  4974 Fplayer$__xinit_rect_functions$0_0$0 == .
      000004                       4975 __xinit__rect_functions:
      000004rB2r0F                 4976 	.dw _r_solid_function
      000006r19r12                 4977 	.dw _r_traversable_function
      000008r2Fr12                 4978 	.dw _r_inactive_function
      00000Ar32r12                 4979 	.dw _r_bouncy_function
      00000Cr23r13                 4980 	.dw _r_shingled_function
      00000Er64r13                 4981 	.dw _r_spikey_function
      000010rA2r13                 4982 	.dw _r_initf_function
                                   4983 	.area _CABS (ABS)
