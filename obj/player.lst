                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module player
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _hide_sprites_range
                                     12 	.globl _set_sprite_data
                                     13 	.globl _set_bkg_tiles
                                     14 	.globl _joypad
                                     15 	.globl _play_boing_sfx
                                     16 	.globl _stop_hurt_sfx
                                     17 	.globl _play_hurt_sfx
                                     18 	.globl _play_break_sfx
                                     19 	.globl _play_bump_sfx
                                     20 	.globl _stop_jump_sfx
                                     21 	.globl _play_jump_sfx
                                     22 	.globl _stop_sfx
                                     23 	.globl _score
                                     24 	.globl _a_not_pressed
                                     25 	.globl _player_dead_flag
                                     26 	.globl _clamp_y_velocity
                                     27 	.globl _clamp_x_velocity
                                     28 	.globl _jump_power
                                     29 	.globl _impulse
                                     30 	.globl _fall_g
                                     31 	.globl _jump_g
                                     32 	.globl _player_init
                                     33 	.globl _compute_player_frame
                                     34 ;--------------------------------------------------------
                                     35 ; special function registers
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area _DATA
                           000000    41 G$player_dead_flag$0_0$0==.
      000000                         42 _player_dead_flag::
      000000                         43 	.ds 1
                           000001    44 Fplayer$frame_counter$0_0$0==.
      000001                         45 _frame_counter:
      000001                         46 	.ds 1
                           000002    47 Fplayer$current_frame$0_0$0==.
      000002                         48 _current_frame:
      000002                         49 	.ds 1
                           000003    50 G$a_not_pressed$0_0$0==.
      000003                         51 _a_not_pressed::
      000003                         52 	.ds 1
                           000004    53 Fplayer$i$0_0$0==.
      000004                         54 _i:
      000004                         55 	.ds 1
                           000005    56 Fplayer$joy$0_0$0==.
      000005                         57 _joy:
      000005                         58 	.ds 1
                           000006    59 Fplayer$x_force$0_0$0==.
      000006                         60 _x_force:
      000006                         61 	.ds 1
                           000007    62 Fplayer$x_speed$0_0$0==.
      000007                         63 _x_speed:
      000007                         64 	.ds 1
                           000008    65 Fplayer$is_facing_right$0_0$0==.
      000008                         66 _is_facing_right:
      000008                         67 	.ds 1
                           000009    68 Fplayer$is_grounded$0_0$0==.
      000009                         69 _is_grounded:
      000009                         70 	.ds 1
                           00000A    71 Fplayer$is_jumping$0_0$0==.
      00000A                         72 _is_jumping:
      00000A                         73 	.ds 1
                           00000B    74 Fplayer$y_speed$0_0$0==.
      00000B                         75 _y_speed:
      00000B                         76 	.ds 1
                           00000C    77 Fplayer$player_x$0_0$0==.
      00000C                         78 _player_x:
      00000C                         79 	.ds 1
                           00000D    80 Fplayer$player_y$0_0$0==.
      00000D                         81 _player_y:
      00000D                         82 	.ds 1
                           00000E    83 Fplayer$last_x$0_0$0==.
      00000E                         84 _last_x:
      00000E                         85 	.ds 1
                           00000F    86 Fplayer$last_y$0_0$0==.
      00000F                         87 _last_y:
      00000F                         88 	.ds 1
                           000010    89 Fplayer$current_state$0_0$0==.
      000010                         90 _current_state:
      000010                         91 	.ds 1
                           000011    92 Fplayer$current_coyote_frames$0_0$0==.
      000011                         93 _current_coyote_frames:
      000011                         94 	.ds 1
                           000012    95 G$score$0_0$0==.
      000012                         96 _score::
      000012                         97 	.ds 2
                           000014    98 Fplayer$max_player_y$0_0$0==.
      000014                         99 _max_player_y:
      000014                        100 	.ds 1
                           000015   101 Fplayer$test_max_player_y$0_0$0==.
      000015                        102 _test_max_player_y:
      000015                        103 	.ds 1
                           000016   104 Fplayer$highest_visited_floor$0_0$0==.
      000016                        105 _highest_visited_floor:
      000016                        106 	.ds 1
                           000017   107 Fplayer$next_free_puff$0_0$0==.
      000017                        108 _next_free_puff:
      000017                        109 	.ds 1
                           000018   110 Fplayer$brick_frame$0_0$0==.
      000018                        111 _brick_frame:
      000018                        112 	.ds 1
                           000019   113 Fplayer$brick_y_speed$0_0$0==.
      000019                        114 _brick_y_speed:
      000019                        115 	.ds 1
                                    116 ;--------------------------------------------------------
                                    117 ; ram data
                                    118 ;--------------------------------------------------------
                                    119 	.area _INITIALIZED
                           000000   120 Fplayer$puff_frame$0_0$0==.
      000000                        121 _puff_frame:
      000000                        122 	.ds 4
                           000004   123 Fplayer$rect_functions$0_0$0==.
      000004                        124 _rect_functions:
      000004                        125 	.ds 14
                                    126 ;--------------------------------------------------------
                                    127 ; absolute external ram data
                                    128 ;--------------------------------------------------------
                                    129 	.area _DABS (ABS)
                                    130 ;--------------------------------------------------------
                                    131 ; global & static initialisations
                                    132 ;--------------------------------------------------------
                                    133 	.area _HOME
                                    134 	.area _GSINIT
                                    135 	.area _GSFINAL
                                    136 	.area _GSINIT
                                    137 ;--------------------------------------------------------
                                    138 ; Home
                                    139 ;--------------------------------------------------------
                                    140 	.area _HOME
                                    141 	.area _HOME
                                    142 ;--------------------------------------------------------
                                    143 ; code
                                    144 ;--------------------------------------------------------
                                    145 	.area _CODE
                           000000   146 	G$player_init$0$0	= .
                                    147 	.globl	G$player_init$0$0
                           000000   148 	C$player.c$127$0_0$153	= .
                                    149 	.globl	C$player.c$127$0_0$153
                                    150 ;src/player.c:127: void player_init(void)
                                    151 ;	---------------------------------
                                    152 ; Function player_init
                                    153 ; ---------------------------------
      000000                        154 _player_init::
                           000000   155 	C$player.c$129$1_0$153	= .
                                    156 	.globl	C$player.c$129$1_0$153
                                    157 ;src/player.c:129: player_dead_flag = false;
      000000 21r00r00               158 	ld	hl, #_player_dead_flag
      000003 36 00                  159 	ld	(hl), #0x00
                           000005   160 	C$player.c$131$1_0$153	= .
                                    161 	.globl	C$player.c$131$1_0$153
                                    162 ;src/player.c:131: OBP0_REG = 0xE4; //11100100
      000005 3E E4                  163 	ld	a, #0xe4
      000007 E0r00                  164 	ldh	(_OBP0_REG + 0), a
                           000009   165 	C$player.c$134$1_0$153	= .
                                    166 	.globl	C$player.c$134$1_0$153
                                    167 ;src/player.c:134: set_sprite_data(TILE_NUM_START, PLAYER_SPRITES, playerSprites);
      000009 11r00r00               168 	ld	de, #_playerSprites
      00000C D5                     169 	push	de
      00000D 21 00 18               170 	ld	hl, #0x1800
      000010 E5                     171 	push	hl
      000011 CDr00r00               172 	call	_set_sprite_data
      000014 E8 04                  173 	add	sp, #4
                           000016   174 	C$player.c$135$1_0$153	= .
                                    175 	.globl	C$player.c$135$1_0$153
                                    176 ;src/player.c:135: set_sprite_data(PLAYER_SPRITES, 3, Sfx);
      000016 11r00r00               177 	ld	de, #_Sfx
      000019 D5                     178 	push	de
      00001A 21 18 03               179 	ld	hl, #0x318
      00001D E5                     180 	push	hl
      00001E CDr00r00               181 	call	_set_sprite_data
      000021 E8 04                  182 	add	sp, #4
                           000023   183 	C$player.c$137$1_0$153	= .
                                    184 	.globl	C$player.c$137$1_0$153
                                    185 ;src/player.c:137: frame_counter = 0;
      000023 21r01r00               186 	ld	hl, #_frame_counter
      000026 36 00                  187 	ld	(hl), #0x00
                           000028   188 	C$player.c$138$1_0$153	= .
                                    189 	.globl	C$player.c$138$1_0$153
                                    190 ;src/player.c:138: current_frame = 0;
      000028 21r02r00               191 	ld	hl, #_current_frame
      00002B 36 00                  192 	ld	(hl), #0x00
                           00002D   193 	C$player.c$139$1_0$153	= .
                                    194 	.globl	C$player.c$139$1_0$153
                                    195 ;src/player.c:139: current_state = PLAYER_STATE_IDLE;
      00002D 21r10r00               196 	ld	hl, #_current_state
      000030 36 00                  197 	ld	(hl), #0x00
                           000032   198 	C$player.c$140$1_0$153	= .
                                    199 	.globl	C$player.c$140$1_0$153
                                    200 ;src/player.c:140: x_force = 0U;
      000032 21r06r00               201 	ld	hl, #_x_force
      000035 36 00                  202 	ld	(hl), #0x00
                           000037   203 	C$player.c$141$1_0$153	= .
                                    204 	.globl	C$player.c$141$1_0$153
                                    205 ;src/player.c:141: x_speed = 0U;
      000037 21r07r00               206 	ld	hl, #_x_speed
      00003A 36 00                  207 	ld	(hl), #0x00
                           00003C   208 	C$player.c$142$1_0$153	= .
                                    209 	.globl	C$player.c$142$1_0$153
                                    210 ;src/player.c:142: y_speed = 0;
      00003C 21r0Br00               211 	ld	hl, #_y_speed
      00003F 36 00                  212 	ld	(hl), #0x00
                           000041   213 	C$player.c$143$1_0$153	= .
                                    214 	.globl	C$player.c$143$1_0$153
                                    215 ;src/player.c:143: player_x = last_x = 16U;
      000041 21r0Er00               216 	ld	hl, #_last_x
      000044 36 10                  217 	ld	(hl), #0x10
      000046 21r0Cr00               218 	ld	hl, #_player_x
      000049 36 10                  219 	ld	(hl), #0x10
                           00004B   220 	C$player.c$144$1_0$153	= .
                                    221 	.globl	C$player.c$144$1_0$153
                                    222 ;src/player.c:144: player_y = last_y = 128U;
      00004B 21r0Fr00               223 	ld	hl, #_last_y
      00004E 36 80                  224 	ld	(hl), #0x80
      000050 21r0Dr00               225 	ld	hl, #_player_y
      000053 36 80                  226 	ld	(hl), #0x80
                           000055   227 	C$player.c$145$1_0$153	= .
                                    228 	.globl	C$player.c$145$1_0$153
                                    229 ;src/player.c:145: is_facing_right = true;
      000055 21r08r00               230 	ld	hl, #_is_facing_right
      000058 36 01                  231 	ld	(hl), #0x01
                           00005A   232 	C$player.c$146$1_0$153	= .
                                    233 	.globl	C$player.c$146$1_0$153
                                    234 ;src/player.c:146: is_grounded = true;
      00005A 21r09r00               235 	ld	hl, #_is_grounded
      00005D 36 01                  236 	ld	(hl), #0x01
                           00005F   237 	C$player.c$147$1_0$153	= .
                                    238 	.globl	C$player.c$147$1_0$153
                                    239 ;src/player.c:147: next_free_puff = 0;
      00005F 21r17r00               240 	ld	hl, #_next_free_puff
      000062 36 00                  241 	ld	(hl), #0x00
                           000064   242 	C$player.c$148$1_0$153	= .
                                    243 	.globl	C$player.c$148$1_0$153
                                    244 ;src/player.c:148: score = 0;
      000064 AF                     245 	xor	a, a
      000065 21r12r00               246 	ld	hl, #_score
      000068 22                     247 	ld	(hl+), a
      000069 77                     248 	ld	(hl), a
                           00006A   249 	C$player.c$149$1_0$153	= .
                                    250 	.globl	C$player.c$149$1_0$153
                                    251 ;src/player.c:149: highest_visited_floor = 1;
      00006A 21r16r00               252 	ld	hl, #_highest_visited_floor
      00006D 36 01                  253 	ld	(hl), #0x01
                           00006F   254 	C$player.c$150$1_0$153	= .
                                    255 	.globl	C$player.c$150$1_0$153
                                    256 ;src/player.c:150: max_player_y = 0;
      00006F 21r14r00               257 	ld	hl, #_max_player_y
      000072 36 00                  258 	ld	(hl), #0x00
                           000074   259 	C$player.c$151$1_0$153	= .
                                    260 	.globl	C$player.c$151$1_0$153
                                    261 ;src/player.c:151: a_not_pressed = true;
      000074 21r03r00               262 	ld	hl, #_a_not_pressed
      000077 36 01                  263 	ld	(hl), #0x01
                           000079   264 	C$player.c$152$1_0$153	= .
                                    265 	.globl	C$player.c$152$1_0$153
                                    266 ;src/player.c:152: current_coyote_frames = 0;
      000079 21r11r00               267 	ld	hl, #_current_coyote_frames
      00007C 36 00                  268 	ld	(hl), #0x00
                           00007E   269 	C$player.c$153$1_0$153	= .
                                    270 	.globl	C$player.c$153$1_0$153
                                    271 ;src/player.c:153: joy = 0;
      00007E 21r05r00               272 	ld	hl, #_joy
      000081 36 00                  273 	ld	(hl), #0x00
                                    274 ;src/player.c:154: move_metasprite(idle_metasprites[0], TILE_NUM_START, SPR_NUM_START, player_x, player_y);
      000083 21r00r00               275 	ld	hl, #_idle_metasprites
      000086 2A                     276 	ld	a, (hl+)
      000087 4F                     277 	ld	c, a
      000088 7E                     278 	ld	a, (hl)
                                    279 ;C:/gbdk/include/gb/metasprites.h:138: __current_metasprite = metasprite;
      000089 21r00r00               280 	ld	hl, #___current_metasprite
      00008C 71                     281 	ld	(hl), c
      00008D 23                     282 	inc	hl
      00008E 77                     283 	ld	(hl), a
                                    284 ;C:/gbdk/include/gb/metasprites.h:139: __current_base_tile = base_tile;
      00008F 21r00r00               285 	ld	hl, #___current_base_tile
      000092 36 00                  286 	ld	(hl), #0x00
                                    287 ;C:/gbdk/include/gb/metasprites.h:140: return __move_metasprite(base_sprite, x, y);
      000094 21 10 80               288 	ld	hl, #0x8010
      000097 E5                     289 	push	hl
      000098 AF                     290 	xor	a, a
      000099 F5                     291 	push	af
      00009A 33                     292 	inc	sp
      00009B CDr00r00               293 	call	___move_metasprite
      00009E E8 03                  294 	add	sp, #3
                           0000A0   295 	C$player.c$156$1_0$153	= .
                                    296 	.globl	C$player.c$156$1_0$153
                                    297 ;src/player.c:156: set_sprite_data(0x1B, 2, brick_particle);
      0000A0 11r00r00               298 	ld	de, #_brick_particle
      0000A3 D5                     299 	push	de
      0000A4 21 1B 02               300 	ld	hl, #0x21b
      0000A7 E5                     301 	push	hl
      0000A8 CDr00r00               302 	call	_set_sprite_data
      0000AB E8 04                  303 	add	sp, #4
                                    304 ;C:/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0000AD 21r32r00               305 	ld	hl, #(_shadow_OAM + 50)
      0000B0 36 1B                  306 	ld	(hl), #0x1b
      0000B2 21r36r00               307 	ld	hl, #(_shadow_OAM + 54)
      0000B5 36 1B                  308 	ld	(hl), #0x1b
      0000B7 21r3Ar00               309 	ld	hl, #(_shadow_OAM + 58)
      0000BA 36 1C                  310 	ld	(hl), #0x1c
      0000BC 21r3Er00               311 	ld	hl, #(_shadow_OAM + 62)
      0000BF 36 1C                  312 	ld	(hl), #0x1c
                           0000C1   313 	C$player.c$161$1_0$153	= .
                                    314 	.globl	C$player.c$161$1_0$153
                                    315 ;src/player.c:161: brick_frame = 0;
      0000C1 21r18r00               316 	ld	hl, #_brick_frame
      0000C4 36 00                  317 	ld	(hl), #0x00
                           0000C6   318 	C$player.c$162$1_0$153	= .
                                    319 	.globl	C$player.c$162$1_0$153
                                    320 ;src/player.c:162: }
                           0000C6   321 	C$player.c$162$1_0$153	= .
                                    322 	.globl	C$player.c$162$1_0$153
                           0000C6   323 	XG$player_init$0$0	= .
                                    324 	.globl	XG$player_init$0$0
      0000C6 C9                     325 	ret
                           0000C7   326 G$jump_g$0_0$0 == .
      0000C7                        327 _jump_g:
      0000C7 02                     328 	.db #0x02	; 2
                           0000C8   329 G$fall_g$0_0$0 == .
      0000C8                        330 _fall_g:
      0000C8 04                     331 	.db #0x04	; 4
                           0000C9   332 G$impulse$0_0$0 == .
      0000C9                        333 _impulse:
      0000C9 02                     334 	.db #0x02	; 2
                           0000CA   335 G$jump_power$0_0$0 == .
      0000CA                        336 _jump_power:
      0000CA DD                     337 	.db #0xdd	; -35
                           0000CB   338 G$clamp_x_velocity$0_0$0 == .
      0000CB                        339 _clamp_x_velocity:
      0000CB 08                     340 	.db #0x08	; 8
                           0000CC   341 G$clamp_y_velocity$0_0$0 == .
      0000CC                        342 _clamp_y_velocity:
      0000CC 19                     343 	.db #0x19	;  25
                           0000CD   344 	G$compute_player_frame$0$0	= .
                                    345 	.globl	G$compute_player_frame$0$0
                           0000CD   346 	C$player.c$164$1_0$170	= .
                                    347 	.globl	C$player.c$164$1_0$170
                                    348 ;src/player.c:164: void compute_player_frame(void)
                                    349 ;	---------------------------------
                                    350 ; Function compute_player_frame
                                    351 ; ---------------------------------
      0000CD                        352 _compute_player_frame::
                           0000CD   353 	C$player.c$166$1_0$170	= .
                                    354 	.globl	C$player.c$166$1_0$170
                                    355 ;src/player.c:166: if(current_state == PLAYER_STATE_HURT){
      0000CD FAr10r00               356 	ld	a, (#_current_state)
      0000D0 D6 04                  357 	sub	a, #0x04
      0000D2 20 05                  358 	jr	NZ, 00104$
                           0000D4   359 	C$player.c$167$2_0$171	= .
                                    360 	.globl	C$player.c$167$2_0$171
                                    361 ;src/player.c:167: hurt_frame();
      0000D4 CDr11r08               362 	call	_hurt_frame
      0000D7 18 0C                  363 	jr	00105$
      0000D9                        364 00104$:
                           0000D9   365 	C$player.c$170$2_0$172	= .
                                    366 	.globl	C$player.c$170$2_0$172
                                    367 ;src/player.c:170: retrieve_input();
      0000D9 CDr46r01               368 	call	_retrieve_input
                           0000DC   369 	C$player.c$172$2_0$172	= .
                                    370 	.globl	C$player.c$172$2_0$172
                                    371 ;src/player.c:172: if(player_dead_flag) return;
      0000DC 21r00r00               372 	ld	hl, #_player_dead_flag
      0000DF CB 46                  373 	bit	0, (hl)
      0000E1 C0                     374 	ret	NZ
                           0000E2   375 	C$player.c$174$2_0$172	= .
                                    376 	.globl	C$player.c$174$2_0$172
                                    377 ;src/player.c:174: calculate_physics();
      0000E2 CDr58r02               378 	call	_calculate_physics
      0000E5                        379 00105$:
                           0000E5   380 	C$player.c$180$1_0$170	= .
                                    381 	.globl	C$player.c$180$1_0$170
                                    382 ;src/player.c:180: check_collisions();
      0000E5 CDrFFr08               383 	call	_check_collisions
                           0000E8   384 	C$player.c$181$1_0$170	= .
                                    385 	.globl	C$player.c$181$1_0$170
                                    386 ;src/player.c:181: if(y_speed > 0 && (current_state != PLAYER_STATE_HURT && current_state != PLAYER_STATE_FALLING)){
      0000E8 21r0Br00               387 	ld	hl, #_y_speed
      0000EB 5E                     388 	ld	e, (hl)
      0000EC AF                     389 	xor	a, a
      0000ED 57                     390 	ld	d, a
      0000EE 96                     391 	sub	a, (hl)
      0000EF CB 7B                  392 	bit	7, e
      0000F1 28 07                  393 	jr	Z, 00152$
      0000F3 CB 7A                  394 	bit	7, d
      0000F5 20 08                  395 	jr	NZ, 00153$
      0000F7 BF                     396 	cp	a, a
      0000F8 18 05                  397 	jr	00153$
      0000FA                        398 00152$:
      0000FA CB 7A                  399 	bit	7, d
      0000FC 28 01                  400 	jr	Z, 00153$
      0000FE 37                     401 	scf
      0000FF                        402 00153$:
      0000FF 30 1D                  403 	jr	NC, 00107$
      000101 FAr10r00               404 	ld	a,(#_current_state)
      000104 FE 04                  405 	cp	a,#0x04
      000106 28 16                  406 	jr	Z, 00107$
      000108 D6 03                  407 	sub	a, #0x03
      00010A 28 12                  408 	jr	Z, 00107$
                           00010C   409 	C$player.c$182$2_0$173	= .
                                    410 	.globl	C$player.c$182$2_0$173
                                    411 ;src/player.c:182: switch_state(PLAYER_STATE_FALLING);
      00010C 3E 03                  412 	ld	a, #0x03
      00010E F5                     413 	push	af
      00010F 33                     414 	inc	sp
      000110 CDrDBr08               415 	call	_switch_state
      000113 33                     416 	inc	sp
                           000114   417 	C$player.c$183$2_0$173	= .
                                    418 	.globl	C$player.c$183$2_0$173
                                    419 ;src/player.c:183: is_grounded = false;
      000114 21r09r00               420 	ld	hl, #_is_grounded
      000117 36 00                  421 	ld	(hl), #0x00
                           000119   422 	C$player.c$184$2_0$173	= .
                                    423 	.globl	C$player.c$184$2_0$173
                                    424 ;src/player.c:184: is_jumping = false;
      000119 21r0Ar00               425 	ld	hl, #_is_jumping
      00011C 36 00                  426 	ld	(hl), #0x00
      00011E                        427 00107$:
                           00011E   428 	C$player.c$187$1_0$170	= .
                                    429 	.globl	C$player.c$187$1_0$170
                                    430 ;src/player.c:187: if(current_state == PLAYER_STATE_FALLING && current_coyote_frames < COYOTE_FRAMES) current_coyote_frames++;
      00011E FAr10r00               431 	ld	a, (#_current_state)
      000121 D6 03                  432 	sub	a, #0x03
      000123 20 09                  433 	jr	NZ, 00111$
      000125 21r11r00               434 	ld	hl, #_current_coyote_frames
      000128 7E                     435 	ld	a, (hl)
      000129 D6 04                  436 	sub	a, #0x04
      00012B 30 01                  437 	jr	NC, 00111$
      00012D 34                     438 	inc	(hl)
      00012E                        439 00111$:
                           00012E   440 	C$player.c$189$1_0$170	= .
                                    441 	.globl	C$player.c$189$1_0$170
                                    442 ;src/player.c:189: update_score();
      00012E CDrA3r0E               443 	call	_update_score
                           000131   444 	C$player.c$191$1_0$170	= .
                                    445 	.globl	C$player.c$191$1_0$170
                                    446 ;src/player.c:191: last_x = player_x;
      000131 FAr0Cr00               447 	ld	a, (#_player_x)
      000134 EAr0Er00               448 	ld	(#_last_x),a
                           000137   449 	C$player.c$192$1_0$170	= .
                                    450 	.globl	C$player.c$192$1_0$170
                                    451 ;src/player.c:192: last_y = player_y;
      000137 FAr0Dr00               452 	ld	a, (#_player_y)
      00013A EAr0Fr00               453 	ld	(#_last_y),a
                           00013D   454 	C$player.c$194$1_0$170	= .
                                    455 	.globl	C$player.c$194$1_0$170
                                    456 ;src/player.c:194: render_all_particles();
      00013D CDrA4r05               457 	call	_render_all_particles
                           000140   458 	C$player.c$196$1_0$170	= .
                                    459 	.globl	C$player.c$196$1_0$170
                                    460 ;src/player.c:196: render_player();
      000140 CDr41r03               461 	call	_render_player
                           000143   462 	C$player.c$198$1_0$170	= .
                                    463 	.globl	C$player.c$198$1_0$170
                                    464 ;src/player.c:198: end_frame();
                           000143   465 	C$player.c$199$1_0$170	= .
                                    466 	.globl	C$player.c$199$1_0$170
                                    467 ;src/player.c:199: }
                           000143   468 	C$player.c$199$1_0$170	= .
                                    469 	.globl	C$player.c$199$1_0$170
                           000143   470 	XG$compute_player_frame$0$0	= .
                                    471 	.globl	XG$compute_player_frame$0$0
      000143 C3r73r08               472 	jp	_end_frame
                           000146   473 	Fplayer$retrieve_input$0$0	= .
                                    474 	.globl	Fplayer$retrieve_input$0$0
                           000146   475 	C$player.c$201$1_0$175	= .
                                    476 	.globl	C$player.c$201$1_0$175
                                    477 ;src/player.c:201: static void retrieve_input(void){
                                    478 ;	---------------------------------
                                    479 ; Function retrieve_input
                                    480 ; ---------------------------------
      000146                        481 _retrieve_input:
                           000146   482 	C$player.c$202$1_0$175	= .
                                    483 	.globl	C$player.c$202$1_0$175
                                    484 ;src/player.c:202: joy = joypad();
      000146 CDr00r00               485 	call	_joypad
      000149 21r05r00               486 	ld	hl, #_joy
      00014C 73                     487 	ld	(hl), e
                           00014D   488 	C$player.c$203$1_0$175	= .
                                    489 	.globl	C$player.c$203$1_0$175
                                    490 ;src/player.c:203: if (joy & J_RIGHT)
      00014D 7E                     491 	ld	a, (hl)
      00014E CB 47                  492 	bit	0, a
      000150 28 30                  493 	jr	Z, 00120$
                           000152   494 	C$player.c$205$2_0$176	= .
                                    495 	.globl	C$player.c$205$2_0$176
                                    496 ;src/player.c:205: if(is_grounded)switch_state(PLAYER_STATE_RUNNING);
      000152 21r09r00               497 	ld	hl, #_is_grounded
      000155 CB 46                  498 	bit	0, (hl)
      000157 28 08                  499 	jr	Z, 00102$
      000159 3E 01                  500 	ld	a, #0x01
      00015B F5                     501 	push	af
      00015C 33                     502 	inc	sp
      00015D CDrDBr08               503 	call	_switch_state
      000160 33                     504 	inc	sp
      000161                        505 00102$:
                           000161   506 	C$player.c$206$2_0$176	= .
                                    507 	.globl	C$player.c$206$2_0$176
                                    508 ;src/player.c:206: if (!is_facing_right && x_speed)
      000161 21r08r00               509 	ld	hl, #_is_facing_right
      000164 CB 46                  510 	bit	0, (hl)
      000166 20 0D                  511 	jr	NZ, 00104$
      000168 FAr07r00               512 	ld	a, (#_x_speed)
      00016B B7                     513 	or	a, a
      00016C 28 07                  514 	jr	Z, 00104$
                           00016E   515 	C$player.c$208$3_0$177	= .
                                    516 	.globl	C$player.c$208$3_0$177
                                    517 ;src/player.c:208: x_force = 0;
      00016E 21r06r00               518 	ld	hl, #_x_force
      000171 36 00                  519 	ld	(hl), #0x00
      000173 18 59                  520 	jr	00121$
      000175                        521 00104$:
                           000175   522 	C$player.c$212$3_0$178	= .
                                    523 	.globl	C$player.c$212$3_0$178
                                    524 ;src/player.c:212: is_facing_right = true;
      000175 21r08r00               525 	ld	hl, #_is_facing_right
      000178 36 01                  526 	ld	(hl), #0x01
                           00017A   527 	C$player.c$213$3_0$178	= .
                                    528 	.globl	C$player.c$213$3_0$178
                                    529 ;src/player.c:213: x_force = impulse;
      00017A FArC9r00               530 	ld	a, (#_impulse)
      00017D EAr06r00               531 	ld	(#_x_force),a
      000180 18 4C                  532 	jr	00121$
      000182                        533 00120$:
                           000182   534 	C$player.c$216$1_0$175	= .
                                    535 	.globl	C$player.c$216$1_0$175
                                    536 ;src/player.c:216: else if (joy & J_LEFT)
      000182 CB 4F                  537 	bit	1, a
      000184 28 30                  538 	jr	Z, 00117$
                           000186   539 	C$player.c$218$2_0$179	= .
                                    540 	.globl	C$player.c$218$2_0$179
                                    541 ;src/player.c:218: if(is_grounded)switch_state(PLAYER_STATE_RUNNING);
      000186 21r09r00               542 	ld	hl, #_is_grounded
      000189 CB 46                  543 	bit	0, (hl)
      00018B 28 08                  544 	jr	Z, 00108$
      00018D 3E 01                  545 	ld	a, #0x01
      00018F F5                     546 	push	af
      000190 33                     547 	inc	sp
      000191 CDrDBr08               548 	call	_switch_state
      000194 33                     549 	inc	sp
      000195                        550 00108$:
                           000195   551 	C$player.c$219$2_0$179	= .
                                    552 	.globl	C$player.c$219$2_0$179
                                    553 ;src/player.c:219: if (is_facing_right && x_speed)
      000195 21r08r00               554 	ld	hl, #_is_facing_right
      000198 CB 46                  555 	bit	0, (hl)
      00019A 28 0D                  556 	jr	Z, 00110$
      00019C FAr07r00               557 	ld	a, (#_x_speed)
      00019F B7                     558 	or	a, a
      0001A0 28 07                  559 	jr	Z, 00110$
                           0001A2   560 	C$player.c$221$3_0$180	= .
                                    561 	.globl	C$player.c$221$3_0$180
                                    562 ;src/player.c:221: x_force = 0;
      0001A2 21r06r00               563 	ld	hl, #_x_force
      0001A5 36 00                  564 	ld	(hl), #0x00
      0001A7 18 25                  565 	jr	00121$
      0001A9                        566 00110$:
                           0001A9   567 	C$player.c$225$3_0$181	= .
                                    568 	.globl	C$player.c$225$3_0$181
                                    569 ;src/player.c:225: is_facing_right = false;
      0001A9 21r08r00               570 	ld	hl, #_is_facing_right
      0001AC 36 00                  571 	ld	(hl), #0x00
                           0001AE   572 	C$player.c$226$3_0$181	= .
                                    573 	.globl	C$player.c$226$3_0$181
                                    574 ;src/player.c:226: x_force = impulse;
      0001AE FArC9r00               575 	ld	a, (#_impulse)
      0001B1 EAr06r00               576 	ld	(#_x_force),a
      0001B4 18 18                  577 	jr	00121$
      0001B6                        578 00117$:
                           0001B6   579 	C$player.c$231$2_0$182	= .
                                    580 	.globl	C$player.c$231$2_0$182
                                    581 ;src/player.c:231: x_force = 0;
      0001B6 21r06r00               582 	ld	hl, #_x_force
      0001B9 36 00                  583 	ld	(hl), #0x00
                           0001BB   584 	C$player.c$232$2_0$182	= .
                                    585 	.globl	C$player.c$232$2_0$182
                                    586 ;src/player.c:232: if((!x_speed) && (!y_speed)) switch_state(PLAYER_STATE_IDLE);
      0001BB FAr07r00               587 	ld	a, (#_x_speed)
      0001BE B7                     588 	or	a, a
      0001BF 20 0D                  589 	jr	NZ, 00121$
      0001C1 FAr0Br00               590 	ld	a, (#_y_speed)
      0001C4 B7                     591 	or	a, a
      0001C5 20 07                  592 	jr	NZ, 00121$
      0001C7 AF                     593 	xor	a, a
      0001C8 F5                     594 	push	af
      0001C9 33                     595 	inc	sp
      0001CA CDrDBr08               596 	call	_switch_state
      0001CD 33                     597 	inc	sp
      0001CE                        598 00121$:
                           0001CE   599 	C$player.c$203$1_0$175	= .
                                    600 	.globl	C$player.c$203$1_0$175
                                    601 ;src/player.c:203: if (joy & J_RIGHT)
      0001CE FAr05r00               602 	ld	a, (#_joy)
                           0001D1   603 	C$player.c$234$1_0$175	= .
                                    604 	.globl	C$player.c$234$1_0$175
                                    605 ;src/player.c:234: if ((joy & J_A && a_not_pressed) && (is_grounded || current_coyote_frames < COYOTE_FRAMES) && (y_speed >= 0))
      0001D1 E6 10                  606 	and	a, #0x10
      0001D3 4F                     607 	ld	c, a
      0001D4 06 00                  608 	ld	b, #0x00
      0001D6 78                     609 	ld	a, b
      0001D7 B1                     610 	or	a, c
      0001D8 28 3E                  611 	jr	Z, 00127$
      0001DA 21r03r00               612 	ld	hl, #_a_not_pressed
      0001DD CB 46                  613 	bit	0, (hl)
      0001DF 28 37                  614 	jr	Z, 00127$
      0001E1 21r09r00               615 	ld	hl, #_is_grounded
      0001E4 CB 46                  616 	bit	0, (hl)
      0001E6 20 07                  617 	jr	NZ, 00132$
      0001E8 FAr11r00               618 	ld	a, (#_current_coyote_frames)
      0001EB D6 04                  619 	sub	a, #0x04
      0001ED 30 29                  620 	jr	NC, 00127$
      0001EF                        621 00132$:
      0001EF FAr0Br00               622 	ld	a, (#_y_speed)
      0001F2 CB 7F                  623 	bit	7, a
      0001F4 20 22                  624 	jr	NZ, 00127$
                           0001F6   625 	C$player.c$236$2_0$183	= .
                                    626 	.globl	C$player.c$236$2_0$183
                                    627 ;src/player.c:236: switch_state(PLAYER_STATE_JUMPING);
      0001F6 3E 02                  628 	ld	a, #0x02
      0001F8 F5                     629 	push	af
      0001F9 33                     630 	inc	sp
      0001FA CDrDBr08               631 	call	_switch_state
      0001FD 33                     632 	inc	sp
                           0001FE   633 	C$player.c$237$2_0$183	= .
                                    634 	.globl	C$player.c$237$2_0$183
                                    635 ;src/player.c:237: play_jump_sfx();
      0001FE CDr00r00               636 	call	_play_jump_sfx
                           000201   637 	C$player.c$238$2_0$183	= .
                                    638 	.globl	C$player.c$238$2_0$183
                                    639 ;src/player.c:238: a_not_pressed = false;
      000201 21r03r00               640 	ld	hl, #_a_not_pressed
      000204 36 00                  641 	ld	(hl), #0x00
                           000206   642 	C$player.c$239$2_0$183	= .
                                    643 	.globl	C$player.c$239$2_0$183
                                    644 ;src/player.c:239: y_speed = jump_power;
      000206 FArCAr00               645 	ld	a, (#_jump_power)
      000209 EAr0Br00               646 	ld	(#_y_speed),a
                           00020C   647 	C$player.c$240$2_0$183	= .
                                    648 	.globl	C$player.c$240$2_0$183
                                    649 ;src/player.c:240: is_grounded = false;
      00020C 21r09r00               650 	ld	hl, #_is_grounded
      00020F 36 00                  651 	ld	(hl), #0x00
                           000211   652 	C$player.c$241$2_0$183	= .
                                    653 	.globl	C$player.c$241$2_0$183
                                    654 ;src/player.c:241: is_jumping = true;
      000211 21r0Ar00               655 	ld	hl, #_is_jumping
      000214 36 01                  656 	ld	(hl), #0x01
      000216 18 34                  657 	jr	00128$
      000218                        658 00127$:
                           000218   659 	C$player.c$243$1_0$175	= .
                                    660 	.globl	C$player.c$243$1_0$175
                                    661 ;src/player.c:243: else if ((!(joy & J_A) || y_speed > 0) && !is_grounded)
      000218 78                     662 	ld	a, b
      000219 B1                     663 	or	a, c
      00021A 28 19                  664 	jr	Z, 00125$
      00021C 21r0Br00               665 	ld	hl, #_y_speed
      00021F 5E                     666 	ld	e, (hl)
      000220 AF                     667 	xor	a, a
      000221 57                     668 	ld	d, a
      000222 96                     669 	sub	a, (hl)
      000223 CB 7B                  670 	bit	7, e
      000225 28 07                  671 	jr	Z, 00224$
      000227 CB 7A                  672 	bit	7, d
      000229 20 08                  673 	jr	NZ, 00225$
      00022B BF                     674 	cp	a, a
      00022C 18 05                  675 	jr	00225$
      00022E                        676 00224$:
      00022E CB 7A                  677 	bit	7, d
      000230 28 01                  678 	jr	Z, 00225$
      000232 37                     679 	scf
      000233                        680 00225$:
      000233 30 17                  681 	jr	NC, 00128$
      000235                        682 00125$:
      000235 21r09r00               683 	ld	hl, #_is_grounded
      000238 CB 46                  684 	bit	0, (hl)
      00023A 20 10                  685 	jr	NZ, 00128$
                           00023C   686 	C$player.c$245$2_0$184	= .
                                    687 	.globl	C$player.c$245$2_0$184
                                    688 ;src/player.c:245: switch_state(PLAYER_STATE_FALLING);
      00023C 3E 03                  689 	ld	a, #0x03
      00023E F5                     690 	push	af
      00023F 33                     691 	inc	sp
      000240 CDrDBr08               692 	call	_switch_state
      000243 33                     693 	inc	sp
                           000244   694 	C$player.c$246$2_0$184	= .
                                    695 	.globl	C$player.c$246$2_0$184
                                    696 ;src/player.c:246: stop_jump_sfx();
      000244 CDr00r00               697 	call	_stop_jump_sfx
                           000247   698 	C$player.c$247$2_0$184	= .
                                    699 	.globl	C$player.c$247$2_0$184
                                    700 ;src/player.c:247: is_jumping = false;
      000247 21r0Ar00               701 	ld	hl, #_is_jumping
      00024A 36 00                  702 	ld	(hl), #0x00
      00024C                        703 00128$:
                           00024C   704 	C$player.c$249$1_0$175	= .
                                    705 	.globl	C$player.c$249$1_0$175
                                    706 ;src/player.c:249: if(!(joy & J_A)) a_not_pressed = true;
      00024C FAr05r00               707 	ld	a, (#_joy)
      00024F CB 67                  708 	bit	4, a
      000251 C0                     709 	ret	NZ
      000252 21r03r00               710 	ld	hl, #_a_not_pressed
      000255 36 01                  711 	ld	(hl), #0x01
                           000257   712 	C$player.c$250$1_0$175	= .
                                    713 	.globl	C$player.c$250$1_0$175
                                    714 ;src/player.c:250: }
                           000257   715 	C$player.c$250$1_0$175	= .
                                    716 	.globl	C$player.c$250$1_0$175
                           000257   717 	XFplayer$retrieve_input$0$0	= .
                                    718 	.globl	XFplayer$retrieve_input$0$0
      000257 C9                     719 	ret
                           000258   720 	Fplayer$calculate_physics$0$0	= .
                                    721 	.globl	Fplayer$calculate_physics$0$0
                           000258   722 	C$player.c$252$1_0$186	= .
                                    723 	.globl	C$player.c$252$1_0$186
                                    724 ;src/player.c:252: static void calculate_physics(void){
                                    725 ;	---------------------------------
                                    726 ; Function calculate_physics
                                    727 ; ---------------------------------
      000258                        728 _calculate_physics:
      000258 E8 FD                  729 	add	sp, #-3
                           00025A   730 	C$player.c$257$1_0$186	= .
                                    731 	.globl	C$player.c$257$1_0$186
                                    732 ;src/player.c:257: player_x = is_facing_right ? player_x + (x_speed >> PHYSICS_DAMPNER) /*+ (x_force >> 2)*/ : player_x - (x_speed >> PHYSICS_DAMPNER) /*- (x_force >> 2)*/;
      00025A 21r07r00               733 	ld	hl, #_x_speed
      00025D 4E                     734 	ld	c, (hl)
      00025E CB 39                  735 	srl	c
      000260 CB 39                  736 	srl	c
      000262 21r08r00               737 	ld	hl, #_is_facing_right
      000265 CB 46                  738 	bit	0, (hl)
      000267 28 06                  739 	jr	Z, 00111$
      000269 FAr0Cr00               740 	ld	a, (#_player_x)
      00026C 81                     741 	add	a, c
      00026D 18 04                  742 	jr	00112$
      00026F                        743 00111$:
      00026F FAr0Cr00               744 	ld	a, (#_player_x)
      000272 91                     745 	sub	a, c
      000273                        746 00112$:
      000273 21r0Cr00               747 	ld	hl, #_player_x
                           000276   748 	C$player.c$258$1_0$186	= .
                                    749 	.globl	C$player.c$258$1_0$186
                                    750 ;src/player.c:258: if((uint8_t)(player_x - 10U) > 160U) {
      000276 77                     751 	ld	(hl), a
      000277 C6 F6                  752 	add	a, #0xf6
      000279 4F                     753 	ld	c, a
      00027A 3E A0                  754 	ld	a, #0xa0
      00027C 91                     755 	sub	a, c
      00027D 30 12                  756 	jr	NC, 00105$
                           00027F   757 	C$player.c$259$2_0$187	= .
                                    758 	.globl	C$player.c$259$2_0$187
                                    759 ;src/player.c:259: if((uint8_t)(player_x - 10U) < 200) player_x = player_x - 160U; //right exit
      00027F 79                     760 	ld	a, c
      000280 D6 C8                  761 	sub	a, #0xc8
      000282 30 06                  762 	jr	NC, 00102$
      000284 7E                     763 	ld	a, (hl)
      000285 C6 60                  764 	add	a, #0x60
      000287 77                     765 	ld	(hl), a
      000288 18 07                  766 	jr	00105$
      00028A                        767 00102$:
                           00028A   768 	C$player.c$260$2_0$187	= .
                                    769 	.globl	C$player.c$260$2_0$187
                                    770 ;src/player.c:260: else player_x = player_x + 160U; //left exit
      00028A 21r0Cr00               771 	ld	hl, #_player_x
      00028D 7E                     772 	ld	a, (hl)
      00028E C6 A0                  773 	add	a, #0xa0
      000290 77                     774 	ld	(hl), a
      000291                        775 00105$:
                           000291   776 	C$player.c$262$1_0$186	= .
                                    777 	.globl	C$player.c$262$1_0$186
                                    778 ;src/player.c:262: if (x_force)
      000291 FAr06r00               779 	ld	a, (#_x_force)
      000294 B7                     780 	or	a, a
      000295 28 19                  781 	jr	Z, 00107$
                           000297   782 	C$player.c$265$2_0$188	= .
                                    783 	.globl	C$player.c$265$2_0$188
                                    784 ;src/player.c:265: x_speed = x_speed >= clamp_x_velocity ? clamp_x_velocity : x_speed + x_force;
      000297 21rCBr00               785 	ld	hl, #_clamp_x_velocity
      00029A 4E                     786 	ld	c, (hl)
      00029B FAr07r00               787 	ld	a, (#_x_speed)
      00029E 91                     788 	sub	a, c
      00029F 38 03                  789 	jr	C, 00113$
      0002A1 79                     790 	ld	a, c
      0002A2 18 07                  791 	jr	00114$
      0002A4                        792 00113$:
      0002A4 FAr07r00               793 	ld	a, (#_x_speed)
      0002A7 21r06r00               794 	ld	hl, #_x_force
      0002AA 86                     795 	add	a, (hl)
      0002AB                        796 00114$:
      0002AB EAr07r00               797 	ld	(#_x_speed),a
      0002AE 18 23                  798 	jr	00108$
      0002B0                        799 00107$:
                           0002B0   800 	C$player.c$270$2_0$189	= .
                                    801 	.globl	C$player.c$270$2_0$189
                                    802 ;src/player.c:270: x_speed = x_speed <= 0 ? 0 : MAX(0, x_speed - impulse);
      0002B0 FAr07r00               803 	ld	a, (#_x_speed)
      0002B3 B7                     804 	or	a,a
                                    805 ;	spillPairReg hl
                                    806 ;	spillPairReg hl
      0002B4 28 1A                  807 	jr	Z, 00116$
      0002B6 FAr07r00               808 	ld	a, (#_x_speed)
      0002B9 1E 00                  809 	ld	e, #0x00
      0002BB 21rC9r00               810 	ld	hl, #_impulse
      0002BE 4E                     811 	ld	c, (hl)
      0002BF 69                     812 	ld	l, c
                                    813 ;	spillPairReg hl
                                    814 ;	spillPairReg hl
      0002C0 26 00                  815 	ld	h, #0x00
                                    816 ;	spillPairReg hl
                                    817 ;	spillPairReg hl
      0002C2 95                     818 	sub	a, l
      0002C3 7B                     819 	ld	a, e
      0002C4 9C                     820 	sbc	a, h
                                    821 ;	spillPairReg hl
                                    822 ;	spillPairReg hl
      0002C5 CB 7F                  823 	bit	7,a
      0002C7 28 03                  824 	jr	Z, 00117$
      0002C9 AF                     825 	xor	a, a
                                    826 ;	spillPairReg hl
                                    827 ;	spillPairReg hl
      0002CA 18 04                  828 	jr	00118$
      0002CC                        829 00117$:
      0002CC FAr07r00               830 	ld	a, (#_x_speed)
      0002CF 91                     831 	sub	a, c
                                    832 ;	spillPairReg hl
                                    833 ;	spillPairReg hl
      0002D0                        834 00118$:
      0002D0                        835 00116$:
      0002D0 EAr07r00               836 	ld	(_x_speed), a
      0002D3                        837 00108$:
                           0002D3   838 	C$player.c$273$1_0$186	= .
                                    839 	.globl	C$player.c$273$1_0$186
                                    840 ;src/player.c:273: player_y += (y_speed >> (PHYSICS_DAMPNER + 1)) + ((is_jumping ? jump_g : fall_g) >> 2);
      0002D3 21r0Br00               841 	ld	hl, #_y_speed
      0002D6 4E                     842 	ld	c, (hl)
      0002D7 CB 29                  843 	sra	c
      0002D9 CB 29                  844 	sra	c
      0002DB CB 29                  845 	sra	c
      0002DD FArC7r00               846 	ld	a, (#_jump_g)
      0002E0 F8 00                  847 	ldhl	sp,	#0
      0002E2 77                     848 	ld	(hl), a
      0002E3 FArC8r00               849 	ld	a, (#_fall_g)
      0002E6 F8 02                  850 	ldhl	sp,	#2
      0002E8 77                     851 	ld	(hl), a
      0002E9 21r0Ar00               852 	ld	hl, #_is_jumping
      0002EC CB 46                  853 	bit	0, (hl)
      0002EE 28 05                  854 	jr	Z, 00119$
      0002F0 F8 00                  855 	ldhl	sp,	#0
      0002F2 7E                     856 	ld	a, (hl)
      0002F3 18 03                  857 	jr	00120$
      0002F5                        858 00119$:
      0002F5 F8 02                  859 	ldhl	sp,	#2
      0002F7 7E                     860 	ld	a, (hl)
      0002F8                        861 00120$:
      0002F8 0F                     862 	rrca
      0002F9 0F                     863 	rrca
      0002FA E6 3F                  864 	and	a, #0x3f
      0002FC 81                     865 	add	a, c
      0002FD 21r0Dr00               866 	ld	hl, #_player_y
      000300 4E                     867 	ld	c, (hl)
      000301 81                     868 	add	a, c
      000302 77                     869 	ld	(hl), a
                           000303   870 	C$player.c$276$1_0$186	= .
                                    871 	.globl	C$player.c$276$1_0$186
                                    872 ;src/player.c:276: y_speed = y_speed >= clamp_y_velocity ? clamp_y_velocity : y_speed + (is_jumping ? jump_g : fall_g);
      000303 FArCCr00               873 	ld	a, (#_clamp_y_velocity)
      000306 F8 01                  874 	ldhl	sp,	#1
      000308 77                     875 	ld	(hl), a
      000309 5E                     876 	ld	e, (hl)
      00030A FAr0Br00               877 	ld	a, (#_y_speed)
      00030D 57                     878 	ld	d,a
      00030E F8 01                  879 	ldhl	sp,	#1
      000310 96                     880 	sub	a, (hl)
      000311 CB 7B                  881 	bit	7, e
      000313 28 07                  882 	jr	Z, 00175$
      000315 CB 7A                  883 	bit	7, d
      000317 20 08                  884 	jr	NZ, 00176$
      000319 BF                     885 	cp	a, a
      00031A 18 05                  886 	jr	00176$
      00031C                        887 00175$:
      00031C CB 7A                  888 	bit	7, d
      00031E 28 01                  889 	jr	Z, 00176$
      000320 37                     890 	scf
      000321                        891 00176$:
      000321 38 05                  892 	jr	C, 00121$
      000323 F8 01                  893 	ldhl	sp,	#1
      000325 7E                     894 	ld	a, (hl)
      000326 18 13                  895 	jr	00122$
      000328                        896 00121$:
      000328 21r0Ar00               897 	ld	hl, #_is_jumping
      00032B CB 46                  898 	bit	0, (hl)
      00032D 28 05                  899 	jr	Z, 00123$
      00032F F8 00                  900 	ldhl	sp,	#0
      000331 2A                     901 	ld	a, (hl+)
      000332 23                     902 	inc	hl
      000333 77                     903 	ld	(hl), a
      000334                        904 00123$:
      000334 F8 02                  905 	ldhl	sp,	#2
      000336 7E                     906 	ld	a, (hl)
      000337 21r0Br00               907 	ld	hl, #_y_speed
      00033A 86                     908 	add	a, (hl)
      00033B                        909 00122$:
      00033B EAr0Br00               910 	ld	(#_y_speed),a
                           00033E   911 	C$player.c$277$1_0$186	= .
                                    912 	.globl	C$player.c$277$1_0$186
                                    913 ;src/player.c:277: }
      00033E E8 03                  914 	add	sp, #3
                           000340   915 	C$player.c$277$1_0$186	= .
                                    916 	.globl	C$player.c$277$1_0$186
                           000340   917 	XFplayer$calculate_physics$0$0	= .
                                    918 	.globl	XFplayer$calculate_physics$0$0
      000340 C9                     919 	ret
                           000341   920 	Fplayer$render_player$0$0	= .
                                    921 	.globl	Fplayer$render_player$0$0
                           000341   922 	C$player.c$279$1_0$191	= .
                                    923 	.globl	C$player.c$279$1_0$191
                                    924 ;src/player.c:279: static void render_player(void){
                                    925 ;	---------------------------------
                                    926 ; Function render_player
                                    927 ; ---------------------------------
      000341                        928 _render_player:
      000341 E8 F8                  929 	add	sp, #-8
                           000343   930 	C$player.c$283$1_0$191	= .
                                    931 	.globl	C$player.c$283$1_0$191
                                    932 ;src/player.c:283: if(!player_dead_flag && (uint8_t)(player_y - camera_y) > 160U) {
      000343 FAr0Dr00               933 	ld	a, (#_player_y)
      000346 21r00r00               934 	ld	hl, #_camera_y
      000349 96                     935 	sub	a, (hl)
      00034A F8 07                  936 	ldhl	sp,	#7
      00034C 77                     937 	ld	(hl), a
      00034D 21r00r00               938 	ld	hl, #_player_dead_flag
      000350 CB 46                  939 	bit	0, (hl)
      000352 20 22                  940 	jr	NZ, 00102$
      000354 3E A0                  941 	ld	a, #0xa0
      000356 F8 07                  942 	ldhl	sp,	#7
      000358 96                     943 	sub	a, (hl)
      000359 30 1B                  944 	jr	NC, 00102$
                           00035B   945 	C$player.c$284$2_0$192	= .
                                    946 	.globl	C$player.c$284$2_0$192
                                    947 ;src/player.c:284: player_dead_flag = true;
      00035B 21r00r00               948 	ld	hl, #_player_dead_flag
      00035E 36 01                  949 	ld	(hl), #0x01
                           000360   950 	C$player.c$285$2_0$192	= .
                                    951 	.globl	C$player.c$285$2_0$192
                                    952 ;src/player.c:285: game_ended_flag = true;
      000360 21r00r00               953 	ld	hl, #_game_ended_flag
      000363 36 01                  954 	ld	(hl), #0x01
                           000365   955 	C$player.c$286$2_0$192	= .
                                    956 	.globl	C$player.c$286$2_0$192
                                    957 ;src/player.c:286: calculate_final_score();
      000365 CDr1Ar0F               958 	call	_calculate_final_score
                           000368   959 	C$player.c$287$2_0$192	= .
                                    960 	.globl	C$player.c$287$2_0$192
                                    961 ;src/player.c:287: stop_sfx();
      000368 CDr00r00               962 	call	_stop_sfx
                           00036B   963 	C$player.c$290$2_0$192	= .
                                    964 	.globl	C$player.c$290$2_0$192
                                    965 ;src/player.c:290: hide_sprites_range(0, 20);
      00036B 21 00 14               966 	ld	hl, #0x1400
      00036E E5                     967 	push	hl
      00036F CDr00r00               968 	call	_hide_sprites_range
      000372 E1                     969 	pop	hl
                           000373   970 	C$player.c$291$2_0$192	= .
                                    971 	.globl	C$player.c$291$2_0$192
                                    972 ;src/player.c:291: return;
      000373 C3rA1r05               973 	jp	00127$
      000376                        974 00102$:
                           000376   975 	C$player.c$294$1_0$191	= .
                                    976 	.globl	C$player.c$294$1_0$191
                                    977 ;src/player.c:294: hide_metasprite(metasprites_states[current_state][current_frame], 0);
      000376 21r10r00               978 	ld	hl, #_current_state
      000379 46                     979 	ld	b, (hl)
      00037A 1E 00                  980 	ld	e, #0x00
      00037C FAr02r00               981 	ld	a, (#_current_frame)
      00037F 0E 00                  982 	ld	c, #0x00
      000381 CB 20                  983 	sla	b
      000383 CB 13                  984 	rl	e
      000385 F8 00                  985 	ldhl	sp,	#0
      000387 70                     986 	ld	(hl), b
      000388 23                     987 	inc	hl
      000389 73                     988 	ld	(hl), e
      00038A 23                     989 	inc	hl
      00038B 87                     990 	add	a, a
      00038C CB 11                  991 	rl	c
      00038E 22                     992 	ld	(hl+), a
      00038F 71                     993 	ld	(hl), c
                           000390   994 	C$player.c$293$1_0$191	= .
                                    995 	.globl	C$player.c$293$1_0$191
                                    996 ;src/player.c:293: if(current_state == PLAYER_STATE_HURT && (frame_counter & 0x02)){
      000390 FAr10r00               997 	ld	a, (#_current_state)
      000393 D6 04                  998 	sub	a, #0x04
      000395 20 58                  999 	jr	NZ, 00107$
      000397 FAr01r00              1000 	ld	a, (#_frame_counter)
      00039A CB 4F                 1001 	bit	1, a
      00039C 28 51                 1002 	jr	Z, 00107$
                                   1003 ;src/player.c:294: hide_metasprite(metasprites_states[current_state][current_frame], 0);
      00039E 11r00r00              1004 	ld	de, #_metasprites_states
      0003A1 E1                    1005 	pop	hl
      0003A2 E5                    1006 	push	hl
      0003A3 19                    1007 	add	hl, de
      0003A4 2A                    1008 	ld	a, (hl+)
      0003A5 4F                    1009 	ld	c, a
      0003A6 46                    1010 	ld	b, (hl)
      0003A7 F8 02                 1011 	ldhl	sp,	#2
      0003A9 2A                    1012 	ld	a,	(hl+)
      0003AA 66                    1013 	ld	h, (hl)
      0003AB 6F                    1014 	ld	l, a
      0003AC 09                    1015 	add	hl, bc
      0003AD 2A                    1016 	ld	a, (hl+)
      0003AE 4F                    1017 	ld	c, a
      0003AF 7E                    1018 	ld	a, (hl)
                                   1019 ;C:/gbdk/include/gb/metasprites.h:241: __current_metasprite = metasprite;
      0003B0 21r00r00              1020 	ld	hl, #___current_metasprite
      0003B3 71                    1021 	ld	(hl), c
      0003B4 23                    1022 	inc	hl
      0003B5 77                    1023 	ld	(hl), a
                                   1024 ;C:/gbdk/include/gb/metasprites.h:242: __hide_metasprite(base_sprite);
      0003B6 AF                    1025 	xor	a, a
      0003B7 F5                    1026 	push	af
      0003B8 33                    1027 	inc	sp
      0003B9 CDr00r00              1028 	call	___hide_metasprite
      0003BC 33                    1029 	inc	sp
                                   1030 ;src/player.c:295: hide_metasprite(metasprites_states[current_state][current_frame], 4);
      0003BD 21r10r00              1031 	ld	hl, #_current_state
      0003C0 6E                    1032 	ld	l, (hl)
                                   1033 ;	spillPairReg hl
                                   1034 ;	spillPairReg hl
      0003C1 26 00                 1035 	ld	h, #0x00
                                   1036 ;	spillPairReg hl
                                   1037 ;	spillPairReg hl
      0003C3 29                    1038 	add	hl, hl
      0003C4 11r00r00              1039 	ld	de, #_metasprites_states
      0003C7 19                    1040 	add	hl, de
      0003C8 2A                    1041 	ld	a, (hl+)
      0003C9 4F                    1042 	ld	c, a
      0003CA 46                    1043 	ld	b, (hl)
      0003CB 21r02r00              1044 	ld	hl, #_current_frame
      0003CE 6E                    1045 	ld	l, (hl)
                                   1046 ;	spillPairReg hl
                                   1047 ;	spillPairReg hl
      0003CF 26 00                 1048 	ld	h, #0x00
                                   1049 ;	spillPairReg hl
                                   1050 ;	spillPairReg hl
      0003D1 29                    1051 	add	hl, hl
      0003D2 09                    1052 	add	hl, bc
      0003D3 2A                    1053 	ld	a, (hl+)
      0003D4 4E                    1054 	ld	c, (hl)
                                   1055 ;C:/gbdk/include/gb/metasprites.h:241: __current_metasprite = metasprite;
      0003D5 21r00r00              1056 	ld	hl, #___current_metasprite
      0003D8 22                    1057 	ld	(hl+), a
      0003D9 71                    1058 	ld	(hl), c
                                   1059 ;C:/gbdk/include/gb/metasprites.h:242: __hide_metasprite(base_sprite);
      0003DA 3E 04                 1060 	ld	a, #0x04
      0003DC F5                    1061 	push	af
      0003DD 33                    1062 	inc	sp
      0003DE CDr00r00              1063 	call	___hide_metasprite
      0003E1 33                    1064 	inc	sp
                           0003E2  1065 	C$player.c$296$2_0$193	= .
                                   1066 	.globl	C$player.c$296$2_0$193
                                   1067 ;src/player.c:296: if(frame_counter & 0x01)play_hurt_sfx();
      0003E2 FAr01r00              1068 	ld	a, (#_frame_counter)
      0003E5 0F                    1069 	rrca
      0003E6 D2rA1r05              1070 	jp	NC,00127$
      0003E9 CDr00r00              1071 	call	_play_hurt_sfx
                           0003EC  1072 	C$player.c$297$2_0$193	= .
                                   1073 	.globl	C$player.c$297$2_0$193
                                   1074 ;src/player.c:297: return;
      0003EC C3rA1r05              1075 	jp	00127$
      0003EF                       1076 00107$:
                           0003EF  1077 	C$player.c$300$1_0$191	= .
                                   1078 	.globl	C$player.c$300$1_0$191
                                   1079 ;src/player.c:300: is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, SPR_NUM_START, player_x, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, SPR_NUM_START, player_x, (uint8_t)(player_y - camera_y));
      0003EF FAr0Cr00              1080 	ld	a, (#_player_x)
      0003F2 F8 04                 1081 	ldhl	sp,	#4
      0003F4 77                    1082 	ld	(hl), a
      0003F5 21r08r00              1083 	ld	hl, #_is_facing_right
      0003F8 CB 46                 1084 	bit	0, (hl)
      0003FA 28 2F                 1085 	jr	Z, 00129$
      0003FC 11r00r00              1086 	ld	de, #_metasprites_states
      0003FF E1                    1087 	pop	hl
      000400 E5                    1088 	push	hl
      000401 19                    1089 	add	hl, de
      000402 2A                    1090 	ld	a, (hl+)
      000403 4F                    1091 	ld	c, a
      000404 46                    1092 	ld	b, (hl)
      000405 F8 02                 1093 	ldhl	sp,	#2
      000407 2A                    1094 	ld	a,	(hl+)
      000408 66                    1095 	ld	h, (hl)
      000409 6F                    1096 	ld	l, a
      00040A 09                    1097 	add	hl, bc
      00040B 2A                    1098 	ld	a, (hl+)
      00040C 4F                    1099 	ld	c, a
      00040D 46                    1100 	ld	b, (hl)
                                   1101 ;C:/gbdk/include/gb/metasprites.h:138: __current_metasprite = metasprite;
      00040E 21r00r00              1102 	ld	hl, #___current_metasprite
      000411 79                    1103 	ld	a, c
      000412 22                    1104 	ld	(hl+), a
      000413 70                    1105 	ld	(hl), b
                                   1106 ;C:/gbdk/include/gb/metasprites.h:139: __current_base_tile = base_tile;
      000414 21r00r00              1107 	ld	hl, #___current_base_tile
      000417 36 00                 1108 	ld	(hl), #0x00
                                   1109 ;C:/gbdk/include/gb/metasprites.h:140: return __move_metasprite(base_sprite, x, y);
      000419 F8 07                 1110 	ldhl	sp,	#7
      00041B 7E                    1111 	ld	a, (hl)
      00041C F5                    1112 	push	af
      00041D 33                    1113 	inc	sp
      00041E F8 05                 1114 	ldhl	sp,	#5
      000420 66                    1115 	ld	h, (hl)
      000421 2E 00                 1116 	ld	l, #0x00
      000423 E5                    1117 	push	hl
      000424 CDr00r00              1118 	call	___move_metasprite
      000427 E8 03                 1119 	add	sp, #3
                           000429  1120 	C$player.c$300$3_0$204	= .
                                   1121 	.globl	C$player.c$300$3_0$204
                                   1122 ;src/player.c:300: is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, SPR_NUM_START, player_x, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, SPR_NUM_START, player_x, (uint8_t)(player_y - camera_y));
      000429 18 46                 1123 	jr	00130$
      00042B                       1124 00129$:
      00042B F8 07                 1125 	ldhl	sp,	#7
      00042D 3A                    1126 	ld	a, (hl-)
      00042E 2B                    1127 	dec	hl
      00042F 77                    1128 	ld	(hl), a
      000430 11r00r00              1129 	ld	de, #_metasprites_states
      000433 E1                    1130 	pop	hl
      000434 E5                    1131 	push	hl
      000435 19                    1132 	add	hl, de
      000436 E5                    1133 	push	hl
      000437 7D                    1134 	ld	a, l
      000438 F8 08                 1135 	ldhl	sp,	#8
      00043A 77                    1136 	ld	(hl), a
      00043B E1                    1137 	pop	hl
      00043C 7C                    1138 	ld	a, h
      00043D F8 07                 1139 	ldhl	sp,	#7
      00043F 32                    1140 	ld	(hl-), a
      000440 2A                    1141 	ld	a, (hl+)
      000441 5F                    1142 	ld	e, a
      000442 3A                    1143 	ld	a, (hl-)
      000443 57                    1144 	ld	d, a
      000444 1A                    1145 	ld	a, (de)
      000445 22                    1146 	ld	(hl+), a
      000446 13                    1147 	inc	de
      000447 1A                    1148 	ld	a, (de)
      000448 32                    1149 	ld	(hl-), a
      000449 2A                    1150 	ld	a, (hl+)
      00044A 5F                    1151 	ld	e, a
      00044B 56                    1152 	ld	d, (hl)
      00044C F8 02                 1153 	ldhl	sp,	#2
      00044E 2A                    1154 	ld	a,	(hl+)
      00044F 66                    1155 	ld	h, (hl)
      000450 6F                    1156 	ld	l, a
      000451 19                    1157 	add	hl, de
      000452 2A                    1158 	ld	a, (hl+)
      000453 4F                    1159 	ld	c, a
      000454 7E                    1160 	ld	a, (hl)
                                   1161 ;C:/gbdk/include/gb/metasprites.h:167: __current_metasprite = metasprite;
      000455 21r00r00              1162 	ld	hl, #___current_metasprite
      000458 71                    1163 	ld	(hl), c
      000459 23                    1164 	inc	hl
      00045A 77                    1165 	ld	(hl), a
                                   1166 ;C:/gbdk/include/gb/metasprites.h:168: __current_base_tile = base_tile;
      00045B 21r00r00              1167 	ld	hl, #___current_base_tile
      00045E 36 00                 1168 	ld	(hl), #0x00
                                   1169 ;C:/gbdk/include/gb/metasprites.h:169: return __move_metasprite_vflip(base_sprite, x - 8, y);
      000460 F8 04                 1170 	ldhl	sp,	#4
      000462 2A                    1171 	ld	a, (hl+)
      000463 C6 F8                 1172 	add	a, #0xf8
      000465 66                    1173 	ld	h, (hl)
                                   1174 ;	spillPairReg hl
                                   1175 ;	spillPairReg hl
      000466 E5                    1176 	push	hl
      000467 33                    1177 	inc	sp
      000468 67                    1178 	ld	h, a
      000469 2E 00                 1179 	ld	l, #0x00
      00046B E5                    1180 	push	hl
      00046C CDr00r00              1181 	call	___move_metasprite_vflip
      00046F E8 03                 1182 	add	sp, #3
                           000471  1183 	C$player.c$300$3_0$207	= .
                                   1184 	.globl	C$player.c$300$3_0$207
                                   1185 ;src/player.c:300: is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, SPR_NUM_START, player_x, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, SPR_NUM_START, player_x, (uint8_t)(player_y - camera_y));
      000471                       1186 00130$:
                           000471  1187 	C$player.c$294$1_0$191	= .
                                   1188 	.globl	C$player.c$294$1_0$191
                                   1189 ;src/player.c:294: hide_metasprite(metasprites_states[current_state][current_frame], 0);
      000471 21r10r00              1190 	ld	hl, #_current_state
      000474 5E                    1191 	ld	e, (hl)
      000475 16 00                 1192 	ld	d, #0x00
      000477 21r02r00              1193 	ld	hl, #_current_frame
      00047A 6E                    1194 	ld	l, (hl)
                                   1195 ;	spillPairReg hl
                                   1196 ;	spillPairReg hl
      00047B 26 00                 1197 	ld	h, #0x00
                                   1198 ;	spillPairReg hl
                                   1199 ;	spillPairReg hl
      00047D CB 23                 1200 	sla	e
      00047F CB 12                 1201 	rl	d
      000481 29                    1202 	add	hl, hl
      000482 4D                    1203 	ld	c, l
      000483 44                    1204 	ld	b, h
                           000484  1205 	C$player.c$301$1_0$191	= .
                                   1206 	.globl	C$player.c$301$1_0$191
                                   1207 ;src/player.c:301: if((uint8_t)(player_x) > 160U) {
      000484 3E A0                 1208 	ld	a, #0xa0
      000486 21r0Cr00              1209 	ld	hl, #_player_x
      000489 96                    1210 	sub	a, (hl)
      00048A D2r6Dr05              1211 	jp	NC, 00113$
                           00048D  1212 	C$player.c$283$1_0$191	= .
                                   1213 	.globl	C$player.c$283$1_0$191
                                   1214 ;src/player.c:283: if(!player_dead_flag && (uint8_t)(player_y - camera_y) > 160U) {
      00048D FAr0Dr00              1215 	ld	a, (#_player_y)
      000490 21r00r00              1216 	ld	hl, #_camera_y
      000493 96                    1217 	sub	a, (hl)
      000494 F8 06                 1218 	ldhl	sp,	#6
      000496 77                    1219 	ld	(hl), a
                           000497  1220 	C$player.c$302$1_0$191	= .
                                   1221 	.globl	C$player.c$302$1_0$191
                                   1222 ;src/player.c:302: if((uint8_t)(player_x) < 200) is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x - 160U, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x - 160, (uint8_t)(player_y - camera_y)); //right exit
      000497 FAr0Cr00              1223 	ld	a, (#_player_x)
      00049A F8 07                 1224 	ldhl	sp,	#7
      00049C 77                    1225 	ld	(hl), a
      00049D FAr0Cr00              1226 	ld	a, (#_player_x)
      0004A0 D6 C8                 1227 	sub	a, #0xc8
      0004A2 30 65                 1228 	jr	NC, 00110$
      0004A4 21r08r00              1229 	ld	hl, #_is_facing_right
      0004A7 CB 46                 1230 	bit	0, (hl)
      0004A9 28 31                 1231 	jr	Z, 00131$
      0004AB F8 06                 1232 	ldhl	sp,	#6
      0004AD 2A                    1233 	ld	a, (hl+)
      0004AE 77                    1234 	ld	(hl), a
      0004AF FAr0Cr00              1235 	ld	a, (#_player_x)
      0004B2 C6 60                 1236 	add	a, #0x60
      0004B4 F8 06                 1237 	ldhl	sp,	#6
      0004B6 77                    1238 	ld	(hl), a
      0004B7 21r00r00              1239 	ld	hl, #_metasprites_states
      0004BA 19                    1240 	add	hl, de
      0004BB 2A                    1241 	ld	a, (hl+)
      0004BC 66                    1242 	ld	h, (hl)
                                   1243 ;	spillPairReg hl
      0004BD 6F                    1244 	ld	l, a
      0004BE 09                    1245 	add	hl, bc
      0004BF 2A                    1246 	ld	a, (hl+)
      0004C0 4E                    1247 	ld	c, (hl)
                                   1248 ;C:/gbdk/include/gb/metasprites.h:138: __current_metasprite = metasprite;
      0004C1 21r00r00              1249 	ld	hl, #___current_metasprite
      0004C4 22                    1250 	ld	(hl+), a
      0004C5 71                    1251 	ld	(hl), c
                                   1252 ;C:/gbdk/include/gb/metasprites.h:139: __current_base_tile = base_tile;
      0004C6 21r00r00              1253 	ld	hl, #___current_base_tile
      0004C9 36 00                 1254 	ld	(hl), #0x00
                                   1255 ;C:/gbdk/include/gb/metasprites.h:140: return __move_metasprite(base_sprite, x, y);
      0004CB F8 07                 1256 	ldhl	sp,	#7
      0004CD 3A                    1257 	ld	a, (hl-)
      0004CE F5                    1258 	push	af
      0004CF 33                    1259 	inc	sp
      0004D0 66                    1260 	ld	h, (hl)
      0004D1 2E 04                 1261 	ld	l, #0x04
      0004D3 E5                    1262 	push	hl
      0004D4 CDr00r00              1263 	call	___move_metasprite
      0004D7 E8 03                 1264 	add	sp, #3
                           0004D9  1265 	C$player.c$302$4_0$210	= .
                                   1266 	.globl	C$player.c$302$4_0$210
                                   1267 ;src/player.c:302: if((uint8_t)(player_x) < 200) is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x - 160U, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x - 160, (uint8_t)(player_y - camera_y)); //right exit
      0004D9 C3r84r05              1268 	jp	00114$
      0004DC                       1269 00131$:
      0004DC F8 07                 1270 	ldhl	sp,	#7
      0004DE 7E                    1271 	ld	a, (hl)
      0004DF C6 60                 1272 	add	a, #0x60
      0004E1 77                    1273 	ld	(hl), a
      0004E2 21r00r00              1274 	ld	hl, #_metasprites_states
      0004E5 19                    1275 	add	hl, de
      0004E6 2A                    1276 	ld	a, (hl+)
      0004E7 66                    1277 	ld	h, (hl)
                                   1278 ;	spillPairReg hl
      0004E8 6F                    1279 	ld	l, a
      0004E9 09                    1280 	add	hl, bc
      0004EA 2A                    1281 	ld	a, (hl+)
      0004EB 4E                    1282 	ld	c, (hl)
                                   1283 ;C:/gbdk/include/gb/metasprites.h:167: __current_metasprite = metasprite;
      0004EC 21r00r00              1284 	ld	hl, #___current_metasprite
      0004EF 22                    1285 	ld	(hl+), a
      0004F0 71                    1286 	ld	(hl), c
                                   1287 ;C:/gbdk/include/gb/metasprites.h:168: __current_base_tile = base_tile;
      0004F1 21r00r00              1288 	ld	hl, #___current_base_tile
      0004F4 36 00                 1289 	ld	(hl), #0x00
                                   1290 ;C:/gbdk/include/gb/metasprites.h:169: return __move_metasprite_vflip(base_sprite, x - 8, y);
      0004F6 F8 07                 1291 	ldhl	sp,	#7
      0004F8 3A                    1292 	ld	a, (hl-)
      0004F9 C6 F8                 1293 	add	a, #0xf8
      0004FB 66                    1294 	ld	h, (hl)
                                   1295 ;	spillPairReg hl
                                   1296 ;	spillPairReg hl
      0004FC E5                    1297 	push	hl
      0004FD 33                    1298 	inc	sp
      0004FE 67                    1299 	ld	h, a
      0004FF 2E 04                 1300 	ld	l, #0x04
      000501 E5                    1301 	push	hl
      000502 CDr00r00              1302 	call	___move_metasprite_vflip
      000505 E8 03                 1303 	add	sp, #3
                           000507  1304 	C$player.c$302$2_0$194	= .
                                   1305 	.globl	C$player.c$302$2_0$194
                                   1306 ;src/player.c:302: if((uint8_t)(player_x) < 200) is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x - 160U, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x - 160, (uint8_t)(player_y - camera_y)); //right exit
      000507 18 7B                 1307 	jr	00114$
      000509                       1308 00110$:
                           000509  1309 	C$player.c$303$2_0$194	= .
                                   1310 	.globl	C$player.c$303$2_0$194
                                   1311 ;src/player.c:303: else is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x + 160U, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x + 160, (uint8_t)(player_y - camera_y)); //left exit
      000509 21r08r00              1312 	ld	hl, #_is_facing_right
      00050C CB 46                 1313 	bit	0, (hl)
      00050E 28 30                 1314 	jr	Z, 00133$
      000510 F8 06                 1315 	ldhl	sp,	#6
      000512 2A                    1316 	ld	a, (hl+)
      000513 77                    1317 	ld	(hl), a
      000514 FAr0Cr00              1318 	ld	a, (#_player_x)
      000517 C6 A0                 1319 	add	a, #0xa0
      000519 F8 06                 1320 	ldhl	sp,	#6
      00051B 77                    1321 	ld	(hl), a
      00051C 21r00r00              1322 	ld	hl, #_metasprites_states
      00051F 19                    1323 	add	hl, de
      000520 2A                    1324 	ld	a, (hl+)
      000521 66                    1325 	ld	h, (hl)
                                   1326 ;	spillPairReg hl
      000522 6F                    1327 	ld	l, a
      000523 09                    1328 	add	hl, bc
      000524 2A                    1329 	ld	a, (hl+)
      000525 4E                    1330 	ld	c, (hl)
                                   1331 ;C:/gbdk/include/gb/metasprites.h:138: __current_metasprite = metasprite;
      000526 21r00r00              1332 	ld	hl, #___current_metasprite
      000529 22                    1333 	ld	(hl+), a
      00052A 71                    1334 	ld	(hl), c
                                   1335 ;C:/gbdk/include/gb/metasprites.h:139: __current_base_tile = base_tile;
      00052B 21r00r00              1336 	ld	hl, #___current_base_tile
      00052E 36 00                 1337 	ld	(hl), #0x00
                                   1338 ;C:/gbdk/include/gb/metasprites.h:140: return __move_metasprite(base_sprite, x, y);
      000530 F8 07                 1339 	ldhl	sp,	#7
      000532 3A                    1340 	ld	a, (hl-)
      000533 F5                    1341 	push	af
      000534 33                    1342 	inc	sp
      000535 66                    1343 	ld	h, (hl)
      000536 2E 04                 1344 	ld	l, #0x04
      000538 E5                    1345 	push	hl
      000539 CDr00r00              1346 	call	___move_metasprite
      00053C E8 03                 1347 	add	sp, #3
                           00053E  1348 	C$player.c$303$4_0$216	= .
                                   1349 	.globl	C$player.c$303$4_0$216
                                   1350 ;src/player.c:303: else is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x + 160U, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x + 160, (uint8_t)(player_y - camera_y)); //left exit
      00053E 18 44                 1351 	jr	00114$
      000540                       1352 00133$:
      000540 F8 07                 1353 	ldhl	sp,	#7
      000542 7E                    1354 	ld	a, (hl)
      000543 C6 A0                 1355 	add	a, #0xa0
      000545 77                    1356 	ld	(hl), a
      000546 21r00r00              1357 	ld	hl, #_metasprites_states
      000549 19                    1358 	add	hl, de
      00054A 2A                    1359 	ld	a, (hl+)
      00054B 66                    1360 	ld	h, (hl)
                                   1361 ;	spillPairReg hl
      00054C 6F                    1362 	ld	l, a
      00054D 09                    1363 	add	hl, bc
      00054E 2A                    1364 	ld	a, (hl+)
      00054F 4E                    1365 	ld	c, (hl)
                                   1366 ;C:/gbdk/include/gb/metasprites.h:167: __current_metasprite = metasprite;
      000550 21r00r00              1367 	ld	hl, #___current_metasprite
      000553 22                    1368 	ld	(hl+), a
      000554 71                    1369 	ld	(hl), c
                                   1370 ;C:/gbdk/include/gb/metasprites.h:168: __current_base_tile = base_tile;
      000555 21r00r00              1371 	ld	hl, #___current_base_tile
      000558 36 00                 1372 	ld	(hl), #0x00
                                   1373 ;C:/gbdk/include/gb/metasprites.h:169: return __move_metasprite_vflip(base_sprite, x - 8, y);
      00055A F8 07                 1374 	ldhl	sp,	#7
      00055C 3A                    1375 	ld	a, (hl-)
      00055D C6 F8                 1376 	add	a, #0xf8
      00055F 66                    1377 	ld	h, (hl)
                                   1378 ;	spillPairReg hl
                                   1379 ;	spillPairReg hl
      000560 E5                    1380 	push	hl
      000561 33                    1381 	inc	sp
      000562 67                    1382 	ld	h, a
      000563 2E 04                 1383 	ld	l, #0x04
      000565 E5                    1384 	push	hl
      000566 CDr00r00              1385 	call	___move_metasprite_vflip
      000569 E8 03                 1386 	add	sp, #3
                           00056B  1387 	C$player.c$303$1_0$191	= .
                                   1388 	.globl	C$player.c$303$1_0$191
                                   1389 ;src/player.c:303: else is_facing_right?move_metasprite(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x + 160U, (uint8_t)(player_y - camera_y)): move_metasprite_vflip(metasprites_states[current_state][current_frame], TILE_NUM_START, 4, player_x + 160, (uint8_t)(player_y - camera_y)); //left exit
      00056B 18 17                 1390 	jr	00114$
      00056D                       1391 00113$:
                                   1392 ;src/player.c:305: hide_metasprite(metasprites_states[current_state][current_frame], 4);
      00056D 21r00r00              1393 	ld	hl, #_metasprites_states
      000570 19                    1394 	add	hl, de
      000571 2A                    1395 	ld	a, (hl+)
      000572 66                    1396 	ld	h, (hl)
                                   1397 ;	spillPairReg hl
      000573 6F                    1398 	ld	l, a
      000574 09                    1399 	add	hl, bc
      000575 2A                    1400 	ld	a, (hl+)
      000576 4E                    1401 	ld	c, (hl)
                                   1402 ;C:/gbdk/include/gb/metasprites.h:241: __current_metasprite = metasprite;
      000577 21r00r00              1403 	ld	hl, #___current_metasprite
      00057A 22                    1404 	ld	(hl+), a
      00057B 71                    1405 	ld	(hl), c
                                   1406 ;C:/gbdk/include/gb/metasprites.h:242: __hide_metasprite(base_sprite);
      00057C 3E 04                 1407 	ld	a, #0x04
      00057E F5                    1408 	push	af
      00057F 33                    1409 	inc	sp
      000580 CDr00r00              1410 	call	___hide_metasprite
      000583 33                    1411 	inc	sp
                           000584  1412 	C$player.c$305$1_0$191	= .
                                   1413 	.globl	C$player.c$305$1_0$191
                                   1414 ;src/player.c:305: hide_metasprite(metasprites_states[current_state][current_frame], 4);
      000584                       1415 00114$:
                           000584  1416 	C$player.c$308$1_0$191	= .
                                   1417 	.globl	C$player.c$308$1_0$191
                                   1418 ;src/player.c:308: if((uint8_t)(player_y - camera_y) < MAX_SPRITE_HEIGHT && !player_dead_flag){
      000584 FAr0Dr00              1419 	ld	a, (#_player_y)
      000587 21r00r00              1420 	ld	hl, #_camera_y
      00058A 96                    1421 	sub	a, (hl)
      00058B 4F                    1422 	ld	c, a
      00058C D6 1A                 1423 	sub	a, #0x1a
      00058E 30 11                 1424 	jr	NC, 00127$
      000590 21r00r00              1425 	ld	hl, #_player_dead_flag
      000593 CB 46                 1426 	bit	0, (hl)
      000595 20 0A                 1427 	jr	NZ, 00127$
                           000597  1428 	C$player.c$309$2_0$196	= .
                                   1429 	.globl	C$player.c$309$2_0$196
                                   1430 ;src/player.c:309: camera_y -= MAX_SPRITE_HEIGHT - ((uint8_t)(player_y - camera_y));
      000597 3E 1A                 1431 	ld	a, #0x1a
      000599 91                    1432 	sub	a, c
      00059A 4F                    1433 	ld	c, a
      00059B 21r00r00              1434 	ld	hl, #_camera_y
      00059E 7E                    1435 	ld	a, (hl)
      00059F 91                    1436 	sub	a, c
      0005A0 77                    1437 	ld	(hl), a
      0005A1                       1438 00127$:
                           0005A1  1439 	C$player.c$311$1_0$191	= .
                                   1440 	.globl	C$player.c$311$1_0$191
                                   1441 ;src/player.c:311: }
      0005A1 E8 08                 1442 	add	sp, #8
                           0005A3  1443 	C$player.c$311$1_0$191	= .
                                   1444 	.globl	C$player.c$311$1_0$191
                           0005A3  1445 	XFplayer$render_player$0$0	= .
                                   1446 	.globl	XFplayer$render_player$0$0
      0005A3 C9                    1447 	ret
                           0005A4  1448 	Fplayer$render_all_particles$0$0	= .
                                   1449 	.globl	Fplayer$render_all_particles$0$0
                           0005A4  1450 	C$player.c$313$1_0$225	= .
                                   1451 	.globl	C$player.c$313$1_0$225
                                   1452 ;src/player.c:313: static void render_all_particles(void){
                                   1453 ;	---------------------------------
                                   1454 ; Function render_all_particles
                                   1455 ; ---------------------------------
      0005A4                       1456 _render_all_particles:
      0005A4 E8 FA                 1457 	add	sp, #-6
                           0005A6  1458 	C$player.c$315$2_0$226	= .
                                   1459 	.globl	C$player.c$315$2_0$226
                                   1460 ;src/player.c:315: for(i = 0; i < MAX_PUFF; i++){
      0005A6 21r04r00              1461 	ld	hl, #_i
      0005A9 36 00                 1462 	ld	(hl), #0x00
      0005AB                       1463 00127$:
                           0005AB  1464 	C$player.c$316$3_0$227	= .
                                   1465 	.globl	C$player.c$316$3_0$227
                                   1466 ;src/player.c:316: if(puff_frame[i] == 0){
      0005AB 3Er00                 1467 	ld	a, #<(_puff_frame)
      0005AD 21r04r00              1468 	ld	hl, #_i
      0005B0 86                    1469 	add	a, (hl)
      0005B1 4F                    1470 	ld	c, a
      0005B2 3Es00                 1471 	ld	a, #>(_puff_frame)
      0005B4 CE 00                 1472 	adc	a, #0x00
      0005B6 47                    1473 	ld	b, a
      0005B7 0A                    1474 	ld	a, (bc)
      0005B8 4F                    1475 	ld	c, a
                           0005B9  1476 	C$player.c$317$1_0$225	= .
                                   1477 	.globl	C$player.c$317$1_0$225
                                   1478 ;src/player.c:317: hide_sprite(FIRST_PUFF + i);
      0005B9 7E                    1479 	ld	a, (hl)
      0005BA C6 08                 1480 	add	a, #0x08
      0005BC 47                    1481 	ld	b, a
                           0005BD  1482 	C$player.c$316$3_0$227	= .
                                   1483 	.globl	C$player.c$316$3_0$227
                                   1484 ;src/player.c:316: if(puff_frame[i] == 0){
      0005BD 79                    1485 	ld	a, c
      0005BE B7                    1486 	or	a, a
      0005BF 20 0D                 1487 	jr	NZ, 00102$
                                   1488 ;src/player.c:317: hide_sprite(FIRST_PUFF + i);
                                   1489 ;C:/gbdk/include/gb/gb.h:1546: shadow_OAM[nb].y = 0;
      0005C1 11r00r00              1490 	ld	de, #_shadow_OAM+0
      0005C4 68                    1491 	ld	l, b
                                   1492 ;	spillPairReg hl
                                   1493 ;	spillPairReg hl
      0005C5 26 00                 1494 	ld	h, #0x00
                                   1495 ;	spillPairReg hl
                                   1496 ;	spillPairReg hl
      0005C7 29                    1497 	add	hl, hl
      0005C8 29                    1498 	add	hl, hl
      0005C9 19                    1499 	add	hl, de
      0005CA 36 00                 1500 	ld	(hl), #0x00
                           0005CC  1501 	C$player.c$318$4_0$228	= .
                                   1502 	.globl	C$player.c$318$4_0$228
                                   1503 ;src/player.c:318: continue;
      0005CC 18 25                 1504 	jr	00103$
      0005CE                       1505 00102$:
                                   1506 ;src/player.c:320: set_sprite_tile(FIRST_PUFF + i, PLAYER_SPRITES - 1 + (puff_frame[i] >> 2));
      0005CE 79                    1507 	ld	a, c
      0005CF 0F                    1508 	rrca
      0005D0 0F                    1509 	rrca
      0005D1 E6 3F                 1510 	and	a, #0x3f
      0005D3 C6 17                 1511 	add	a, #0x17
      0005D5 4F                    1512 	ld	c, a
                                   1513 ;C:/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      0005D6 68                    1514 	ld	l, b
                                   1515 ;	spillPairReg hl
                                   1516 ;	spillPairReg hl
      0005D7 26 00                 1517 	ld	h, #0x00
                                   1518 ;	spillPairReg hl
                                   1519 ;	spillPairReg hl
      0005D9 29                    1520 	add	hl, hl
      0005DA 29                    1521 	add	hl, hl
      0005DB 11r00r00              1522 	ld	de, #_shadow_OAM
      0005DE 19                    1523 	add	hl, de
      0005DF 23                    1524 	inc	hl
      0005E0 23                    1525 	inc	hl
      0005E1 71                    1526 	ld	(hl), c
                           0005E2  1527 	C$player.c$321$3_0$227	= .
                                   1528 	.globl	C$player.c$321$3_0$227
                                   1529 ;src/player.c:321: puff_frame[i] = (puff_frame[i] + 1) & 0x0f; //puff_frame[i]++ mod 16 
      0005E2 3Er00                 1530 	ld	a, #<(_puff_frame)
      0005E4 21r04r00              1531 	ld	hl, #_i
      0005E7 86                    1532 	add	a, (hl)
      0005E8 4F                    1533 	ld	c, a
      0005E9 3Es00                 1534 	ld	a, #>(_puff_frame)
      0005EB CE 00                 1535 	adc	a, #0x00
      0005ED 47                    1536 	ld	b, a
      0005EE 0A                    1537 	ld	a, (bc)
      0005EF 3C                    1538 	inc	a
      0005F0 E6 0F                 1539 	and	a, #0x0f
      0005F2 02                    1540 	ld	(bc), a
      0005F3                       1541 00103$:
                           0005F3  1542 	C$player.c$315$2_0$226	= .
                                   1543 	.globl	C$player.c$315$2_0$226
                                   1544 ;src/player.c:315: for(i = 0; i < MAX_PUFF; i++){
      0005F3 21r04r00              1545 	ld	hl, #_i
      0005F6 34                    1546 	inc	(hl)
      0005F7 7E                    1547 	ld	a, (hl)
      0005F8 D6 04                 1548 	sub	a, #0x04
      0005FA 38 AF                 1549 	jr	C, 00127$
                           0005FC  1550 	C$player.c$325$1_0$225	= .
                                   1551 	.globl	C$player.c$325$1_0$225
                                   1552 ;src/player.c:325: if(brick_frame == 0){
      0005FC FAr18r00              1553 	ld	a, (#_brick_frame)
      0005FF B7                    1554 	or	a, a
      000600 20 0A                 1555 	jr	NZ, 00106$
                           000602  1556 	C$player.c$326$2_0$229	= .
                                   1557 	.globl	C$player.c$326$2_0$229
                                   1558 ;src/player.c:326: hide_sprites_range(12, 16);
      000602 21 0C 10              1559 	ld	hl, #0x100c
      000605 E5                    1560 	push	hl
      000606 CDr00r00              1561 	call	_hide_sprites_range
      000609 E1                    1562 	pop	hl
      00060A 18 36                 1563 	jr	00107$
      00060C                       1564 00106$:
                           00060C  1565 	C$player.c$329$2_0$230	= .
                                   1566 	.globl	C$player.c$329$2_0$230
                                   1567 ;src/player.c:329: brick_frame--;
      00060C 21r18r00              1568 	ld	hl, #_brick_frame
      00060F 35                    1569 	dec	(hl)
                                   1570 ;src/player.c:330: scroll_sprite(12, 1, brick_y_speed>>1);
      000610 21r19r00              1571 	ld	hl, #_brick_y_speed
      000613 5E                    1572 	ld	e, (hl)
      000614 CB 2B                 1573 	sra	e
                                   1574 ;C:/gbdk/include/gb/gb.h:1536: OAM_item_t * itm = &shadow_OAM[nb];
      000616 01r30r00              1575 	ld	bc, #_shadow_OAM+48
                                   1576 ;C:/gbdk/include/gb/gb.h:1537: itm->y+=y, itm->x+=x;
      000619 0A                    1577 	ld	a, (bc)
      00061A 83                    1578 	add	a, e
      00061B 02                    1579 	ld	(bc), a
      00061C 03                    1580 	inc	bc
      00061D 0A                    1581 	ld	a, (bc)
      00061E 3C                    1582 	inc	a
      00061F 02                    1583 	ld	(bc), a
                                   1584 ;src/player.c:331: scroll_sprite(13, -1, brick_y_speed>>1);
      000620 5E                    1585 	ld	e, (hl)
      000621 CB 2B                 1586 	sra	e
                                   1587 ;C:/gbdk/include/gb/gb.h:1536: OAM_item_t * itm = &shadow_OAM[nb];
      000623 01r34r00              1588 	ld	bc, #_shadow_OAM+52
                                   1589 ;C:/gbdk/include/gb/gb.h:1537: itm->y+=y, itm->x+=x;
      000626 0A                    1590 	ld	a, (bc)
      000627 83                    1591 	add	a, e
      000628 02                    1592 	ld	(bc), a
      000629 03                    1593 	inc	bc
      00062A 0A                    1594 	ld	a, (bc)
      00062B 3D                    1595 	dec	a
      00062C 02                    1596 	ld	(bc), a
                                   1597 ;C:/gbdk/include/gb/gb.h:1536: OAM_item_t * itm = &shadow_OAM[nb];
      00062D 01r38r00              1598 	ld	bc, #_shadow_OAM+56
                                   1599 ;C:/gbdk/include/gb/gb.h:1537: itm->y+=y, itm->x+=x;
      000630 0A                    1600 	ld	a, (bc)
      000631 3C                    1601 	inc	a
      000632 02                    1602 	ld	(bc), a
      000633 03                    1603 	inc	bc
      000634 0A                    1604 	ld	a, (bc)
      000635 3C                    1605 	inc	a
      000636 02                    1606 	ld	(bc), a
                                   1607 ;C:/gbdk/include/gb/gb.h:1536: OAM_item_t * itm = &shadow_OAM[nb];
      000637 01r3Cr00              1608 	ld	bc, #_shadow_OAM+60
                                   1609 ;C:/gbdk/include/gb/gb.h:1537: itm->y+=y, itm->x+=x;
      00063A 0A                    1610 	ld	a, (bc)
      00063B 3C                    1611 	inc	a
      00063C 02                    1612 	ld	(bc), a
      00063D 03                    1613 	inc	bc
      00063E 0A                    1614 	ld	a, (bc)
      00063F 3D                    1615 	dec	a
      000640 02                    1616 	ld	(bc), a
                           000641  1617 	C$player.c$334$2_0$230	= .
                                   1618 	.globl	C$player.c$334$2_0$230
                                   1619 ;src/player.c:334: brick_y_speed++;
      000641 34                    1620 	inc	(hl)
      000642                       1621 00107$:
                           000642  1622 	C$player.c$338$1_0$225	= .
                                   1623 	.globl	C$player.c$338$1_0$225
                                   1624 ;src/player.c:338: if(current_state != PLAYER_STATE_RUNNING) return;
      000642 FAr10r00              1625 	ld	a, (#_current_state)
      000645 3D                    1626 	dec	a
      000646 C2r0Br07              1627 	jp	NZ,00128$
                           000649  1628 	C$player.c$339$1_0$225	= .
                                   1629 	.globl	C$player.c$339$1_0$225
                                   1630 ;src/player.c:339: if((frame_counter != 0) || (!(current_frame == 0 || current_frame == 3))) return;
      000649 FAr01r00              1631 	ld	a, (#_frame_counter)
      00064C B7                    1632 	or	a, a
      00064D C2r0Br07              1633 	jp	NZ,00128$
      000650 21r02r00              1634 	ld	hl, #_current_frame
      000653 7E                    1635 	ld	a, (hl)
      000654 B7                    1636 	or	a, a
      000655 28 06                 1637 	jr	Z, 00111$
      000657 7E                    1638 	ld	a, (hl)
      000658 D6 03                 1639 	sub	a, #0x03
      00065A C2r0Br07              1640 	jp	NZ,00128$
      00065D                       1641 00111$:
                           00065D  1642 	C$player.c$342$1_0$225	= .
                                   1643 	.globl	C$player.c$342$1_0$225
                                   1644 ;src/player.c:342: i = FIRST_PUFF + next_free_puff;
      00065D FAr17r00              1645 	ld	a, (#_next_free_puff)
      000660 C6 08                 1646 	add	a, #0x08
      000662 21r04r00              1647 	ld	hl, #_i
      000665 77                    1648 	ld	(hl), a
                                   1649 ;src/player.c:343: set_sprite_tile(i, PLAYER_SPRITES);
      000666 4E                    1650 	ld	c, (hl)
                                   1651 ;C:/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000667 26 00                 1652 	ld	h, #0x00
                                   1653 ;	spillPairReg hl
                                   1654 ;	spillPairReg hl
      000669 69                    1655 	ld	l, c
      00066A 29                    1656 	add	hl, hl
      00066B 29                    1657 	add	hl, hl
      00066C 11r00r00              1658 	ld	de, #_shadow_OAM
      00066F 19                    1659 	add	hl, de
      000670 23                    1660 	inc	hl
      000671 23                    1661 	inc	hl
      000672 36 18                 1662 	ld	(hl), #0x18
                                   1663 ;src/player.c:344: set_sprite_prop(i, get_sprite_prop(i) & 0xDF); // reset the flip
      000674 21r04r00              1664 	ld	hl, #_i
      000677 4E                    1665 	ld	c, (hl)
                                   1666 ;C:/gbdk/include/gb/gb.h:1503: return shadow_OAM[nb].prop;
      000678 26 00                 1667 	ld	h, #0x00
                                   1668 ;	spillPairReg hl
                                   1669 ;	spillPairReg hl
      00067A 69                    1670 	ld	l, c
      00067B 29                    1671 	add	hl, hl
      00067C 29                    1672 	add	hl, hl
      00067D 11r00r00              1673 	ld	de, #_shadow_OAM
      000680 19                    1674 	add	hl, de
      000681 23                    1675 	inc	hl
      000682 23                    1676 	inc	hl
      000683 23                    1677 	inc	hl
      000684 4E                    1678 	ld	c, (hl)
                                   1679 ;src/player.c:344: set_sprite_prop(i, get_sprite_prop(i) & 0xDF); // reset the flip
      000685 CB A9                 1680 	res	5, c
      000687 21r04r00              1681 	ld	hl, #_i
                                   1682 ;C:/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      00068A 6E                    1683 	ld	l, (hl)
                                   1684 ;	spillPairReg hl
                                   1685 ;	spillPairReg hl
      00068B 26 00                 1686 	ld	h, #0x00
                                   1687 ;	spillPairReg hl
                                   1688 ;	spillPairReg hl
      00068D 29                    1689 	add	hl, hl
      00068E 29                    1690 	add	hl, hl
      00068F 11r00r00              1691 	ld	de, #_shadow_OAM
      000692 19                    1692 	add	hl, de
      000693 23                    1693 	inc	hl
      000694 23                    1694 	inc	hl
      000695 23                    1695 	inc	hl
      000696 71                    1696 	ld	(hl), c
                           000697  1697 	C$player.c$345$1_0$225	= .
                                   1698 	.globl	C$player.c$345$1_0$225
                                   1699 ;src/player.c:345: puff_frame[next_free_puff] = 4;
      000697 3Er00                 1700 	ld	a, #<(_puff_frame)
      000699 21r17r00              1701 	ld	hl, #_next_free_puff
      00069C 86                    1702 	add	a, (hl)
      00069D 4F                    1703 	ld	c, a
      00069E 3Es00                 1704 	ld	a, #>(_puff_frame)
      0006A0 CE 00                 1705 	adc	a, #0x00
      0006A2 47                    1706 	ld	b, a
      0006A3 3E 04                 1707 	ld	a, #0x04
      0006A5 02                    1708 	ld	(bc), a
                                   1709 ;src/player.c:346: move_sprite(i, player_x + X_OFFSET, (uint8_t)((player_y + Y_OFFSET) - camera_y));
      0006A6 FAr0Dr00              1710 	ld	a, (#_player_y)
      0006A9 C6 08                 1711 	add	a, #0x08
      0006AB 21r00r00              1712 	ld	hl, #_camera_y
      0006AE 4E                    1713 	ld	c, (hl)
      0006AF 91                    1714 	sub	a, c
      0006B0 F8 02                 1715 	ldhl	sp,	#2
      0006B2 77                    1716 	ld	(hl), a
      0006B3 FAr0Cr00              1717 	ld	a, (#_player_x)
      0006B6 C6 FC                 1718 	add	a, #0xfc
      0006B8 F8 03                 1719 	ldhl	sp,	#3
      0006BA 77                    1720 	ld	(hl), a
      0006BB 21r04r00              1721 	ld	hl, #_i
      0006BE 4E                    1722 	ld	c, (hl)
                                   1723 ;C:/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0006BF AF                    1724 	xor	a, a
      0006C0 CB 21                 1725 	sla	c
      0006C2 8F                    1726 	adc	a, a
      0006C3 CB 21                 1727 	sla	c
      0006C5 8F                    1728 	adc	a, a
      0006C6 F8 00                 1729 	ldhl	sp,	#0
      0006C8 71                    1730 	ld	(hl), c
      0006C9 23                    1731 	inc	hl
      0006CA 77                    1732 	ld	(hl), a
      0006CB 11r00r00              1733 	ld	de, #_shadow_OAM
      0006CE E1                    1734 	pop	hl
      0006CF E5                    1735 	push	hl
      0006D0 19                    1736 	add	hl, de
      0006D1 E5                    1737 	push	hl
      0006D2 7D                    1738 	ld	a, l
      0006D3 F8 06                 1739 	ldhl	sp,	#6
      0006D5 77                    1740 	ld	(hl), a
      0006D6 E1                    1741 	pop	hl
      0006D7 7C                    1742 	ld	a, h
      0006D8 F8 05                 1743 	ldhl	sp,	#5
                                   1744 ;C:/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0006DA 32                    1745 	ld	(hl-), a
      0006DB 2A                    1746 	ld	a, (hl+)
      0006DC 5F                    1747 	ld	e, a
      0006DD 56                    1748 	ld	d, (hl)
      0006DE F8 02                 1749 	ldhl	sp,	#2
      0006E0 2A                    1750 	ld	a, (hl+)
      0006E1 23                    1751 	inc	hl
      0006E2 12                    1752 	ld	(de), a
      0006E3 2A                    1753 	ld	a, (hl+)
      0006E4 4F                    1754 	ld	c, a
      0006E5 3A                    1755 	ld	a, (hl-)
      0006E6 2B                    1756 	dec	hl
      0006E7 47                    1757 	ld	b, a
      0006E8 03                    1758 	inc	bc
      0006E9 7E                    1759 	ld	a, (hl)
      0006EA 02                    1760 	ld	(bc), a
                           0006EB  1761 	C$player.c$347$1_0$225	= .
                                   1762 	.globl	C$player.c$347$1_0$225
                                   1763 ;src/player.c:347: if(!is_facing_right) set_sprite_prop(i, S_FLIPX); //flip if facing left
      0006EB 21r08r00              1764 	ld	hl, #_is_facing_right
      0006EE CB 46                 1765 	bit	0, (hl)
      0006F0 20 11                 1766 	jr	NZ, 00115$
      0006F2 21r04r00              1767 	ld	hl, #_i
                                   1768 ;C:/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      0006F5 6E                    1769 	ld	l, (hl)
      0006F6 01r00r00              1770 	ld	bc, #_shadow_OAM+0
                                   1771 ;	spillPairReg hl
                                   1772 ;	spillPairReg hl
      0006F9 26 00                 1773 	ld	h, #0x00
                                   1774 ;	spillPairReg hl
                                   1775 ;	spillPairReg hl
      0006FB 29                    1776 	add	hl, hl
      0006FC 29                    1777 	add	hl, hl
      0006FD 09                    1778 	add	hl, bc
      0006FE 23                    1779 	inc	hl
      0006FF 23                    1780 	inc	hl
      000700 23                    1781 	inc	hl
      000701 36 20                 1782 	ld	(hl), #0x20
                           000703  1783 	C$player.c$347$1_0$225	= .
                                   1784 	.globl	C$player.c$347$1_0$225
                                   1785 ;src/player.c:347: if(!is_facing_right) set_sprite_prop(i, S_FLIPX); //flip if facing left
      000703                       1786 00115$:
                           000703  1787 	C$player.c$349$1_0$225	= .
                                   1788 	.globl	C$player.c$349$1_0$225
                                   1789 ;src/player.c:349: next_free_puff = (next_free_puff + 1) & 0x03;
      000703 21r17r00              1790 	ld	hl, #_next_free_puff
      000706 7E                    1791 	ld	a, (hl)
      000707 3C                    1792 	inc	a
      000708 E6 03                 1793 	and	a, #0x03
      00070A 77                    1794 	ld	(hl), a
      00070B                       1795 00128$:
                           00070B  1796 	C$player.c$350$1_0$225	= .
                                   1797 	.globl	C$player.c$350$1_0$225
                                   1798 ;src/player.c:350: }
      00070B E8 06                 1799 	add	sp, #6
                           00070D  1800 	C$player.c$350$1_0$225	= .
                                   1801 	.globl	C$player.c$350$1_0$225
                           00070D  1802 	XFplayer$render_all_particles$0$0	= .
                                   1803 	.globl	XFplayer$render_all_particles$0$0
      00070D C9                    1804 	ret
                           00070E  1805 	Fplayer$instanciate_collision_puffs$0$0	= .
                                   1806 	.globl	Fplayer$instanciate_collision_puffs$0$0
                           00070E  1807 	C$player.c$352$1_0$265	= .
                                   1808 	.globl	C$player.c$352$1_0$265
                                   1809 ;src/player.c:352: static void instanciate_collision_puffs(void){
                                   1810 ;	---------------------------------
                                   1811 ; Function instanciate_collision_puffs
                                   1812 ; ---------------------------------
      00070E                       1813 _instanciate_collision_puffs:
                           00070E  1814 	C$player.c$354$1_0$265	= .
                                   1815 	.globl	C$player.c$354$1_0$265
                                   1816 ;src/player.c:354: uint8_t i = FIRST_PUFF + next_free_puff;
      00070E FAr17r00              1817 	ld	a, (#_next_free_puff)
      000711 C6 08                 1818 	add	a, #0x08
      000713 4F                    1819 	ld	c, a
                                   1820 ;C:/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000714 11r00r00              1821 	ld	de, #_shadow_OAM+0
      000717 69                    1822 	ld	l, c
                                   1823 ;	spillPairReg hl
                                   1824 ;	spillPairReg hl
      000718 26 00                 1825 	ld	h, #0x00
                                   1826 ;	spillPairReg hl
                                   1827 ;	spillPairReg hl
      00071A 29                    1828 	add	hl, hl
      00071B 29                    1829 	add	hl, hl
      00071C 19                    1830 	add	hl, de
      00071D 23                    1831 	inc	hl
      00071E 23                    1832 	inc	hl
      00071F 36 18                 1833 	ld	(hl), #0x18
                                   1834 ;C:/gbdk/include/gb/gb.h:1503: return shadow_OAM[nb].prop;
      000721 69                    1835 	ld	l, c
                                   1836 ;	spillPairReg hl
                                   1837 ;	spillPairReg hl
      000722 26 00                 1838 	ld	h, #0x00
                                   1839 ;	spillPairReg hl
                                   1840 ;	spillPairReg hl
      000724 29                    1841 	add	hl, hl
      000725 29                    1842 	add	hl, hl
      000726 5D                    1843 	ld	e, l
      000727 54                    1844 	ld	d, h
      000728 21r01r00              1845 	ld	hl,#_shadow_OAM + 1
      00072B 19                    1846 	add	hl,de
      00072C 23                    1847 	inc	hl
      00072D 23                    1848 	inc	hl
      00072E 4E                    1849 	ld	c, (hl)
                                   1850 ;src/player.c:356: set_sprite_prop(i, get_sprite_prop(i) & 0xDF); // remove flip
      00072F CB A9                 1851 	res	5, c
                                   1852 ;C:/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000731 21r01r00              1853 	ld	hl,#_shadow_OAM + 1
      000734 19                    1854 	add	hl,de
      000735 23                    1855 	inc	hl
      000736 23                    1856 	inc	hl
      000737 71                    1857 	ld	(hl), c
                           000738  1858 	C$player.c$357$1_0$265	= .
                                   1859 	.globl	C$player.c$357$1_0$265
                                   1860 ;src/player.c:357: puff_frame[next_free_puff] = 4;
      000738 3Er00                 1861 	ld	a, #<(_puff_frame)
      00073A 21r17r00              1862 	ld	hl, #_next_free_puff
      00073D 86                    1863 	add	a, (hl)
      00073E 4F                    1864 	ld	c, a
      00073F 3Es00                 1865 	ld	a, #>(_puff_frame)
      000741 CE 00                 1866 	adc	a, #0x00
      000743 47                    1867 	ld	b, a
      000744 3E 04                 1868 	ld	a, #0x04
      000746 02                    1869 	ld	(bc), a
                                   1870 ;src/player.c:358: move_sprite(i, player_x + X_OFFSET - 8U, (uint8_t)((player_y + Y_OFFSET) - camera_y));
      000747 FAr0Dr00              1871 	ld	a, (#_player_y)
      00074A C6 08                 1872 	add	a, #0x08
      00074C 21r00r00              1873 	ld	hl, #_camera_y
      00074F 4E                    1874 	ld	c, (hl)
      000750 91                    1875 	sub	a, c
      000751 47                    1876 	ld	b, a
      000752 FAr0Cr00              1877 	ld	a, (#_player_x)
      000755 C6 F4                 1878 	add	a, #0xf4
      000757 4F                    1879 	ld	c, a
                                   1880 ;C:/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000758 21r00r00              1881 	ld	hl, #_shadow_OAM
      00075B 19                    1882 	add	hl, de
                                   1883 ;C:/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      00075C 78                    1884 	ld	a, b
      00075D 22                    1885 	ld	(hl+), a
      00075E 71                    1886 	ld	(hl), c
                           00075F  1887 	C$player.c$360$1_0$265	= .
                                   1888 	.globl	C$player.c$360$1_0$265
                                   1889 ;src/player.c:360: next_free_puff = (next_free_puff + 1) & 0x03;
      00075F 21r17r00              1890 	ld	hl, #_next_free_puff
      000762 7E                    1891 	ld	a, (hl)
      000763 3C                    1892 	inc	a
      000764 E6 03                 1893 	and	a, #0x03
      000766 77                    1894 	ld	(hl), a
                           000767  1895 	C$player.c$362$1_0$265	= .
                                   1896 	.globl	C$player.c$362$1_0$265
                                   1897 ;src/player.c:362: i = FIRST_PUFF + next_free_puff;
      000767 7E                    1898 	ld	a, (hl)
      000768 C6 08                 1899 	add	a, #0x08
      00076A 4F                    1900 	ld	c, a
                                   1901 ;C:/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00076B 11r00r00              1902 	ld	de, #_shadow_OAM+0
      00076E 69                    1903 	ld	l, c
                                   1904 ;	spillPairReg hl
                                   1905 ;	spillPairReg hl
      00076F 26 00                 1906 	ld	h, #0x00
                                   1907 ;	spillPairReg hl
                                   1908 ;	spillPairReg hl
      000771 29                    1909 	add	hl, hl
      000772 29                    1910 	add	hl, hl
      000773 19                    1911 	add	hl, de
      000774 23                    1912 	inc	hl
      000775 23                    1913 	inc	hl
      000776 36 18                 1914 	ld	(hl), #0x18
                                   1915 ;C:/gbdk/include/gb/gb.h:1503: return shadow_OAM[nb].prop;
      000778 69                    1916 	ld	l, c
                                   1917 ;	spillPairReg hl
                                   1918 ;	spillPairReg hl
      000779 26 00                 1919 	ld	h, #0x00
                                   1920 ;	spillPairReg hl
                                   1921 ;	spillPairReg hl
      00077B 29                    1922 	add	hl, hl
      00077C 29                    1923 	add	hl, hl
      00077D 5D                    1924 	ld	e, l
      00077E 54                    1925 	ld	d, h
      00077F 21r01r00              1926 	ld	hl,#_shadow_OAM + 1
      000782 19                    1927 	add	hl,de
      000783 23                    1928 	inc	hl
      000784 23                    1929 	inc	hl
      000785 4E                    1930 	ld	c, (hl)
                                   1931 ;src/player.c:364: set_sprite_prop(i, get_sprite_prop(i) | 0x20); // add flip
      000786 CB E9                 1932 	set	5, c
                                   1933 ;C:/gbdk/include/gb/gb.h:1493: shadow_OAM[nb].prop=prop;
      000788 21r01r00              1934 	ld	hl,#_shadow_OAM + 1
      00078B 19                    1935 	add	hl,de
      00078C 23                    1936 	inc	hl
      00078D 23                    1937 	inc	hl
      00078E 71                    1938 	ld	(hl), c
                           00078F  1939 	C$player.c$365$1_0$265	= .
                                   1940 	.globl	C$player.c$365$1_0$265
                                   1941 ;src/player.c:365: puff_frame[next_free_puff] = 4;
      00078F 3Er00                 1942 	ld	a, #<(_puff_frame)
      000791 21r17r00              1943 	ld	hl, #_next_free_puff
      000794 86                    1944 	add	a, (hl)
      000795 4F                    1945 	ld	c, a
      000796 3Es00                 1946 	ld	a, #>(_puff_frame)
      000798 CE 00                 1947 	adc	a, #0x00
      00079A 47                    1948 	ld	b, a
      00079B 3E 04                 1949 	ld	a, #0x04
      00079D 02                    1950 	ld	(bc), a
                                   1951 ;src/player.c:366: move_sprite(i, player_x + X_OFFSET + 8U, (uint8_t)((player_y + Y_OFFSET) - camera_y));
      00079E FAr0Dr00              1952 	ld	a, (#_player_y)
      0007A1 C6 08                 1953 	add	a, #0x08
      0007A3 21r00r00              1954 	ld	hl, #_camera_y
      0007A6 4E                    1955 	ld	c, (hl)
      0007A7 91                    1956 	sub	a, c
      0007A8 47                    1957 	ld	b, a
      0007A9 FAr0Cr00              1958 	ld	a, (#_player_x)
      0007AC C6 04                 1959 	add	a, #0x04
      0007AE 4F                    1960 	ld	c, a
                                   1961 ;C:/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0007AF 21r00r00              1962 	ld	hl, #_shadow_OAM
      0007B2 19                    1963 	add	hl, de
                                   1964 ;C:/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0007B3 78                    1965 	ld	a, b
      0007B4 22                    1966 	ld	(hl+), a
      0007B5 71                    1967 	ld	(hl), c
                           0007B6  1968 	C$player.c$368$1_0$265	= .
                                   1969 	.globl	C$player.c$368$1_0$265
                                   1970 ;src/player.c:368: next_free_puff = (next_free_puff + 1) & 0x03;
      0007B6 21r17r00              1971 	ld	hl, #_next_free_puff
      0007B9 7E                    1972 	ld	a, (hl)
      0007BA 3C                    1973 	inc	a
      0007BB E6 03                 1974 	and	a, #0x03
      0007BD 77                    1975 	ld	(hl), a
                           0007BE  1976 	C$player.c$369$1_0$265	= .
                                   1977 	.globl	C$player.c$369$1_0$265
                                   1978 ;src/player.c:369: }
                           0007BE  1979 	C$player.c$369$1_0$265	= .
                                   1980 	.globl	C$player.c$369$1_0$265
                           0007BE  1981 	XFplayer$instanciate_collision_puffs$0$0	= .
                                   1982 	.globl	XFplayer$instanciate_collision_puffs$0$0
      0007BE C9                    1983 	ret
                           0007BF  1984 	Fplayer$instanciate_brick_particles$0$0	= .
                                   1985 	.globl	Fplayer$instanciate_brick_particles$0$0
                           0007BF  1986 	C$player.c$371$1_0$291	= .
                                   1987 	.globl	C$player.c$371$1_0$291
                                   1988 ;src/player.c:371: static void instanciate_brick_particles(void){
                                   1989 ;	---------------------------------
                                   1990 ; Function instanciate_brick_particles
                                   1991 ; ---------------------------------
      0007BF                       1992 _instanciate_brick_particles:
                           0007BF  1993 	C$player.c$373$1_0$291	= .
                                   1994 	.globl	C$player.c$373$1_0$291
                                   1995 ;src/player.c:373: uint8_t particle_x = ((3 + (i<<1 & 0x0C)) << 3) + 14u;
      0007BF FAr04r00              1996 	ld	a, (#_i)
      0007C2 87                    1997 	add	a, a
      0007C3 E6 0C                 1998 	and	a, #0x0c
      0007C5 C6 03                 1999 	add	a, #0x03
      0007C7 87                    2000 	add	a, a
      0007C8 87                    2001 	add	a, a
      0007C9 87                    2002 	add	a, a
      0007CA C6 0E                 2003 	add	a, #0x0e
      0007CC 4F                    2004 	ld	c, a
                           0007CD  2005 	C$player.c$374$1_0$291	= .
                                   2006 	.globl	C$player.c$374$1_0$291
                                   2007 ;src/player.c:374: uint8_t particle_y = (((PLAYER_FLOOR << 3) + 1 + ((~i & 0x01) << 2)) << 3) - camera_y + 16u;
      0007CD FAr0Dr00              2008 	ld	a, (#_player_y)
      0007D0 07                    2009 	rlca
      0007D1 07                    2010 	rlca
      0007D2 E6 03                 2011 	and	a, #0x03
      0007D4 87                    2012 	add	a, a
      0007D5 87                    2013 	add	a, a
      0007D6 87                    2014 	add	a, a
      0007D7 47                    2015 	ld	b, a
      0007D8 04                    2016 	inc	b
      0007D9 FAr04r00              2017 	ld	a, (#_i)
      0007DC 2F                    2018 	cpl
      0007DD E6 01                 2019 	and	a, #0x01
      0007DF 87                    2020 	add	a, a
      0007E0 87                    2021 	add	a, a
      0007E1 80                    2022 	add	a, b
      0007E2 87                    2023 	add	a, a
      0007E3 87                    2024 	add	a, a
      0007E4 87                    2025 	add	a, a
      0007E5 21r00r00              2026 	ld	hl, #_camera_y
      0007E8 46                    2027 	ld	b, (hl)
      0007E9 90                    2028 	sub	a, b
      0007EA C6 10                 2029 	add	a, #0x10
      0007EC 47                    2030 	ld	b, a
                                   2031 ;src/player.c:375: move_sprite(12, particle_x, particle_y);
      0007ED 59                    2032 	ld	e, c
                                   2033 ;C:/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0007EE 21r30r00              2034 	ld	hl, #(_shadow_OAM + 48)
                                   2035 ;C:/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0007F1 70                    2036 	ld	(hl), b
      0007F2 23                    2037 	inc	hl
      0007F3 73                    2038 	ld	(hl), e
                                   2039 ;C:/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0007F4 21r34r00              2040 	ld	hl, #(_shadow_OAM + 52)
                                   2041 ;C:/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0007F7 70                    2042 	ld	(hl), b
      0007F8 23                    2043 	inc	hl
      0007F9 71                    2044 	ld	(hl), c
                                   2045 ;C:/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0007FA 21r38r00              2046 	ld	hl, #(_shadow_OAM + 56)
                                   2047 ;C:/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0007FD 70                    2048 	ld	(hl), b
      0007FE 23                    2049 	inc	hl
      0007FF 71                    2050 	ld	(hl), c
                                   2051 ;C:/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      000800 21r3Cr00              2052 	ld	hl, #(_shadow_OAM + 60)
                                   2053 ;C:/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      000803 70                    2054 	ld	(hl), b
      000804 23                    2055 	inc	hl
      000805 71                    2056 	ld	(hl), c
                           000806  2057 	C$player.c$379$1_0$291	= .
                                   2058 	.globl	C$player.c$379$1_0$291
                                   2059 ;src/player.c:379: brick_frame = 10;
      000806 21r18r00              2060 	ld	hl, #_brick_frame
      000809 36 0A                 2061 	ld	(hl), #0x0a
                           00080B  2062 	C$player.c$380$1_0$291	= .
                                   2063 	.globl	C$player.c$380$1_0$291
                                   2064 ;src/player.c:380: brick_y_speed = -5;
      00080B 21r19r00              2065 	ld	hl, #_brick_y_speed
      00080E 36 FB                 2066 	ld	(hl), #0xfb
                           000810  2067 	C$player.c$381$1_0$291	= .
                                   2068 	.globl	C$player.c$381$1_0$291
                                   2069 ;src/player.c:381: }
                           000810  2070 	C$player.c$381$1_0$291	= .
                                   2071 	.globl	C$player.c$381$1_0$291
                           000810  2072 	XFplayer$instanciate_brick_particles$0$0	= .
                                   2073 	.globl	XFplayer$instanciate_brick_particles$0$0
      000810 C9                    2074 	ret
                           000811  2075 	Fplayer$hurt_frame$0$0	= .
                                   2076 	.globl	Fplayer$hurt_frame$0$0
                           000811  2077 	C$player.c$383$1_0$305	= .
                                   2078 	.globl	C$player.c$383$1_0$305
                                   2079 ;src/player.c:383: static void hurt_frame(void){
                                   2080 ;	---------------------------------
                                   2081 ; Function hurt_frame
                                   2082 ; ---------------------------------
      000811                       2083 _hurt_frame:
                           000811  2084 	C$player.c$384$1_0$305	= .
                                   2085 	.globl	C$player.c$384$1_0$305
                                   2086 ;src/player.c:384: if(frame_counter >= HURT_FRAMES){
      000811 FAr01r00              2087 	ld	a, (#_frame_counter)
      000814 D6 15                 2088 	sub	a, #0x15
      000816 38 0B                 2089 	jr	C, 00102$
                           000818  2090 	C$player.c$385$2_0$306	= .
                                   2091 	.globl	C$player.c$385$2_0$306
                                   2092 ;src/player.c:385: switch_state(PLAYER_STATE_FALLING);
      000818 3E 03                 2093 	ld	a, #0x03
      00081A F5                    2094 	push	af
      00081B 33                    2095 	inc	sp
      00081C CDrDBr08              2096 	call	_switch_state
      00081F 33                    2097 	inc	sp
                           000820  2098 	C$player.c$386$2_0$306	= .
                                   2099 	.globl	C$player.c$386$2_0$306
                                   2100 ;src/player.c:386: stop_hurt_sfx();
                           000820  2101 	C$player.c$387$2_0$306	= .
                                   2102 	.globl	C$player.c$387$2_0$306
                                   2103 ;src/player.c:387: return;
      000820 C3r00r00              2104 	jp	_stop_hurt_sfx
      000823                       2105 00102$:
                           000823  2106 	C$player.c$389$1_0$305	= .
                                   2107 	.globl	C$player.c$389$1_0$305
                                   2108 ;src/player.c:389: player_x = is_facing_right ? player_x - (x_speed >> PHYSICS_DAMPNER) : player_x + (x_speed >> PHYSICS_DAMPNER);
      000823 21r07r00              2109 	ld	hl, #_x_speed
      000826 4E                    2110 	ld	c, (hl)
      000827 CB 39                 2111 	srl	c
      000829 CB 39                 2112 	srl	c
      00082B 21r08r00              2113 	ld	hl, #_is_facing_right
      00082E CB 46                 2114 	bit	0, (hl)
      000830 28 06                 2115 	jr	Z, 00105$
      000832 FAr0Cr00              2116 	ld	a, (#_player_x)
      000835 91                    2117 	sub	a, c
      000836 18 04                 2118 	jr	00106$
      000838                       2119 00105$:
      000838 FAr0Cr00              2120 	ld	a, (#_player_x)
      00083B 81                    2121 	add	a, c
      00083C                       2122 00106$:
      00083C EAr0Cr00              2123 	ld	(#_player_x),a
                           00083F  2124 	C$player.c$390$1_0$305	= .
                                   2125 	.globl	C$player.c$390$1_0$305
                                   2126 ;src/player.c:390: player_y += (y_speed >> PHYSICS_DAMPNER);
      00083F FAr0Br00              2127 	ld	a, (#_y_speed)
      000842 CB 2F                 2128 	sra	a
      000844 CB 2F                 2129 	sra	a
      000846 21r0Dr00              2130 	ld	hl, #_player_y
      000849 4E                    2131 	ld	c, (hl)
      00084A 81                    2132 	add	a, c
      00084B 77                    2133 	ld	(hl), a
                           00084C  2134 	C$player.c$391$1_0$305	= .
                                   2135 	.globl	C$player.c$391$1_0$305
                                   2136 ;src/player.c:391: y_speed = y_speed >= clamp_y_velocity ? clamp_y_velocity : y_speed + HURT_G;
      00084C 21rCCr00              2137 	ld	hl, #_clamp_y_velocity
      00084F 4E                    2138 	ld	c, (hl)
      000850 59                    2139 	ld	e, c
      000851 FAr0Br00              2140 	ld	a, (#_y_speed)
      000854 57                    2141 	ld	d,a
      000855 91                    2142 	sub	a, c
      000856 CB 7B                 2143 	bit	7, e
      000858 28 07                 2144 	jr	Z, 00124$
      00085A CB 7A                 2145 	bit	7, d
      00085C 20 08                 2146 	jr	NZ, 00125$
      00085E BF                    2147 	cp	a, a
      00085F 18 05                 2148 	jr	00125$
      000861                       2149 00124$:
      000861 CB 7A                 2150 	bit	7, d
      000863 28 01                 2151 	jr	Z, 00125$
      000865 37                    2152 	scf
      000866                       2153 00125$:
      000866 30 06                 2154 	jr	NC, 00108$
      000868 21r0Br00              2155 	ld	hl, #_y_speed
      00086B 4E                    2156 	ld	c, (hl)
      00086C 0C                    2157 	inc	c
      00086D 0C                    2158 	inc	c
      00086E                       2159 00108$:
      00086E 21r0Br00              2160 	ld	hl, #_y_speed
      000871 71                    2161 	ld	(hl), c
                           000872  2162 	C$player.c$392$1_0$305	= .
                                   2163 	.globl	C$player.c$392$1_0$305
                                   2164 ;src/player.c:392: }
                           000872  2165 	C$player.c$392$1_0$305	= .
                                   2166 	.globl	C$player.c$392$1_0$305
                           000872  2167 	XFplayer$hurt_frame$0$0	= .
                                   2168 	.globl	XFplayer$hurt_frame$0$0
      000872 C9                    2169 	ret
                           000873  2170 	Fplayer$end_frame$0$0	= .
                                   2171 	.globl	Fplayer$end_frame$0$0
                           000873  2172 	C$player.c$394$1_0$308	= .
                                   2173 	.globl	C$player.c$394$1_0$308
                                   2174 ;src/player.c:394: static void end_frame(void){
                                   2175 ;	---------------------------------
                                   2176 ; Function end_frame
                                   2177 ; ---------------------------------
      000873                       2178 _end_frame:
                           000873  2179 	C$player.c$395$1_0$308	= .
                                   2180 	.globl	C$player.c$395$1_0$308
                                   2181 ;src/player.c:395: if(frame_counter == (uint8_t)(metasprites_speeds[current_state][current_frame])){
      000873 01r00r00              2182 	ld	bc, #_metasprites_speeds+0
      000876 21r10r00              2183 	ld	hl, #_current_state
      000879 6E                    2184 	ld	l, (hl)
                                   2185 ;	spillPairReg hl
                                   2186 ;	spillPairReg hl
      00087A 26 00                 2187 	ld	h, #0x00
                                   2188 ;	spillPairReg hl
                                   2189 ;	spillPairReg hl
      00087C 29                    2190 	add	hl, hl
      00087D 09                    2191 	add	hl, bc
      00087E 2A                    2192 	ld	a, (hl+)
      00087F 4F                    2193 	ld	c, a
      000880 46                    2194 	ld	b, (hl)
      000881 79                    2195 	ld	a, c
      000882 21r02r00              2196 	ld	hl, #_current_frame
      000885 86                    2197 	add	a, (hl)
      000886 4F                    2198 	ld	c, a
      000887 30 01                 2199 	jr	NC, 00125$
      000889 04                    2200 	inc	b
      00088A                       2201 00125$:
      00088A 0A                    2202 	ld	a, (bc)
      00088B 4F                    2203 	ld	c, a
      00088C FAr01r00              2204 	ld	a, (#_frame_counter)
      00088F 91                    2205 	sub	a, c
      000890 20 24                 2206 	jr	NZ, 00104$
                           000892  2207 	C$player.c$396$2_0$309	= .
                                   2208 	.globl	C$player.c$396$2_0$309
                                   2209 ;src/player.c:396: frame_counter = 0;
      000892 21r01r00              2210 	ld	hl, #_frame_counter
      000895 36 00                 2211 	ld	(hl), #0x00
                           000897  2212 	C$player.c$397$2_0$309	= .
                                   2213 	.globl	C$player.c$397$2_0$309
                                   2214 ;src/player.c:397: current_frame++;
      000897 21r02r00              2215 	ld	hl, #_current_frame
      00089A 34                    2216 	inc	(hl)
                           00089B  2217 	C$player.c$398$2_0$309	= .
                                   2218 	.globl	C$player.c$398$2_0$309
                                   2219 ;src/player.c:398: if(current_frame == frames_in_state[current_state]){current_frame = 0;}
      00089B 01r00r00              2220 	ld	bc, #_frames_in_state+0
      00089E 79                    2221 	ld	a, c
      00089F 21r10r00              2222 	ld	hl, #_current_state
      0008A2 86                    2223 	add	a, (hl)
      0008A3 4F                    2224 	ld	c, a
      0008A4 30 01                 2225 	jr	NC, 00128$
      0008A6 04                    2226 	inc	b
      0008A7                       2227 00128$:
      0008A7 0A                    2228 	ld	a, (bc)
      0008A8 4F                    2229 	ld	c, a
      0008A9 FAr02r00              2230 	ld	a, (#_current_frame)
      0008AC 91                    2231 	sub	a, c
      0008AD 20 0B                 2232 	jr	NZ, 00105$
      0008AF 21r02r00              2233 	ld	hl, #_current_frame
      0008B2 36 00                 2234 	ld	(hl), #0x00
      0008B4 18 04                 2235 	jr	00105$
      0008B6                       2236 00104$:
                           0008B6  2237 	C$player.c$400$2_0$311	= .
                                   2238 	.globl	C$player.c$400$2_0$311
                                   2239 ;src/player.c:400: frame_counter++;
      0008B6 21r01r00              2240 	ld	hl, #_frame_counter
      0008B9 34                    2241 	inc	(hl)
      0008BA                       2242 00105$:
                           0008BA  2243 	C$player.c$403$1_0$308	= .
                                   2244 	.globl	C$player.c$403$1_0$308
                                   2245 ;src/player.c:403: if(!rand_init){
      0008BA 21r00r00              2246 	ld	hl, #_rand_init
      0008BD CB 46                 2247 	bit	0, (hl)
      0008BF C0                    2248 	ret	NZ
                           0008C0  2249 	C$player.c$404$2_0$312	= .
                                   2250 	.globl	C$player.c$404$2_0$312
                                   2251 ;src/player.c:404: r = r ^ DIV_REG ^ (current_frame << frame_counter);
      0008C0 F0r00                 2252 	ldh	a, (_DIV_REG + 0)
      0008C2 21r00r00              2253 	ld	hl, #_r
      0008C5 AE                    2254 	xor	a, (hl)
      0008C6 21r01r00              2255 	ld	hl, #_frame_counter
      0008C9 46                    2256 	ld	b, (hl)
      0008CA 21r02r00              2257 	ld	hl, #_current_frame
      0008CD 4E                    2258 	ld	c, (hl)
      0008CE 04                    2259 	inc	b
      0008CF 18 02                 2260 	jr	00132$
      0008D1                       2261 00131$:
      0008D1 CB 21                 2262 	sla	c
      0008D3                       2263 00132$:
      0008D3 05                    2264 	dec	b
      0008D4 20 FB                 2265 	jr	NZ,00131$
      0008D6 A9                    2266 	xor	a, c
      0008D7 EAr00r00              2267 	ld	(#_r),a
                           0008DA  2268 	C$player.c$406$1_0$308	= .
                                   2269 	.globl	C$player.c$406$1_0$308
                                   2270 ;src/player.c:406: }
                           0008DA  2271 	C$player.c$406$1_0$308	= .
                                   2272 	.globl	C$player.c$406$1_0$308
                           0008DA  2273 	XFplayer$end_frame$0$0	= .
                                   2274 	.globl	XFplayer$end_frame$0$0
      0008DA C9                    2275 	ret
                           0008DB  2276 	Fplayer$switch_state$0$0	= .
                                   2277 	.globl	Fplayer$switch_state$0$0
                           0008DB  2278 	C$player.c$408$1_0$314	= .
                                   2279 	.globl	C$player.c$408$1_0$314
                                   2280 ;src/player.c:408: static inline void switch_state(PlayerState state){
                                   2281 ;	---------------------------------
                                   2282 ; Function switch_state
                                   2283 ; ---------------------------------
      0008DB                       2284 _switch_state:
                           0008DB  2285 	C$player.c$409$1_0$314	= .
                                   2286 	.globl	C$player.c$409$1_0$314
                                   2287 ;src/player.c:409: if(current_state == state) {return;}
      0008DB FAr10r00              2288 	ld	a, (#_current_state)
      0008DE F8 02                 2289 	ldhl	sp,	#2
      0008E0 96                    2290 	sub	a, (hl)
      0008E1 C8                    2291 	ret	Z
      0008E2 18 00                 2292 	jr	00102$
      0008E4                       2293 00102$:
                           0008E4  2294 	C$player.c$410$1_0$314	= .
                                   2295 	.globl	C$player.c$410$1_0$314
                                   2296 ;src/player.c:410: if(current_state == PLAYER_STATE_FALLING){instanciate_collision_puffs();}
      0008E4 FAr10r00              2297 	ld	a, (#_current_state)
      0008E7 D6 03                 2298 	sub	a, #0x03
      0008E9 20 03                 2299 	jr	NZ, 00104$
      0008EB CDr0Er07              2300 	call	_instanciate_collision_puffs
      0008EE                       2301 00104$:
                           0008EE  2302 	C$player.c$411$1_0$314	= .
                                   2303 	.globl	C$player.c$411$1_0$314
                                   2304 ;src/player.c:411: frame_counter = 0;
      0008EE 21r01r00              2305 	ld	hl, #_frame_counter
      0008F1 36 00                 2306 	ld	(hl), #0x00
                           0008F3  2307 	C$player.c$412$1_0$314	= .
                                   2308 	.globl	C$player.c$412$1_0$314
                                   2309 ;src/player.c:412: current_frame = 0;
      0008F3 21r02r00              2310 	ld	hl, #_current_frame
      0008F6 36 00                 2311 	ld	(hl), #0x00
                           0008F8  2312 	C$player.c$413$1_0$314	= .
                                   2313 	.globl	C$player.c$413$1_0$314
                                   2314 ;src/player.c:413: current_state = state;
      0008F8 F8 02                 2315 	ldhl	sp,	#2
      0008FA 7E                    2316 	ld	a, (hl)
      0008FB EAr10r00              2317 	ld	(#_current_state),a
                           0008FE  2318 	C$player.c$414$1_0$314	= .
                                   2319 	.globl	C$player.c$414$1_0$314
                                   2320 ;src/player.c:414: }
                           0008FE  2321 	C$player.c$414$1_0$314	= .
                                   2322 	.globl	C$player.c$414$1_0$314
                           0008FE  2323 	XFplayer$switch_state$0$0	= .
                                   2324 	.globl	XFplayer$switch_state$0$0
      0008FE C9                    2325 	ret
                           0008FF  2326 	Fplayer$check_collisions$0$0	= .
                                   2327 	.globl	Fplayer$check_collisions$0$0
                           0008FF  2328 	C$player.c$418$1_0$319	= .
                                   2329 	.globl	C$player.c$418$1_0$319
                                   2330 ;src/player.c:418: static void check_collisions(void){
                                   2331 ;	---------------------------------
                                   2332 ; Function check_collisions
                                   2333 ; ---------------------------------
      0008FF                       2334 _check_collisions:
      0008FF E8 F1                 2335 	add	sp, #-15
                           000901  2336 	C$player.c$420$2_0$319	= .
                                   2337 	.globl	C$player.c$420$2_0$319
                                   2338 ;src/player.c:420: for(i=0; i<8; i++){
      000901 21r04r00              2339 	ld	hl, #_i
      000904 36 00                 2340 	ld	(hl), #0x00
      000906                       2341 00133$:
                           000906  2342 	C$player.c$421$3_0$320	= .
                                   2343 	.globl	C$player.c$421$3_0$320
                                   2344 ;src/player.c:421: r = &rect_list[PLAYER_FLOOR][i];
      000906 FAr0Dr00              2345 	ld	a, (#_player_y)
      000909 07                    2346 	rlca
      00090A 07                    2347 	rlca
      00090B E6 03                 2348 	and	a, #0x03
      00090D 4F                    2349 	ld	c, a
      00090E 06 00                 2350 	ld	b, #0x00
      000910 69                    2351 	ld	l, c
      000911 60                    2352 	ld	h, b
      000912 29                    2353 	add	hl, hl
      000913 29                    2354 	add	hl, hl
      000914 09                    2355 	add	hl, bc
      000915 29                    2356 	add	hl, hl
      000916 29                    2357 	add	hl, hl
      000917 29                    2358 	add	hl, hl
      000918 01r00r00              2359 	ld	bc,#_rect_list
      00091B 09                    2360 	add	hl,bc
      00091C 4D                    2361 	ld	c, l
      00091D 44                    2362 	ld	b, h
      00091E FAr04r00              2363 	ld	a, (#_i)
      000921 5F                    2364 	ld	e, a
      000922 87                    2365 	add	a, a
      000923 87                    2366 	add	a, a
      000924 83                    2367 	add	a, e
      000925 81                    2368 	add	a, c
      000926 4F                    2369 	ld	c, a
      000927 3E 00                 2370 	ld	a, #0x00
      000929 88                    2371 	adc	a, b
      00092A F8 02                 2372 	ldhl	sp,	#2
      00092C 71                    2373 	ld	(hl), c
      00092D 23                    2374 	inc	hl
                           00092E  2375 	C$player.c$422$3_0$320	= .
                                   2376 	.globl	C$player.c$422$3_0$320
                                   2377 ;src/player.c:422: if(r->type == INACTIVE) continue;
      00092E 32                    2378 	ld	(hl-), a
      00092F 2A                    2379 	ld	a, (hl+)
      000930 5F                    2380 	ld	e, a
      000931 56                    2381 	ld	d, (hl)
      000932 21 04 00              2382 	ld	hl, #0x0004
      000935 19                    2383 	add	hl, de
      000936 4D                    2384 	ld	c, l
      000937 44                    2385 	ld	b, h
      000938 0A                    2386 	ld	a, (bc)
      000939 D6 02                 2387 	sub	a, #0x02
      00093B CAr96r0E              2388 	jp	Z,00131$
                           00093E  2389 	C$player.c$423$3_0$320	= .
                                   2390 	.globl	C$player.c$423$3_0$320
                                   2391 ;src/player.c:423: if(!point_vs_rect(r)) {
      00093E F8 02                 2392 	ldhl	sp,	#2
      000940 2A                    2393 	ld	a, (hl+)
      000941 5F                    2394 	ld	e, a
      000942 56                    2395 	ld	d, (hl)
      000943 D5                    2396 	push	de
      000944 CDr36r0F              2397 	call	_point_vs_rect
      000947 E1                    2398 	pop	hl
      000948 CB 43                 2399 	bit	0, e
      00094A CAr96r0E              2400 	jp	Z, 00131$
                           00094D  2401 	C$player.c$427$4_0$322	= .
                                   2402 	.globl	C$player.c$427$4_0$322
                                   2403 ;src/player.c:427: uint8_t external_point_area = 0x00;
      00094D 0E 00                 2404 	ld	c, #0x00
                           00094F  2405 	C$player.c$432$3_1$322	= .
                                   2406 	.globl	C$player.c$432$3_1$322
                                   2407 ;src/player.c:432: external_point_area |= (last_x >= (r->x + r->size_x)) ? 0x10 : (last_x <= r->x) ? 0x20 : 0x30;        
      00094F F8 02                 2408 	ldhl	sp,#2
      000951 2A                    2409 	ld	a, (hl+)
      000952 5F                    2410 	ld	e, a
      000953 56                    2411 	ld	d, (hl)
      000954 1A                    2412 	ld	a, (de)
      000955 47                    2413 	ld	b, a
      000956 F8 0D                 2414 	ldhl	sp,	#13
      000958 78                    2415 	ld	a, b
      000959 22                    2416 	ld	(hl+), a
      00095A 36 00                 2417 	ld	(hl), #0x00
      00095C F8 02                 2418 	ldhl	sp,#2
      00095E 2A                    2419 	ld	a, (hl+)
      00095F 5F                    2420 	ld	e, a
      000960 56                    2421 	ld	d, (hl)
      000961 21 02 00              2422 	ld	hl, #0x0002
      000964 19                    2423 	add	hl, de
      000965 E5                    2424 	push	hl
      000966 7D                    2425 	ld	a, l
      000967 F8 0B                 2426 	ldhl	sp,	#11
      000969 77                    2427 	ld	(hl), a
      00096A E1                    2428 	pop	hl
      00096B 7C                    2429 	ld	a, h
      00096C F8 0A                 2430 	ldhl	sp,	#10
      00096E 32                    2431 	ld	(hl-), a
      00096F 2A                    2432 	ld	a, (hl+)
      000970 5F                    2433 	ld	e, a
      000971 56                    2434 	ld	d, (hl)
      000972 1A                    2435 	ld	a, (de)
      000973 16 00                 2436 	ld	d, #0x00
      000975 5F                    2437 	ld	e, a
      000976 F8 0D                 2438 	ldhl	sp,	#13
      000978 2A                    2439 	ld	a,	(hl+)
      000979 66                    2440 	ld	h, (hl)
      00097A 6F                    2441 	ld	l, a
      00097B 19                    2442 	add	hl, de
      00097C E5                    2443 	push	hl
      00097D 7D                    2444 	ld	a, l
      00097E F8 0D                 2445 	ldhl	sp,	#13
      000980 77                    2446 	ld	(hl), a
      000981 E1                    2447 	pop	hl
      000982 7C                    2448 	ld	a, h
      000983 F8 0C                 2449 	ldhl	sp,	#12
      000985 77                    2450 	ld	(hl), a
      000986 FAr0Er00              2451 	ld	a, (#_last_x)
      000989 F8 0D                 2452 	ldhl	sp,	#13
      00098B 22                    2453 	ld	(hl+), a
      00098C 36 00                 2454 	ld	(hl), #0x00
      00098E F8 0D                 2455 	ldhl	sp,	#13
      000990 5D                    2456 	ld	e, l
      000991 54                    2457 	ld	d, h
      000992 F8 0B                 2458 	ldhl	sp,	#11
      000994 1A                    2459 	ld	a, (de)
      000995 13                    2460 	inc	de
      000996 96                    2461 	sub	a, (hl)
      000997 23                    2462 	inc	hl
      000998 1A                    2463 	ld	a, (de)
      000999 9E                    2464 	sbc	a, (hl)
      00099A 1A                    2465 	ld	a, (de)
      00099B 57                    2466 	ld	d, a
      00099C CB 7E                 2467 	bit	7, (hl)
      00099E 28 07                 2468 	jr	Z, 00257$
      0009A0 CB 7A                 2469 	bit	7, d
      0009A2 20 08                 2470 	jr	NZ, 00258$
      0009A4 BF                    2471 	cp	a, a
      0009A5 18 05                 2472 	jr	00258$
      0009A7                       2473 00257$:
      0009A7 CB 7A                 2474 	bit	7, d
      0009A9 28 01                 2475 	jr	Z, 00258$
      0009AB 37                    2476 	scf
      0009AC                       2477 00258$:
      0009AC 38 05                 2478 	jr	C, 00136$
      0009AE 11 10 00              2479 	ld	de, #0x0010
      0009B1 18 0F                 2480 	jr	00137$
      0009B3                       2481 00136$:
      0009B3 78                    2482 	ld	a, b
      0009B4 21r0Er00              2483 	ld	hl, #_last_x
      0009B7 96                    2484 	sub	a, (hl)
      0009B8 38 05                 2485 	jr	C, 00138$
      0009BA 11 20 00              2486 	ld	de, #0x0020
      0009BD 18 03                 2487 	jr	00139$
      0009BF                       2488 00138$:
      0009BF 11 30 00              2489 	ld	de, #0x0030
      0009C2                       2490 00139$:
      0009C2                       2491 00137$:
      0009C2 7B                    2492 	ld	a, e
      0009C3 B1                    2493 	or	a, c
      0009C4 F8 04                 2494 	ldhl	sp,	#4
                           0009C6  2495 	C$player.c$433$3_1$322	= .
                                   2496 	.globl	C$player.c$433$3_1$322
                                   2497 ;src/player.c:433: external_point_area |= (last_y <= (r->y - r->size_y)) ? 0x01 : (last_y >= r->y) ? 0x02 : 0x03;
      0009C6 32                    2498 	ld	(hl-), a
      0009C7 2B                    2499 	dec	hl
      0009C8 2A                    2500 	ld	a, (hl+)
      0009C9 5F                    2501 	ld	e, a
      0009CA 56                    2502 	ld	d, (hl)
      0009CB 6B                    2503 	ld	l, e
      0009CC 62                    2504 	ld	h, d
      0009CD 23                    2505 	inc	hl
      0009CE E5                    2506 	push	hl
      0009CF 7D                    2507 	ld	a, l
      0009D0 F8 0F                 2508 	ldhl	sp,	#15
      0009D2 77                    2509 	ld	(hl), a
      0009D3 E1                    2510 	pop	hl
      0009D4 7C                    2511 	ld	a, h
      0009D5 F8 0E                 2512 	ldhl	sp,	#14
      0009D7 32                    2513 	ld	(hl-), a
      0009D8 2A                    2514 	ld	a, (hl+)
      0009D9 5F                    2515 	ld	e, a
      0009DA 56                    2516 	ld	d, (hl)
      0009DB 1A                    2517 	ld	a, (de)
      0009DC 4F                    2518 	ld	c, a
      0009DD F8 00                 2519 	ldhl	sp,	#0
      0009DF 79                    2520 	ld	a, c
      0009E0 22                    2521 	ld	(hl+), a
      0009E1 AF                    2522 	xor	a, a
      0009E2 22                    2523 	ld	(hl+), a
      0009E3 2A                    2524 	ld	a, (hl+)
      0009E4 5F                    2525 	ld	e, a
      0009E5 56                    2526 	ld	d, (hl)
      0009E6 21 03 00              2527 	ld	hl, #0x0003
      0009E9 19                    2528 	add	hl, de
      0009EA E5                    2529 	push	hl
      0009EB 7D                    2530 	ld	a, l
      0009EC F8 0D                 2531 	ldhl	sp,	#13
      0009EE 77                    2532 	ld	(hl), a
      0009EF E1                    2533 	pop	hl
      0009F0 7C                    2534 	ld	a, h
      0009F1 F8 0C                 2535 	ldhl	sp,	#12
      0009F3 32                    2536 	ld	(hl-), a
      0009F4 2A                    2537 	ld	a, (hl+)
      0009F5 5F                    2538 	ld	e, a
      0009F6 56                    2539 	ld	d, (hl)
      0009F7 1A                    2540 	ld	a, (de)
      0009F8 F8 05                 2541 	ldhl	sp,	#5
      0009FA 22                    2542 	ld	(hl+), a
      0009FB 36 00                 2543 	ld	(hl), #0x00
      0009FD D1                    2544 	pop	de
      0009FE D5                    2545 	push	de
      0009FF 3A                    2546 	ld	a, (hl-)
      000A00 6E                    2547 	ld	l, (hl)
      000A01 67                    2548 	ld	h, a
      000A02 7B                    2549 	ld	a, e
      000A03 95                    2550 	sub	a, l
      000A04 5F                    2551 	ld	e, a
      000A05 7A                    2552 	ld	a, d
      000A06 9C                    2553 	sbc	a, h
      000A07 F8 08                 2554 	ldhl	sp,	#8
      000A09 32                    2555 	ld	(hl-), a
      000A0A 73                    2556 	ld	(hl), e
      000A0B FAr0Fr00              2557 	ld	a, (#_last_y)
      000A0E F8 05                 2558 	ldhl	sp,	#5
      000A10 22                    2559 	ld	(hl+), a
      000A11 36 00                 2560 	ld	(hl), #0x00
      000A13 F8 07                 2561 	ldhl	sp,	#7
      000A15 5D                    2562 	ld	e, l
      000A16 54                    2563 	ld	d, h
      000A17 F8 05                 2564 	ldhl	sp,	#5
      000A19 1A                    2565 	ld	a, (de)
      000A1A 13                    2566 	inc	de
      000A1B 96                    2567 	sub	a, (hl)
      000A1C 23                    2568 	inc	hl
      000A1D 1A                    2569 	ld	a, (de)
      000A1E 9E                    2570 	sbc	a, (hl)
      000A1F 1A                    2571 	ld	a, (de)
      000A20 57                    2572 	ld	d, a
      000A21 CB 7E                 2573 	bit	7, (hl)
      000A23 28 07                 2574 	jr	Z, 00259$
      000A25 CB 7A                 2575 	bit	7, d
      000A27 20 08                 2576 	jr	NZ, 00260$
      000A29 BF                    2577 	cp	a, a
      000A2A 18 05                 2578 	jr	00260$
      000A2C                       2579 00259$:
      000A2C CB 7A                 2580 	bit	7, d
      000A2E 28 01                 2581 	jr	Z, 00260$
      000A30 37                    2582 	scf
      000A31                       2583 00260$:
      000A31 38 04                 2584 	jr	C, 00140$
      000A33 3E 01                 2585 	ld	a, #0x01
      000A35 18 19                 2586 	jr	00141$
      000A37                       2587 00140$:
      000A37 FAr0Fr00              2588 	ld	a, (#_last_y)
      000A3A 91                    2589 	sub	a, c
      000A3B 38 09                 2590 	jr	C, 00142$
      000A3D F8 07                 2591 	ldhl	sp,	#7
      000A3F 3E 02                 2592 	ld	a, #0x02
      000A41 22                    2593 	ld	(hl+), a
      000A42 AF                    2594 	xor	a, a
      000A43 77                    2595 	ld	(hl), a
      000A44 18 07                 2596 	jr	00143$
      000A46                       2597 00142$:
      000A46 F8 07                 2598 	ldhl	sp,	#7
      000A48 3E 03                 2599 	ld	a, #0x03
      000A4A 22                    2600 	ld	(hl+), a
      000A4B AF                    2601 	xor	a, a
      000A4C 77                    2602 	ld	(hl), a
      000A4D                       2603 00143$:
      000A4D F8 07                 2604 	ldhl	sp,	#7
      000A4F 2A                    2605 	ld	a, (hl+)
      000A50                       2606 00141$:
      000A50 F8 04                 2607 	ldhl	sp,	#4
      000A52 B6                    2608 	or	a, (hl)
      000A53 4F                    2609 	ld	c, a
                           000A54  2610 	C$player.c$435$3_1$322	= .
                                   2611 	.globl	C$player.c$435$3_1$322
                                   2612 ;src/player.c:435: if((player_y > last_y) ? (player_y - last_y) > 50 : (last_y - player_y) > 50){
      000A54 FAr0Fr00              2613 	ld	a, (#_last_y)
      000A57 21r0Dr00              2614 	ld	hl, #_player_y
      000A5A 96                    2615 	sub	a, (hl)
      000A5B 30 2C                 2616 	jr	NC, 00144$
      000A5D 7E                    2617 	ld	a, (hl)
      000A5E 06 00                 2618 	ld	b, #0x00
      000A60 21r0Fr00              2619 	ld	hl, #_last_y
      000A63 5E                    2620 	ld	e, (hl)
      000A64 16 00                 2621 	ld	d, #0x00
      000A66 93                    2622 	sub	a, e
      000A67 6F                    2623 	ld	l, a
                                   2624 ;	spillPairReg hl
                                   2625 ;	spillPairReg hl
      000A68 78                    2626 	ld	a, b
      000A69 9A                    2627 	sbc	a, d
      000A6A 67                    2628 	ld	h, a
                                   2629 ;	spillPairReg hl
                                   2630 ;	spillPairReg hl
      000A6B 5C                    2631 	ld	e, h
      000A6C 16 00                 2632 	ld	d, #0x00
      000A6E 3E 32                 2633 	ld	a, #0x32
      000A70 BD                    2634 	cp	a, l
      000A71 3E 00                 2635 	ld	a, #0x00
      000A73 9C                    2636 	sbc	a, h
      000A74 CB 7B                 2637 	bit	7, e
      000A76 28 07                 2638 	jr	Z, 00261$
      000A78 CB 7A                 2639 	bit	7, d
      000A7A 20 08                 2640 	jr	NZ, 00262$
      000A7C BF                    2641 	cp	a, a
      000A7D 18 05                 2642 	jr	00262$
      000A7F                       2643 00261$:
      000A7F CB 7A                 2644 	bit	7, d
      000A81 28 01                 2645 	jr	Z, 00262$
      000A83 37                    2646 	scf
      000A84                       2647 00262$:
      000A84 3E 00                 2648 	ld	a, #0x00
      000A86 17                    2649 	rla
      000A87 18 2E                 2650 	jr	00145$
      000A89                       2651 00144$:
      000A89 21r0Fr00              2652 	ld	hl, #_last_y
      000A8C 5E                    2653 	ld	e, (hl)
      000A8D 16 00                 2654 	ld	d, #0x00
      000A8F 21r0Dr00              2655 	ld	hl, #_player_y
      000A92 6E                    2656 	ld	l, (hl)
                                   2657 ;	spillPairReg hl
                                   2658 ;	spillPairReg hl
      000A93 26 00                 2659 	ld	h, #0x00
                                   2660 ;	spillPairReg hl
                                   2661 ;	spillPairReg hl
      000A95 7B                    2662 	ld	a, e
      000A96 95                    2663 	sub	a, l
      000A97 6F                    2664 	ld	l, a
                                   2665 ;	spillPairReg hl
                                   2666 ;	spillPairReg hl
      000A98 7A                    2667 	ld	a, d
      000A99 9C                    2668 	sbc	a, h
      000A9A 47                    2669 	ld	b, a
      000A9B 58                    2670 	ld	e, b
      000A9C 16 00                 2671 	ld	d, #0x00
      000A9E 3E 32                 2672 	ld	a, #0x32
      000AA0 BD                    2673 	cp	a, l
      000AA1 3E 00                 2674 	ld	a, #0x00
      000AA3 98                    2675 	sbc	a, b
      000AA4 CB 7B                 2676 	bit	7, e
      000AA6 28 07                 2677 	jr	Z, 00263$
      000AA8 CB 7A                 2678 	bit	7, d
      000AAA 20 08                 2679 	jr	NZ, 00264$
      000AAC BF                    2680 	cp	a, a
      000AAD 18 05                 2681 	jr	00264$
      000AAF                       2682 00263$:
      000AAF CB 7A                 2683 	bit	7, d
      000AB1 28 01                 2684 	jr	Z, 00264$
      000AB3 37                    2685 	scf
      000AB4                       2686 00264$:
      000AB4 3E 00                 2687 	ld	a, #0x00
      000AB6 17                    2688 	rla
      000AB7                       2689 00145$:
      000AB7 B7                    2690 	or	a, a
      000AB8 28 06                 2691 	jr	Z, 00106$
                           000ABA  2692 	C$player.c$436$4_1$323	= .
                                   2693 	.globl	C$player.c$436$4_1$323
                                   2694 ;src/player.c:436: external_point_area = (external_point_area & 0xF0) + 0x02; //check for overflow height
      000ABA 79                    2695 	ld	a, c
      000ABB E6 F0                 2696 	and	a, #0xf0
      000ABD C6 02                 2697 	add	a, #0x02
      000ABF 4F                    2698 	ld	c, a
      000AC0                       2699 00106$:
                           000AC0  2700 	C$player.c$439$3_1$322	= .
                                   2701 	.globl	C$player.c$439$3_1$322
                                   2702 ;src/player.c:439: if(rect_functions[r->type](external_point_area)) continue;
      000AC0 F8 02                 2703 	ldhl	sp,#2
      000AC2 2A                    2704 	ld	a, (hl+)
      000AC3 5F                    2705 	ld	e, a
      000AC4 56                    2706 	ld	d, (hl)
      000AC5 21 04 00              2707 	ld	hl, #0x0004
      000AC8 19                    2708 	add	hl, de
      000AC9 5D                    2709 	ld	e, l
      000ACA 54                    2710 	ld	d, h
      000ACB 1A                    2711 	ld	a, (de)
      000ACC 26 00                 2712 	ld	h, #0x00
                                   2713 ;	spillPairReg hl
                                   2714 ;	spillPairReg hl
      000ACE 6F                    2715 	ld	l, a
      000ACF 29                    2716 	add	hl, hl
      000AD0 11r04r00              2717 	ld	de, #_rect_functions
      000AD3 19                    2718 	add	hl, de
      000AD4 2A                    2719 	ld	a, (hl+)
      000AD5 47                    2720 	ld	b, a
      000AD6 66                    2721 	ld	h, (hl)
                                   2722 ;	spillPairReg hl
      000AD7 C5                    2723 	push	bc
      000AD8 79                    2724 	ld	a, c
      000AD9 F5                    2725 	push	af
      000ADA 33                    2726 	inc	sp
      000ADB 68                    2727 	ld	l, b
                                   2728 ;	spillPairReg hl
                                   2729 ;	spillPairReg hl
      000ADC CDr00r00              2730 	call	___sdcc_call_hl
      000ADF 33                    2731 	inc	sp
      000AE0 6B                    2732 	ld	l, e
                                   2733 ;	spillPairReg hl
                                   2734 ;	spillPairReg hl
      000AE1 C1                    2735 	pop	bc
      000AE2 CB 45                 2736 	bit	0, l
      000AE4 C2r96r0E              2737 	jp	NZ, 00131$
                           000AE7  2738 	C$player.c$442$3_2$324	= .
                                   2739 	.globl	C$player.c$442$3_2$324
                                   2740 ;src/player.c:442: switch (external_point_area)
      000AE7 79                    2741 	ld	a,c
      000AE8 FE 11                 2742 	cp	a,#0x11
      000AEA 28 26                 2743 	jr	Z, 00109$
      000AEC FE 12                 2744 	cp	a,#0x12
      000AEE CArEDr0B              2745 	jp	Z,00113$
      000AF1 FE 13                 2746 	cp	a,#0x13
      000AF3 CArB4r0C              2747 	jp	Z,00117$
      000AF6 FE 21                 2748 	cp	a,#0x21
      000AF8 CArCEr0C              2749 	jp	Z,00118$
      000AFB FE 22                 2750 	cp	a,#0x22
      000AFD CAr9Dr0D              2751 	jp	Z,00122$
      000B00 FE 23                 2752 	cp	a,#0x23
      000B02 CAr50r0E              2753 	jp	Z,00126$
      000B05 FE 31                 2754 	cp	a,#0x31
      000B07 CAr61r0E              2755 	jp	Z,00127$
      000B0A D6 32                 2756 	sub	a, #0x32
      000B0C CAr87r0E              2757 	jp	Z,00128$
      000B0F C3r96r0E              2758 	jp	00131$
                           000B12  2759 	C$player.c$444$4_2$325	= .
                                   2760 	.globl	C$player.c$444$4_2$325
                                   2761 ;src/player.c:444: case RIGHT_UP: // RIGHT - UP
      000B12                       2762 00109$:
                           000B12  2763 	C$player.c$445$4_2$325	= .
                                   2764 	.globl	C$player.c$445$4_2$325
                                   2765 ;src/player.c:445: rx = r->x + r->size_x;
      000B12 F8 02                 2766 	ldhl	sp,#2
      000B14 2A                    2767 	ld	a, (hl+)
      000B15 5F                    2768 	ld	e, a
      000B16 56                    2769 	ld	d, (hl)
      000B17 1A                    2770 	ld	a, (de)
      000B18 F8 09                 2771 	ldhl	sp,#9
      000B1A 5E                    2772 	ld	e, (hl)
      000B1B 23                    2773 	inc	hl
      000B1C 56                    2774 	ld	d, (hl)
      000B1D F5                    2775 	push	af
      000B1E 1A                    2776 	ld	a, (de)
      000B1F F8 06                 2777 	ldhl	sp,	#6
      000B21 77                    2778 	ld	(hl), a
      000B22 F1                    2779 	pop	af
      000B23 86                    2780 	add	a, (hl)
      000B24 23                    2781 	inc	hl
      000B25 77                    2782 	ld	(hl), a
                           000B26  2783 	C$player.c$446$4_2$325	= .
                                   2784 	.globl	C$player.c$446$4_2$325
                                   2785 ;src/player.c:446: ry = r->y - r->size_y;
      000B26 F8 0D                 2786 	ldhl	sp,#13
      000B28 2A                    2787 	ld	a, (hl+)
      000B29 5F                    2788 	ld	e, a
      000B2A 3A                    2789 	ld	a, (hl-)
      000B2B 2B                    2790 	dec	hl
      000B2C 2B                    2791 	dec	hl
      000B2D 57                    2792 	ld	d, a
      000B2E 1A                    2793 	ld	a, (de)
      000B2F 5E                    2794 	ld	e, (hl)
      000B30 23                    2795 	inc	hl
      000B31 56                    2796 	ld	d, (hl)
      000B32 F5                    2797 	push	af
      000B33 1A                    2798 	ld	a, (de)
      000B34 4F                    2799 	ld	c, a
      000B35 F1                    2800 	pop	af
      000B36 91                    2801 	sub	a, c
      000B37 F8 06                 2802 	ldhl	sp,	#6
      000B39 77                    2803 	ld	(hl), a
      000B3A 4E                    2804 	ld	c, (hl)
                           000B3B  2805 	C$player.c$447$4_2$325	= .
                                   2806 	.globl	C$player.c$447$4_2$325
                                   2807 ;src/player.c:447: if((ry-player_y)*(last_x - player_x) < (last_y - player_y)*(rx-player_x)){
      000B3B 06 00                 2808 	ld	b, #0x00
      000B3D FAr0Dr00              2809 	ld	a, (#_player_y)
      000B40 F8 07                 2810 	ldhl	sp,	#7
      000B42 22                    2811 	ld	(hl+), a
      000B43 AF                    2812 	xor	a, a
      000B44 32                    2813 	ld	(hl-), a
      000B45 2A                    2814 	ld	a, (hl+)
      000B46 5F                    2815 	ld	e, a
      000B47 56                    2816 	ld	d, (hl)
      000B48 79                    2817 	ld	a, c
      000B49 93                    2818 	sub	a, e
      000B4A 5F                    2819 	ld	e, a
      000B4B 78                    2820 	ld	a, b
      000B4C 9A                    2821 	sbc	a, d
      000B4D F8 0E                 2822 	ldhl	sp,	#14
      000B4F 32                    2823 	ld	(hl-), a
      000B50 73                    2824 	ld	(hl), e
      000B51 FAr0Er00              2825 	ld	a, (#_last_x)
      000B54 1E 00                 2826 	ld	e, #0x00
      000B56 21r0Cr00              2827 	ld	hl, #_player_x
      000B59 4E                    2828 	ld	c, (hl)
      000B5A 06 00                 2829 	ld	b, #0x00
      000B5C 91                    2830 	sub	a, c
      000B5D 6F                    2831 	ld	l, a
                                   2832 ;	spillPairReg hl
                                   2833 ;	spillPairReg hl
      000B5E 7B                    2834 	ld	a, e
      000B5F 98                    2835 	sbc	a, b
      000B60 67                    2836 	ld	h, a
                                   2837 ;	spillPairReg hl
                                   2838 ;	spillPairReg hl
      000B61 C5                    2839 	push	bc
      000B62 E5                    2840 	push	hl
      000B63 F8 11                 2841 	ldhl	sp,	#17
      000B65 2A                    2842 	ld	a, (hl+)
      000B66 5F                    2843 	ld	e, a
      000B67 56                    2844 	ld	d, (hl)
      000B68 D5                    2845 	push	de
      000B69 CDr00r00              2846 	call	__mulint
      000B6C E8 04                 2847 	add	sp, #4
      000B6E F8 0B                 2848 	ldhl	sp,	#11
      000B70 7B                    2849 	ld	a, e
      000B71 22                    2850 	ld	(hl+), a
      000B72 72                    2851 	ld	(hl), d
      000B73 C1                    2852 	pop	bc
      000B74 FAr0Fr00              2853 	ld	a, (#_last_y)
      000B77 F8 0B                 2854 	ldhl	sp,	#11
      000B79 22                    2855 	ld	(hl+), a
      000B7A AF                    2856 	xor	a, a
      000B7B 32                    2857 	ld	(hl-), a
      000B7C 2A                    2858 	ld	a, (hl+)
      000B7D 5F                    2859 	ld	e, a
      000B7E 56                    2860 	ld	d, (hl)
      000B7F F8 07                 2861 	ldhl	sp,	#7
      000B81 2A                    2862 	ld	a,	(hl+)
      000B82 66                    2863 	ld	h, (hl)
      000B83 6F                    2864 	ld	l, a
      000B84 7B                    2865 	ld	a, e
      000B85 95                    2866 	sub	a, l
      000B86 5F                    2867 	ld	e, a
      000B87 7A                    2868 	ld	a, d
      000B88 9C                    2869 	sbc	a, h
      000B89 F8 0E                 2870 	ldhl	sp,	#14
      000B8B 32                    2871 	ld	(hl-), a
      000B8C 73                    2872 	ld	(hl), e
      000B8D F8 05                 2873 	ldhl	sp,	#5
      000B8F 5E                    2874 	ld	e, (hl)
      000B90 16 00                 2875 	ld	d, #0x00
      000B92 7B                    2876 	ld	a, e
      000B93 91                    2877 	sub	a, c
      000B94 4F                    2878 	ld	c, a
      000B95 7A                    2879 	ld	a, d
      000B96 98                    2880 	sbc	a, b
      000B97 47                    2881 	ld	b, a
      000B98 C5                    2882 	push	bc
      000B99 F8 0F                 2883 	ldhl	sp,	#15
      000B9B 2A                    2884 	ld	a, (hl+)
      000B9C 5F                    2885 	ld	e, a
      000B9D 56                    2886 	ld	d, (hl)
      000B9E D5                    2887 	push	de
      000B9F CDr00r00              2888 	call	__mulint
      000BA2 E8 04                 2889 	add	sp, #4
      000BA4 4B                    2890 	ld	c, e
      000BA5 42                    2891 	ld	b, d
      000BA6 F8 09                 2892 	ldhl	sp,	#9
      000BA8 2A                    2893 	ld	a, (hl+)
      000BA9 91                    2894 	sub	a, c
      000BAA 7E                    2895 	ld	a, (hl)
      000BAB 98                    2896 	sbc	a, b
      000BAC 56                    2897 	ld	d, (hl)
      000BAD 78                    2898 	ld	a, b
      000BAE CB 7F                 2899 	bit	7,a
      000BB0 28 07                 2900 	jr	Z, 00273$
      000BB2 CB 7A                 2901 	bit	7, d
      000BB4 20 08                 2902 	jr	NZ, 00274$
      000BB6 BF                    2903 	cp	a, a
      000BB7 18 05                 2904 	jr	00274$
      000BB9                       2905 00273$:
      000BB9 CB 7A                 2906 	bit	7, d
      000BBB 28 01                 2907 	jr	Z, 00274$
      000BBD 37                    2908 	scf
      000BBE                       2909 00274$:
      000BBE 30 14                 2910 	jr	NC, 00111$
                           000BC0  2911 	C$player.c$449$5_2$326	= .
                                   2912 	.globl	C$player.c$449$5_2$326
                                   2913 ;src/player.c:449: player_x = r->x + r->size_x + 1;
      000BC0 F8 02                 2914 	ldhl	sp,#2
      000BC2 2A                    2915 	ld	a, (hl+)
      000BC3 5F                    2916 	ld	e, a
      000BC4 2A                    2917 	ld	a, (hl+)
      000BC5 57                    2918 	ld	d, a
      000BC6 1A                    2919 	ld	a, (de)
      000BC7 86                    2920 	add	a, (hl)
      000BC8 3C                    2921 	inc	a
      000BC9 EAr0Cr00              2922 	ld	(#_player_x),a
                           000BCC  2923 	C$player.c$450$5_2$326	= .
                                   2924 	.globl	C$player.c$450$5_2$326
                                   2925 ;src/player.c:450: x_speed = 0;
      000BCC 21r07r00              2926 	ld	hl, #_x_speed
      000BCF 36 00                 2927 	ld	(hl), #0x00
      000BD1 C3r96r0E              2928 	jp	00131$
      000BD4                       2929 00111$:
                           000BD4  2930 	C$player.c$453$5_2$327	= .
                                   2931 	.globl	C$player.c$453$5_2$327
                                   2932 ;src/player.c:453: player_y = r->y - r->size_y - 1;
      000BD4 F8 06                 2933 	ldhl	sp,	#6
      000BD6 7E                    2934 	ld	a, (hl)
      000BD7 3D                    2935 	dec	a
      000BD8 EAr0Dr00              2936 	ld	(#_player_y),a
                           000BDB  2937 	C$player.c$454$5_2$327	= .
                                   2938 	.globl	C$player.c$454$5_2$327
                                   2939 ;src/player.c:454: is_grounded = true;
      000BDB 21r09r00              2940 	ld	hl, #_is_grounded
      000BDE 36 01                 2941 	ld	(hl), #0x01
                           000BE0  2942 	C$player.c$455$5_2$327	= .
                                   2943 	.globl	C$player.c$455$5_2$327
                                   2944 ;src/player.c:455: current_coyote_frames = 0;
      000BE0 21r11r00              2945 	ld	hl, #_current_coyote_frames
      000BE3 36 00                 2946 	ld	(hl), #0x00
                           000BE5  2947 	C$player.c$456$5_2$327	= .
                                   2948 	.globl	C$player.c$456$5_2$327
                                   2949 ;src/player.c:456: y_speed = 0;
      000BE5 21r0Br00              2950 	ld	hl, #_y_speed
      000BE8 36 00                 2951 	ld	(hl), #0x00
                           000BEA  2952 	C$player.c$458$4_2$325	= .
                                   2953 	.globl	C$player.c$458$4_2$325
                                   2954 ;src/player.c:458: break;
      000BEA C3r96r0E              2955 	jp	00131$
                           000BED  2956 	C$player.c$460$4_2$325	= .
                                   2957 	.globl	C$player.c$460$4_2$325
                                   2958 ;src/player.c:460: case RIGHT_DOWN: // RIGHT - DOWN
      000BED                       2959 00113$:
                           000BED  2960 	C$player.c$461$4_2$325	= .
                                   2961 	.globl	C$player.c$461$4_2$325
                                   2962 ;src/player.c:461: rx = r->x + r->size_x;
      000BED F8 02                 2963 	ldhl	sp,#2
      000BEF 2A                    2964 	ld	a, (hl+)
      000BF0 5F                    2965 	ld	e, a
      000BF1 56                    2966 	ld	d, (hl)
      000BF2 1A                    2967 	ld	a, (de)
      000BF3 F8 09                 2968 	ldhl	sp,#9
      000BF5 5E                    2969 	ld	e, (hl)
      000BF6 23                    2970 	inc	hl
      000BF7 56                    2971 	ld	d, (hl)
      000BF8 F5                    2972 	push	af
      000BF9 1A                    2973 	ld	a, (de)
      000BFA F8 06                 2974 	ldhl	sp,	#6
      000BFC 77                    2975 	ld	(hl), a
      000BFD F1                    2976 	pop	af
      000BFE 86                    2977 	add	a, (hl)
      000BFF 23                    2978 	inc	hl
      000C00 77                    2979 	ld	(hl), a
                           000C01  2980 	C$player.c$462$4_2$325	= .
                                   2981 	.globl	C$player.c$462$4_2$325
                                   2982 ;src/player.c:462: ry = r->y;
      000C01 F8 0D                 2983 	ldhl	sp,#13
      000C03 2A                    2984 	ld	a, (hl+)
      000C04 5F                    2985 	ld	e, a
      000C05 56                    2986 	ld	d, (hl)
      000C06 1A                    2987 	ld	a, (de)
      000C07 F8 06                 2988 	ldhl	sp,	#6
      000C09 77                    2989 	ld	(hl), a
      000C0A 4E                    2990 	ld	c, (hl)
                           000C0B  2991 	C$player.c$463$4_2$325	= .
                                   2992 	.globl	C$player.c$463$4_2$325
                                   2993 ;src/player.c:463: if((ry-player_y)*(last_x - player_x) > (last_y - player_y)*(rx-player_x)){
      000C0B 06 00                 2994 	ld	b, #0x00
      000C0D FAr0Dr00              2995 	ld	a, (#_player_y)
      000C10 F8 07                 2996 	ldhl	sp,	#7
      000C12 22                    2997 	ld	(hl+), a
      000C13 AF                    2998 	xor	a, a
      000C14 32                    2999 	ld	(hl-), a
      000C15 2A                    3000 	ld	a, (hl+)
      000C16 5F                    3001 	ld	e, a
      000C17 56                    3002 	ld	d, (hl)
      000C18 79                    3003 	ld	a, c
      000C19 93                    3004 	sub	a, e
      000C1A 5F                    3005 	ld	e, a
      000C1B 78                    3006 	ld	a, b
      000C1C 9A                    3007 	sbc	a, d
      000C1D F8 0E                 3008 	ldhl	sp,	#14
      000C1F 32                    3009 	ld	(hl-), a
      000C20 73                    3010 	ld	(hl), e
      000C21 FAr0Er00              3011 	ld	a, (#_last_x)
      000C24 1E 00                 3012 	ld	e, #0x00
      000C26 21r0Cr00              3013 	ld	hl, #_player_x
      000C29 4E                    3014 	ld	c, (hl)
      000C2A 06 00                 3015 	ld	b, #0x00
      000C2C 91                    3016 	sub	a, c
      000C2D 6F                    3017 	ld	l, a
                                   3018 ;	spillPairReg hl
                                   3019 ;	spillPairReg hl
      000C2E 7B                    3020 	ld	a, e
      000C2F 98                    3021 	sbc	a, b
      000C30 67                    3022 	ld	h, a
                                   3023 ;	spillPairReg hl
                                   3024 ;	spillPairReg hl
      000C31 C5                    3025 	push	bc
      000C32 E5                    3026 	push	hl
      000C33 F8 11                 3027 	ldhl	sp,	#17
      000C35 2A                    3028 	ld	a, (hl+)
      000C36 5F                    3029 	ld	e, a
      000C37 56                    3030 	ld	d, (hl)
      000C38 D5                    3031 	push	de
      000C39 CDr00r00              3032 	call	__mulint
      000C3C E8 04                 3033 	add	sp, #4
      000C3E F8 0B                 3034 	ldhl	sp,	#11
      000C40 7B                    3035 	ld	a, e
      000C41 22                    3036 	ld	(hl+), a
      000C42 72                    3037 	ld	(hl), d
      000C43 C1                    3038 	pop	bc
      000C44 FAr0Fr00              3039 	ld	a, (#_last_y)
      000C47 F8 0B                 3040 	ldhl	sp,	#11
      000C49 22                    3041 	ld	(hl+), a
      000C4A AF                    3042 	xor	a, a
      000C4B 32                    3043 	ld	(hl-), a
      000C4C 2A                    3044 	ld	a, (hl+)
      000C4D 5F                    3045 	ld	e, a
      000C4E 56                    3046 	ld	d, (hl)
      000C4F F8 07                 3047 	ldhl	sp,	#7
      000C51 2A                    3048 	ld	a,	(hl+)
      000C52 66                    3049 	ld	h, (hl)
      000C53 6F                    3050 	ld	l, a
      000C54 7B                    3051 	ld	a, e
      000C55 95                    3052 	sub	a, l
      000C56 5F                    3053 	ld	e, a
      000C57 7A                    3054 	ld	a, d
      000C58 9C                    3055 	sbc	a, h
      000C59 F8 0E                 3056 	ldhl	sp,	#14
      000C5B 32                    3057 	ld	(hl-), a
      000C5C 73                    3058 	ld	(hl), e
      000C5D F8 05                 3059 	ldhl	sp,	#5
      000C5F 5E                    3060 	ld	e, (hl)
      000C60 16 00                 3061 	ld	d, #0x00
      000C62 7B                    3062 	ld	a, e
      000C63 91                    3063 	sub	a, c
      000C64 4F                    3064 	ld	c, a
      000C65 7A                    3065 	ld	a, d
      000C66 98                    3066 	sbc	a, b
      000C67 47                    3067 	ld	b, a
      000C68 C5                    3068 	push	bc
      000C69 F8 0F                 3069 	ldhl	sp,	#15
      000C6B 2A                    3070 	ld	a, (hl+)
      000C6C 5F                    3071 	ld	e, a
      000C6D 56                    3072 	ld	d, (hl)
      000C6E D5                    3073 	push	de
      000C6F CDr00r00              3074 	call	__mulint
      000C72 E8 04                 3075 	add	sp, #4
      000C74 4B                    3076 	ld	c, e
      000C75 42                    3077 	ld	b, d
      000C76 F8 09                 3078 	ldhl	sp,	#9
      000C78 79                    3079 	ld	a, c
      000C79 96                    3080 	sub	a, (hl)
      000C7A 23                    3081 	inc	hl
      000C7B 78                    3082 	ld	a, b
      000C7C 9E                    3083 	sbc	a, (hl)
      000C7D 78                    3084 	ld	a, b
      000C7E 57                    3085 	ld	d, a
      000C7F CB 7E                 3086 	bit	7, (hl)
      000C81 28 07                 3087 	jr	Z, 00275$
      000C83 CB 7A                 3088 	bit	7, d
      000C85 20 08                 3089 	jr	NZ, 00276$
      000C87 BF                    3090 	cp	a, a
      000C88 18 05                 3091 	jr	00276$
      000C8A                       3092 00275$:
      000C8A CB 7A                 3093 	bit	7, d
      000C8C 28 01                 3094 	jr	Z, 00276$
      000C8E 37                    3095 	scf
      000C8F                       3096 00276$:
      000C8F 30 14                 3097 	jr	NC, 00115$
                           000C91  3098 	C$player.c$465$5_2$328	= .
                                   3099 	.globl	C$player.c$465$5_2$328
                                   3100 ;src/player.c:465: player_x = r->x + r->size_x + 1;
      000C91 F8 02                 3101 	ldhl	sp,#2
      000C93 2A                    3102 	ld	a, (hl+)
      000C94 5F                    3103 	ld	e, a
      000C95 2A                    3104 	ld	a, (hl+)
      000C96 57                    3105 	ld	d, a
      000C97 1A                    3106 	ld	a, (de)
      000C98 86                    3107 	add	a, (hl)
      000C99 3C                    3108 	inc	a
      000C9A EAr0Cr00              3109 	ld	(#_player_x),a
                           000C9D  3110 	C$player.c$466$5_2$328	= .
                                   3111 	.globl	C$player.c$466$5_2$328
                                   3112 ;src/player.c:466: x_speed = 0;
      000C9D 21r07r00              3113 	ld	hl, #_x_speed
      000CA0 36 00                 3114 	ld	(hl), #0x00
      000CA2 C3r96r0E              3115 	jp	00131$
      000CA5                       3116 00115$:
                           000CA5  3117 	C$player.c$469$5_2$329	= .
                                   3118 	.globl	C$player.c$469$5_2$329
                                   3119 ;src/player.c:469: player_y = r->y + 1;
      000CA5 F8 06                 3120 	ldhl	sp,	#6
      000CA7 7E                    3121 	ld	a, (hl)
      000CA8 3C                    3122 	inc	a
      000CA9 EAr0Dr00              3123 	ld	(#_player_y),a
                           000CAC  3124 	C$player.c$470$5_2$329	= .
                                   3125 	.globl	C$player.c$470$5_2$329
                                   3126 ;src/player.c:470: y_speed = 0;
      000CAC 21r0Br00              3127 	ld	hl, #_y_speed
      000CAF 36 00                 3128 	ld	(hl), #0x00
                           000CB1  3129 	C$player.c$473$4_2$325	= .
                                   3130 	.globl	C$player.c$473$4_2$325
                                   3131 ;src/player.c:473: break;
      000CB1 C3r96r0E              3132 	jp	00131$
                           000CB4  3133 	C$player.c$475$4_2$325	= .
                                   3134 	.globl	C$player.c$475$4_2$325
                                   3135 ;src/player.c:475: case RIGHT_CENTER: // RIGHT - CENTER
      000CB4                       3136 00117$:
                           000CB4  3137 	C$player.c$476$4_2$325	= .
                                   3138 	.globl	C$player.c$476$4_2$325
                                   3139 ;src/player.c:476: player_x = r->x + r->size_x + 1;
      000CB4 F8 02                 3140 	ldhl	sp,#2
      000CB6 2A                    3141 	ld	a, (hl+)
      000CB7 5F                    3142 	ld	e, a
      000CB8 56                    3143 	ld	d, (hl)
      000CB9 1A                    3144 	ld	a, (de)
      000CBA 4F                    3145 	ld	c, a
      000CBB F8 09                 3146 	ldhl	sp,#9
      000CBD 2A                    3147 	ld	a, (hl+)
      000CBE 5F                    3148 	ld	e, a
      000CBF 56                    3149 	ld	d, (hl)
      000CC0 1A                    3150 	ld	a, (de)
      000CC1 81                    3151 	add	a, c
      000CC2 3C                    3152 	inc	a
      000CC3 EAr0Cr00              3153 	ld	(#_player_x),a
                           000CC6  3154 	C$player.c$477$4_2$325	= .
                                   3155 	.globl	C$player.c$477$4_2$325
                                   3156 ;src/player.c:477: x_speed = 0;
      000CC6 21r07r00              3157 	ld	hl, #_x_speed
      000CC9 36 00                 3158 	ld	(hl), #0x00
                           000CCB  3159 	C$player.c$478$4_2$325	= .
                                   3160 	.globl	C$player.c$478$4_2$325
                                   3161 ;src/player.c:478: break;
      000CCB C3r96r0E              3162 	jp	00131$
                           000CCE  3163 	C$player.c$480$4_2$325	= .
                                   3164 	.globl	C$player.c$480$4_2$325
                                   3165 ;src/player.c:480: case LEFT_UP: // LEFT - UP
      000CCE                       3166 00118$:
                           000CCE  3167 	C$player.c$481$4_2$325	= .
                                   3168 	.globl	C$player.c$481$4_2$325
                                   3169 ;src/player.c:481: rx = r->x;
      000CCE F8 02                 3170 	ldhl	sp,#2
      000CD0 2A                    3171 	ld	a, (hl+)
      000CD1 5F                    3172 	ld	e, a
      000CD2 56                    3173 	ld	d, (hl)
      000CD3 1A                    3174 	ld	a, (de)
      000CD4 F8 0A                 3175 	ldhl	sp,	#10
      000CD6 77                    3176 	ld	(hl), a
                           000CD7  3177 	C$player.c$482$4_2$325	= .
                                   3178 	.globl	C$player.c$482$4_2$325
                                   3179 ;src/player.c:482: ry = r->y - r->size_y;
      000CD7 F8 0D                 3180 	ldhl	sp,#13
      000CD9 2A                    3181 	ld	a, (hl+)
      000CDA 5F                    3182 	ld	e, a
      000CDB 3A                    3183 	ld	a, (hl-)
      000CDC 2B                    3184 	dec	hl
      000CDD 2B                    3185 	dec	hl
      000CDE 57                    3186 	ld	d, a
      000CDF 1A                    3187 	ld	a, (de)
      000CE0 5E                    3188 	ld	e, (hl)
      000CE1 23                    3189 	inc	hl
      000CE2 56                    3190 	ld	d, (hl)
      000CE3 F5                    3191 	push	af
      000CE4 1A                    3192 	ld	a, (de)
      000CE5 4F                    3193 	ld	c, a
      000CE6 F1                    3194 	pop	af
      000CE7 91                    3195 	sub	a, c
      000CE8 F8 05                 3196 	ldhl	sp,	#5
      000CEA 77                    3197 	ld	(hl), a
      000CEB 4E                    3198 	ld	c, (hl)
                           000CEC  3199 	C$player.c$483$4_2$325	= .
                                   3200 	.globl	C$player.c$483$4_2$325
                                   3201 ;src/player.c:483: if((ry-player_y)*(last_x - player_x) > (last_y - player_y)*(rx-player_x)){
      000CEC 06 00                 3202 	ld	b, #0x00
      000CEE FAr0Dr00              3203 	ld	a, (#_player_y)
      000CF1 F8 06                 3204 	ldhl	sp,	#6
      000CF3 22                    3205 	ld	(hl+), a
      000CF4 AF                    3206 	xor	a, a
      000CF5 32                    3207 	ld	(hl-), a
      000CF6 2A                    3208 	ld	a, (hl+)
      000CF7 5F                    3209 	ld	e, a
      000CF8 56                    3210 	ld	d, (hl)
      000CF9 79                    3211 	ld	a, c
      000CFA 93                    3212 	sub	a, e
      000CFB 5F                    3213 	ld	e, a
      000CFC 78                    3214 	ld	a, b
      000CFD 9A                    3215 	sbc	a, d
      000CFE F8 0E                 3216 	ldhl	sp,	#14
      000D00 32                    3217 	ld	(hl-), a
      000D01 73                    3218 	ld	(hl), e
      000D02 FAr0Er00              3219 	ld	a, (#_last_x)
      000D05 1E 00                 3220 	ld	e, #0x00
      000D07 21r0Cr00              3221 	ld	hl, #_player_x
      000D0A 4E                    3222 	ld	c, (hl)
      000D0B 06 00                 3223 	ld	b, #0x00
      000D0D 91                    3224 	sub	a, c
      000D0E 6F                    3225 	ld	l, a
                                   3226 ;	spillPairReg hl
                                   3227 ;	spillPairReg hl
      000D0F 7B                    3228 	ld	a, e
      000D10 98                    3229 	sbc	a, b
      000D11 67                    3230 	ld	h, a
                                   3231 ;	spillPairReg hl
                                   3232 ;	spillPairReg hl
      000D12 C5                    3233 	push	bc
      000D13 E5                    3234 	push	hl
      000D14 F8 11                 3235 	ldhl	sp,	#17
      000D16 2A                    3236 	ld	a, (hl+)
      000D17 5F                    3237 	ld	e, a
      000D18 56                    3238 	ld	d, (hl)
      000D19 D5                    3239 	push	de
      000D1A CDr00r00              3240 	call	__mulint
      000D1D E8 04                 3241 	add	sp, #4
      000D1F F8 0A                 3242 	ldhl	sp,	#10
      000D21 7B                    3243 	ld	a, e
      000D22 22                    3244 	ld	(hl+), a
      000D23 72                    3245 	ld	(hl), d
      000D24 C1                    3246 	pop	bc
      000D25 FAr0Fr00              3247 	ld	a, (#_last_y)
      000D28 F8 0B                 3248 	ldhl	sp,	#11
      000D2A 22                    3249 	ld	(hl+), a
      000D2B AF                    3250 	xor	a, a
      000D2C 32                    3251 	ld	(hl-), a
      000D2D 2A                    3252 	ld	a, (hl+)
      000D2E 5F                    3253 	ld	e, a
      000D2F 56                    3254 	ld	d, (hl)
      000D30 F8 06                 3255 	ldhl	sp,	#6
      000D32 2A                    3256 	ld	a,	(hl+)
      000D33 66                    3257 	ld	h, (hl)
      000D34 6F                    3258 	ld	l, a
      000D35 7B                    3259 	ld	a, e
      000D36 95                    3260 	sub	a, l
      000D37 5F                    3261 	ld	e, a
      000D38 7A                    3262 	ld	a, d
      000D39 9C                    3263 	sbc	a, h
      000D3A F8 0E                 3264 	ldhl	sp,	#14
      000D3C 32                    3265 	ld	(hl-), a
      000D3D 73                    3266 	ld	(hl), e
      000D3E F8 0A                 3267 	ldhl	sp,	#10
      000D40 5E                    3268 	ld	e, (hl)
      000D41 16 00                 3269 	ld	d, #0x00
      000D43 7B                    3270 	ld	a, e
      000D44 91                    3271 	sub	a, c
      000D45 4F                    3272 	ld	c, a
      000D46 7A                    3273 	ld	a, d
      000D47 98                    3274 	sbc	a, b
      000D48 47                    3275 	ld	b, a
      000D49 C5                    3276 	push	bc
      000D4A F8 0F                 3277 	ldhl	sp,	#15
      000D4C 2A                    3278 	ld	a, (hl+)
      000D4D 5F                    3279 	ld	e, a
      000D4E 56                    3280 	ld	d, (hl)
      000D4F D5                    3281 	push	de
      000D50 CDr00r00              3282 	call	__mulint
      000D53 E8 04                 3283 	add	sp, #4
      000D55 4B                    3284 	ld	c, e
      000D56 42                    3285 	ld	b, d
      000D57 F8 08                 3286 	ldhl	sp,	#8
      000D59 79                    3287 	ld	a, c
      000D5A 96                    3288 	sub	a, (hl)
      000D5B 23                    3289 	inc	hl
      000D5C 78                    3290 	ld	a, b
      000D5D 9E                    3291 	sbc	a, (hl)
      000D5E 78                    3292 	ld	a, b
      000D5F 57                    3293 	ld	d, a
      000D60 CB 7E                 3294 	bit	7, (hl)
      000D62 28 07                 3295 	jr	Z, 00277$
      000D64 CB 7A                 3296 	bit	7, d
      000D66 20 08                 3297 	jr	NZ, 00278$
      000D68 BF                    3298 	cp	a, a
      000D69 18 05                 3299 	jr	00278$
      000D6B                       3300 00277$:
      000D6B CB 7A                 3301 	bit	7, d
      000D6D 28 01                 3302 	jr	Z, 00278$
      000D6F 37                    3303 	scf
      000D70                       3304 00278$:
      000D70 30 12                 3305 	jr	NC, 00120$
                           000D72  3306 	C$player.c$485$5_2$330	= .
                                   3307 	.globl	C$player.c$485$5_2$330
                                   3308 ;src/player.c:485: player_x = r->x - 1;
      000D72 F8 02                 3309 	ldhl	sp,#2
      000D74 2A                    3310 	ld	a, (hl+)
      000D75 5F                    3311 	ld	e, a
      000D76 56                    3312 	ld	d, (hl)
      000D77 1A                    3313 	ld	a, (de)
      000D78 3D                    3314 	dec	a
      000D79 EAr0Cr00              3315 	ld	(#_player_x),a
                           000D7C  3316 	C$player.c$486$5_2$330	= .
                                   3317 	.globl	C$player.c$486$5_2$330
                                   3318 ;src/player.c:486: x_speed = 0;
      000D7C 21r07r00              3319 	ld	hl, #_x_speed
      000D7F 36 00                 3320 	ld	(hl), #0x00
      000D81 C3r96r0E              3321 	jp	00131$
      000D84                       3322 00120$:
                           000D84  3323 	C$player.c$489$5_2$331	= .
                                   3324 	.globl	C$player.c$489$5_2$331
                                   3325 ;src/player.c:489: player_y = r->y - r->size_y - 1;
      000D84 F8 05                 3326 	ldhl	sp,	#5
      000D86 7E                    3327 	ld	a, (hl)
      000D87 3D                    3328 	dec	a
      000D88 EAr0Dr00              3329 	ld	(#_player_y),a
                           000D8B  3330 	C$player.c$490$5_2$331	= .
                                   3331 	.globl	C$player.c$490$5_2$331
                                   3332 ;src/player.c:490: is_grounded = true;
      000D8B 21r09r00              3333 	ld	hl, #_is_grounded
      000D8E 36 01                 3334 	ld	(hl), #0x01
                           000D90  3335 	C$player.c$491$5_2$331	= .
                                   3336 	.globl	C$player.c$491$5_2$331
                                   3337 ;src/player.c:491: current_coyote_frames = 0;
      000D90 21r11r00              3338 	ld	hl, #_current_coyote_frames
      000D93 36 00                 3339 	ld	(hl), #0x00
                           000D95  3340 	C$player.c$492$5_2$331	= .
                                   3341 	.globl	C$player.c$492$5_2$331
                                   3342 ;src/player.c:492: y_speed = 0;
      000D95 21r0Br00              3343 	ld	hl, #_y_speed
      000D98 36 00                 3344 	ld	(hl), #0x00
                           000D9A  3345 	C$player.c$494$4_2$325	= .
                                   3346 	.globl	C$player.c$494$4_2$325
                                   3347 ;src/player.c:494: break;
      000D9A C3r96r0E              3348 	jp	00131$
                           000D9D  3349 	C$player.c$496$4_2$325	= .
                                   3350 	.globl	C$player.c$496$4_2$325
                                   3351 ;src/player.c:496: case LEFT_DOWN: // LEFT - DOWN
      000D9D                       3352 00122$:
                           000D9D  3353 	C$player.c$497$4_2$325	= .
                                   3354 	.globl	C$player.c$497$4_2$325
                                   3355 ;src/player.c:497: rx = r->x;
      000D9D F8 02                 3356 	ldhl	sp,#2
      000D9F 2A                    3357 	ld	a, (hl+)
      000DA0 5F                    3358 	ld	e, a
      000DA1 56                    3359 	ld	d, (hl)
      000DA2 1A                    3360 	ld	a, (de)
      000DA3 F8 0C                 3361 	ldhl	sp,	#12
                           000DA5  3362 	C$player.c$498$4_2$325	= .
                                   3363 	.globl	C$player.c$498$4_2$325
                                   3364 ;src/player.c:498: ry = r->y;
      000DA5 22                    3365 	ld	(hl+), a
      000DA6 2A                    3366 	ld	a, (hl+)
      000DA7 5F                    3367 	ld	e, a
      000DA8 56                    3368 	ld	d, (hl)
      000DA9 1A                    3369 	ld	a, (de)
      000DAA 77                    3370 	ld	(hl), a
      000DAB 4E                    3371 	ld	c, (hl)
                           000DAC  3372 	C$player.c$499$4_2$325	= .
                                   3373 	.globl	C$player.c$499$4_2$325
                                   3374 ;src/player.c:499: if((ry-player_y)*(last_x - player_x) < (last_y - player_y)*(rx-player_x)){
      000DAC 06 00                 3375 	ld	b, #0x00
      000DAE FAr0Dr00              3376 	ld	a, (#_player_y)
      000DB1 F8 04                 3377 	ldhl	sp,	#4
      000DB3 22                    3378 	ld	(hl+), a
      000DB4 AF                    3379 	xor	a, a
      000DB5 32                    3380 	ld	(hl-), a
      000DB6 2A                    3381 	ld	a, (hl+)
      000DB7 5F                    3382 	ld	e, a
      000DB8 56                    3383 	ld	d, (hl)
      000DB9 79                    3384 	ld	a, c
      000DBA 93                    3385 	sub	a, e
      000DBB 5F                    3386 	ld	e, a
      000DBC 78                    3387 	ld	a, b
      000DBD 9A                    3388 	sbc	a, d
      000DBE F8 0B                 3389 	ldhl	sp,	#11
      000DC0 32                    3390 	ld	(hl-), a
      000DC1 73                    3391 	ld	(hl), e
      000DC2 FAr0Er00              3392 	ld	a, (#_last_x)
      000DC5 1E 00                 3393 	ld	e, #0x00
      000DC7 21r0Cr00              3394 	ld	hl, #_player_x
      000DCA 4E                    3395 	ld	c, (hl)
      000DCB 06 00                 3396 	ld	b, #0x00
      000DCD 91                    3397 	sub	a, c
      000DCE 6F                    3398 	ld	l, a
                                   3399 ;	spillPairReg hl
                                   3400 ;	spillPairReg hl
      000DCF 7B                    3401 	ld	a, e
      000DD0 98                    3402 	sbc	a, b
      000DD1 67                    3403 	ld	h, a
                                   3404 ;	spillPairReg hl
                                   3405 ;	spillPairReg hl
      000DD2 C5                    3406 	push	bc
      000DD3 E5                    3407 	push	hl
      000DD4 F8 0E                 3408 	ldhl	sp,	#14
      000DD6 2A                    3409 	ld	a, (hl+)
      000DD7 5F                    3410 	ld	e, a
      000DD8 56                    3411 	ld	d, (hl)
      000DD9 D5                    3412 	push	de
      000DDA CDr00r00              3413 	call	__mulint
      000DDD E8 04                 3414 	add	sp, #4
      000DDF F8 08                 3415 	ldhl	sp,	#8
      000DE1 7B                    3416 	ld	a, e
      000DE2 22                    3417 	ld	(hl+), a
      000DE3 72                    3418 	ld	(hl), d
      000DE4 C1                    3419 	pop	bc
      000DE5 FAr0Fr00              3420 	ld	a, (#_last_y)
      000DE8 F8 08                 3421 	ldhl	sp,	#8
      000DEA 22                    3422 	ld	(hl+), a
      000DEB AF                    3423 	xor	a, a
      000DEC 32                    3424 	ld	(hl-), a
      000DED 2A                    3425 	ld	a, (hl+)
      000DEE 5F                    3426 	ld	e, a
      000DEF 56                    3427 	ld	d, (hl)
      000DF0 F8 04                 3428 	ldhl	sp,	#4
      000DF2 2A                    3429 	ld	a,	(hl+)
      000DF3 66                    3430 	ld	h, (hl)
      000DF4 6F                    3431 	ld	l, a
      000DF5 7B                    3432 	ld	a, e
      000DF6 95                    3433 	sub	a, l
      000DF7 5F                    3434 	ld	e, a
      000DF8 7A                    3435 	ld	a, d
      000DF9 9C                    3436 	sbc	a, h
      000DFA F8 0B                 3437 	ldhl	sp,	#11
      000DFC 32                    3438 	ld	(hl-), a
      000DFD 7B                    3439 	ld	a, e
      000DFE 22                    3440 	ld	(hl+), a
      000DFF 23                    3441 	inc	hl
      000E00 3A                    3442 	ld	a, (hl-)
      000E01 2B                    3443 	dec	hl
      000E02 5F                    3444 	ld	e, a
      000E03 16 00                 3445 	ld	d, #0x00
      000E05 7B                    3446 	ld	a, e
      000E06 91                    3447 	sub	a, c
      000E07 4F                    3448 	ld	c, a
      000E08 7A                    3449 	ld	a, d
      000E09 98                    3450 	sbc	a, b
      000E0A 47                    3451 	ld	b, a
      000E0B C5                    3452 	push	bc
      000E0C 2A                    3453 	ld	a, (hl+)
      000E0D 5F                    3454 	ld	e, a
      000E0E 56                    3455 	ld	d, (hl)
      000E0F D5                    3456 	push	de
      000E10 CDr00r00              3457 	call	__mulint
      000E13 E8 04                 3458 	add	sp, #4
      000E15 4B                    3459 	ld	c, e
      000E16 42                    3460 	ld	b, d
      000E17 F8 06                 3461 	ldhl	sp,	#6
      000E19 2A                    3462 	ld	a, (hl+)
      000E1A 91                    3463 	sub	a, c
      000E1B 7E                    3464 	ld	a, (hl)
      000E1C 98                    3465 	sbc	a, b
      000E1D 56                    3466 	ld	d, (hl)
      000E1E 78                    3467 	ld	a, b
      000E1F CB 7F                 3468 	bit	7,a
      000E21 28 07                 3469 	jr	Z, 00279$
      000E23 CB 7A                 3470 	bit	7, d
      000E25 20 08                 3471 	jr	NZ, 00280$
      000E27 BF                    3472 	cp	a, a
      000E28 18 05                 3473 	jr	00280$
      000E2A                       3474 00279$:
      000E2A CB 7A                 3475 	bit	7, d
      000E2C 28 01                 3476 	jr	Z, 00280$
      000E2E 37                    3477 	scf
      000E2F                       3478 00280$:
      000E2F 30 11                 3479 	jr	NC, 00124$
                           000E31  3480 	C$player.c$501$5_2$332	= .
                                   3481 	.globl	C$player.c$501$5_2$332
                                   3482 ;src/player.c:501: player_x = r->x - 1;
      000E31 F8 02                 3483 	ldhl	sp,#2
      000E33 2A                    3484 	ld	a, (hl+)
      000E34 5F                    3485 	ld	e, a
      000E35 56                    3486 	ld	d, (hl)
      000E36 1A                    3487 	ld	a, (de)
      000E37 3D                    3488 	dec	a
      000E38 EAr0Cr00              3489 	ld	(#_player_x),a
                           000E3B  3490 	C$player.c$502$5_2$332	= .
                                   3491 	.globl	C$player.c$502$5_2$332
                                   3492 ;src/player.c:502: x_speed = 0;
      000E3B 21r07r00              3493 	ld	hl, #_x_speed
      000E3E 36 00                 3494 	ld	(hl), #0x00
      000E40 18 54                 3495 	jr	00131$
      000E42                       3496 00124$:
                           000E42  3497 	C$player.c$505$5_2$333	= .
                                   3498 	.globl	C$player.c$505$5_2$333
                                   3499 ;src/player.c:505: player_y = r->y + 1;
      000E42 F8 0E                 3500 	ldhl	sp,	#14
      000E44 7E                    3501 	ld	a, (hl)
      000E45 3C                    3502 	inc	a
      000E46 EAr0Dr00              3503 	ld	(#_player_y),a
                           000E49  3504 	C$player.c$506$5_2$333	= .
                                   3505 	.globl	C$player.c$506$5_2$333
                                   3506 ;src/player.c:506: y_speed = 0;
      000E49 21r0Br00              3507 	ld	hl, #_y_speed
      000E4C 36 00                 3508 	ld	(hl), #0x00
                           000E4E  3509 	C$player.c$509$4_2$325	= .
                                   3510 	.globl	C$player.c$509$4_2$325
                                   3511 ;src/player.c:509: break;
      000E4E 18 46                 3512 	jr	00131$
                           000E50  3513 	C$player.c$511$4_2$325	= .
                                   3514 	.globl	C$player.c$511$4_2$325
                                   3515 ;src/player.c:511: case LEFT_CENTER: // LEFT - CENTER
      000E50                       3516 00126$:
                           000E50  3517 	C$player.c$512$4_2$325	= .
                                   3518 	.globl	C$player.c$512$4_2$325
                                   3519 ;src/player.c:512: player_x = r->x - 1;
      000E50 F8 02                 3520 	ldhl	sp,#2
      000E52 2A                    3521 	ld	a, (hl+)
      000E53 5F                    3522 	ld	e, a
      000E54 56                    3523 	ld	d, (hl)
      000E55 1A                    3524 	ld	a, (de)
      000E56 3D                    3525 	dec	a
      000E57 EAr0Cr00              3526 	ld	(#_player_x),a
                           000E5A  3527 	C$player.c$513$4_2$325	= .
                                   3528 	.globl	C$player.c$513$4_2$325
                                   3529 ;src/player.c:513: x_speed = 0;
      000E5A 21r07r00              3530 	ld	hl, #_x_speed
      000E5D 36 00                 3531 	ld	(hl), #0x00
                           000E5F  3532 	C$player.c$514$4_2$325	= .
                                   3533 	.globl	C$player.c$514$4_2$325
                                   3534 ;src/player.c:514: break;
      000E5F 18 35                 3535 	jr	00131$
                           000E61  3536 	C$player.c$516$4_2$325	= .
                                   3537 	.globl	C$player.c$516$4_2$325
                                   3538 ;src/player.c:516: case CENTER_UP: // CENTER - UP
      000E61                       3539 00127$:
                           000E61  3540 	C$player.c$517$4_2$325	= .
                                   3541 	.globl	C$player.c$517$4_2$325
                                   3542 ;src/player.c:517: player_y = r->y - r->size_y - 1;
      000E61 F8 0D                 3543 	ldhl	sp,#13
      000E63 2A                    3544 	ld	a, (hl+)
      000E64 5F                    3545 	ld	e, a
      000E65 3A                    3546 	ld	a, (hl-)
      000E66 2B                    3547 	dec	hl
      000E67 2B                    3548 	dec	hl
      000E68 57                    3549 	ld	d, a
      000E69 1A                    3550 	ld	a, (de)
      000E6A 5E                    3551 	ld	e, (hl)
      000E6B 23                    3552 	inc	hl
      000E6C 56                    3553 	ld	d, (hl)
      000E6D F5                    3554 	push	af
      000E6E 1A                    3555 	ld	a, (de)
      000E6F 4F                    3556 	ld	c, a
      000E70 F1                    3557 	pop	af
      000E71 91                    3558 	sub	a, c
      000E72 3D                    3559 	dec	a
      000E73 EAr0Dr00              3560 	ld	(#_player_y),a
                           000E76  3561 	C$player.c$518$4_2$325	= .
                                   3562 	.globl	C$player.c$518$4_2$325
                                   3563 ;src/player.c:518: is_grounded = true;
      000E76 21r09r00              3564 	ld	hl, #_is_grounded
      000E79 36 01                 3565 	ld	(hl), #0x01
                           000E7B  3566 	C$player.c$519$4_2$325	= .
                                   3567 	.globl	C$player.c$519$4_2$325
                                   3568 ;src/player.c:519: current_coyote_frames = 0;
      000E7B 21r11r00              3569 	ld	hl, #_current_coyote_frames
      000E7E 36 00                 3570 	ld	(hl), #0x00
                           000E80  3571 	C$player.c$520$4_2$325	= .
                                   3572 	.globl	C$player.c$520$4_2$325
                                   3573 ;src/player.c:520: y_speed = 0;
      000E80 21r0Br00              3574 	ld	hl, #_y_speed
      000E83 36 00                 3575 	ld	(hl), #0x00
                           000E85  3576 	C$player.c$521$4_2$325	= .
                                   3577 	.globl	C$player.c$521$4_2$325
                                   3578 ;src/player.c:521: break;
      000E85 18 0F                 3579 	jr	00131$
                           000E87  3580 	C$player.c$523$4_2$325	= .
                                   3581 	.globl	C$player.c$523$4_2$325
                                   3582 ;src/player.c:523: case CENTER_DOWN: // CENTER - DOWN
      000E87                       3583 00128$:
                           000E87  3584 	C$player.c$524$4_2$325	= .
                                   3585 	.globl	C$player.c$524$4_2$325
                                   3586 ;src/player.c:524: player_y = r->y + 1;
      000E87 F8 0D                 3587 	ldhl	sp,#13
      000E89 2A                    3588 	ld	a, (hl+)
      000E8A 5F                    3589 	ld	e, a
      000E8B 56                    3590 	ld	d, (hl)
      000E8C 1A                    3591 	ld	a, (de)
      000E8D 3C                    3592 	inc	a
      000E8E EAr0Dr00              3593 	ld	(#_player_y),a
                           000E91  3594 	C$player.c$525$4_2$325	= .
                                   3595 	.globl	C$player.c$525$4_2$325
                                   3596 ;src/player.c:525: y_speed = 0;
      000E91 21r0Br00              3597 	ld	hl, #_y_speed
      000E94 36 00                 3598 	ld	(hl), #0x00
                           000E96  3599 	C$player.c$531$2_0$319	= .
                                   3600 	.globl	C$player.c$531$2_0$319
                                   3601 ;src/player.c:531: }
      000E96                       3602 00131$:
                           000E96  3603 	C$player.c$420$2_0$319	= .
                                   3604 	.globl	C$player.c$420$2_0$319
                                   3605 ;src/player.c:420: for(i=0; i<8; i++){
      000E96 21r04r00              3606 	ld	hl, #_i
      000E99 34                    3607 	inc	(hl)
      000E9A 7E                    3608 	ld	a, (hl)
      000E9B D6 08                 3609 	sub	a, #0x08
      000E9D DAr06r09              3610 	jp	C, 00133$
                           000EA0  3611 	C$player.c$533$2_0$319	= .
                                   3612 	.globl	C$player.c$533$2_0$319
                                   3613 ;src/player.c:533: }
      000EA0 E8 0F                 3614 	add	sp, #15
                           000EA2  3615 	C$player.c$533$2_0$319	= .
                                   3616 	.globl	C$player.c$533$2_0$319
                           000EA2  3617 	XFplayer$check_collisions$0$0	= .
                                   3618 	.globl	XFplayer$check_collisions$0$0
      000EA2 C9                    3619 	ret
                           000EA3  3620 	Fplayer$update_score$0$0	= .
                                   3621 	.globl	Fplayer$update_score$0$0
                           000EA3  3622 	C$player.c$535$2_0$335	= .
                                   3623 	.globl	C$player.c$535$2_0$335
                                   3624 ;src/player.c:535: static void update_score(void){
                                   3625 ;	---------------------------------
                                   3626 ; Function update_score
                                   3627 ; ---------------------------------
      000EA3                       3628 _update_score:
      000EA3 3B                    3629 	dec	sp
      000EA4 3B                    3630 	dec	sp
                           000EA5  3631 	C$player.c$537$1_0$335	= .
                                   3632 	.globl	C$player.c$537$1_0$335
                                   3633 ;src/player.c:537: if((PREV_PLAYER_FLOOR != PLAYER_FLOOR) && PLAYER_FLOOR == ((highest_visited_floor - 1) & 0x03)){
      000EA5 FAr0Fr00              3634 	ld	a, (#_last_y)
      000EA8 07                    3635 	rlca
      000EA9 07                    3636 	rlca
      000EAA E6 03                 3637 	and	a, #0x03
      000EAC F8 00                 3638 	ldhl	sp,	#0
      000EAE 77                    3639 	ld	(hl), a
      000EAF 21r0Dr00              3640 	ld	hl, #_player_y
      000EB2 7E                    3641 	ld	a, (hl)
      000EB3 07                    3642 	rlca
      000EB4 07                    3643 	rlca
      000EB5 E6 03                 3644 	and	a, #0x03
      000EB7 4F                    3645 	ld	c, a
                           000EB8  3646 	C$player.c$540$1_0$335	= .
                                   3647 	.globl	C$player.c$540$1_0$335
                                   3648 ;src/player.c:540: max_player_y = (uint8_t)((PREV_PLAYER_FLOOR << 6) - player_y);
      000EB8 7E                    3649 	ld	a, (hl)
      000EB9 F8 01                 3650 	ldhl	sp,	#1
                           000EBB  3651 	C$player.c$537$1_0$335	= .
                                   3652 	.globl	C$player.c$537$1_0$335
                                   3653 ;src/player.c:537: if((PREV_PLAYER_FLOOR != PLAYER_FLOOR) && PLAYER_FLOOR == ((highest_visited_floor - 1) & 0x03)){
      000EBB 32                    3654 	ld	(hl-), a
      000EBC 7E                    3655 	ld	a, (hl)
      000EBD 91                    3656 	sub	a, c
      000EBE 28 36                 3657 	jr	Z, 00102$
      000EC0 21r16r00              3658 	ld	hl, #_highest_visited_floor
      000EC3 5E                    3659 	ld	e, (hl)
      000EC4 16 00                 3660 	ld	d, #0x00
      000EC6 1B                    3661 	dec	de
      000EC7 7B                    3662 	ld	a, e
      000EC8 E6 03                 3663 	and	a, #0x03
      000ECA 5F                    3664 	ld	e, a
      000ECB 16 00                 3665 	ld	d, #0x00
                                   3666 ;	spillPairReg hl
                                   3667 ;	spillPairReg hl
      000ECD 79                    3668 	ld	a, c
      000ECE 06 00                 3669 	ld	b, #0x00
      000ED0 93                    3670 	sub	a, e
      000ED1 20 23                 3671 	jr	NZ, 00102$
      000ED3 78                    3672 	ld	a, b
      000ED4 92                    3673 	sub	a, d
      000ED5 20 1F                 3674 	jr	NZ, 00102$
                           000ED7  3675 	C$player.c$538$2_0$336	= .
                                   3676 	.globl	C$player.c$538$2_0$336
                                   3677 ;src/player.c:538: score += 4;
      000ED7 21r12r00              3678 	ld	hl, #_score
      000EDA 2A                    3679 	ld	a, (hl+)
      000EDB 5F                    3680 	ld	e, a
      000EDC 3A                    3681 	ld	a, (hl-)
      000EDD 57                    3682 	ld	d, a
      000EDE 13                    3683 	inc	de
      000EDF 13                    3684 	inc	de
      000EE0 13                    3685 	inc	de
      000EE1 13                    3686 	inc	de
      000EE2 7B                    3687 	ld	a, e
      000EE3 22                    3688 	ld	(hl+), a
      000EE4 72                    3689 	ld	(hl), d
                           000EE5  3690 	C$player.c$539$2_0$336	= .
                                   3691 	.globl	C$player.c$539$2_0$336
                                   3692 ;src/player.c:539: highest_visited_floor = PLAYER_FLOOR;
      000EE5 21r16r00              3693 	ld	hl, #_highest_visited_floor
      000EE8 71                    3694 	ld	(hl), c
                           000EE9  3695 	C$player.c$540$2_0$336	= .
                                   3696 	.globl	C$player.c$540$2_0$336
                                   3697 ;src/player.c:540: max_player_y = (uint8_t)((PREV_PLAYER_FLOOR << 6) - player_y);
      000EE9 F8 00                 3698 	ldhl	sp,	#0
      000EEB 2A                    3699 	ld	a, (hl+)
      000EEC 0F                    3700 	rrca
      000EED 0F                    3701 	rrca
      000EEE E6 C0                 3702 	and	a, #0xc0
      000EF0 96                    3703 	sub	a, (hl)
      000EF1 EAr14r00              3704 	ld	(#_max_player_y),a
                           000EF4  3705 	C$player.c$541$2_0$336	= .
                                   3706 	.globl	C$player.c$541$2_0$336
                                   3707 ;src/player.c:541: return;
      000EF4 18 21                 3708 	jr	00108$
      000EF6                       3709 00102$:
                           000EF6  3710 	C$player.c$544$1_0$335	= .
                                   3711 	.globl	C$player.c$544$1_0$335
                                   3712 ;src/player.c:544: if(PLAYER_FLOOR != highest_visited_floor) return;
      000EF6 FAr16r00              3713 	ld	a, (#_highest_visited_floor)
      000EF9 91                    3714 	sub	a, c
      000EFA 20 1B                 3715 	jr	NZ, 00108$
                           000EFC  3716 	C$player.c$546$1_0$335	= .
                                   3717 	.globl	C$player.c$546$1_0$335
                                   3718 ;src/player.c:546: test_max_player_y = (uint8_t)((((PLAYER_FLOOR + 1) & 0x03) << 6) - player_y);
      000EFC 79                    3719 	ld	a, c
      000EFD 3C                    3720 	inc	a
      000EFE E6 03                 3721 	and	a, #0x03
      000F00 0F                    3722 	rrca
      000F01 0F                    3723 	rrca
      000F02 E6 C0                 3724 	and	a, #0xc0
      000F04 F8 01                 3725 	ldhl	sp,	#1
      000F06 96                    3726 	sub	a, (hl)
      000F07 EAr15r00              3727 	ld	(#_test_max_player_y),a
                           000F0A  3728 	C$player.c$547$1_0$335	= .
                                   3729 	.globl	C$player.c$547$1_0$335
                                   3730 ;src/player.c:547: if(max_player_y < test_max_player_y){
      000F0A FAr14r00              3731 	ld	a, (#_max_player_y)
      000F0D 21r15r00              3732 	ld	hl, #_test_max_player_y
      000F10 96                    3733 	sub	a, (hl)
      000F11 30 04                 3734 	jr	NC, 00108$
                           000F13  3735 	C$player.c$548$2_0$337	= .
                                   3736 	.globl	C$player.c$548$2_0$337
                                   3737 ;src/player.c:548: max_player_y = test_max_player_y;
      000F13 7E                    3738 	ld	a, (hl)
      000F14 EAr14r00              3739 	ld	(#_max_player_y),a
      000F17                       3740 00108$:
                           000F17  3741 	C$player.c$550$1_0$335	= .
                                   3742 	.globl	C$player.c$550$1_0$335
                                   3743 ;src/player.c:550: }
      000F17 33                    3744 	inc	sp
      000F18 33                    3745 	inc	sp
                           000F19  3746 	C$player.c$550$1_0$335	= .
                                   3747 	.globl	C$player.c$550$1_0$335
                           000F19  3748 	XFplayer$update_score$0$0	= .
                                   3749 	.globl	XFplayer$update_score$0$0
      000F19 C9                    3750 	ret
                           000F1A  3751 	Fplayer$calculate_final_score$0$0	= .
                                   3752 	.globl	Fplayer$calculate_final_score$0$0
                           000F1A  3753 	C$player.c$552$1_0$339	= .
                                   3754 	.globl	C$player.c$552$1_0$339
                                   3755 ;src/player.c:552: static void calculate_final_score(void){
                                   3756 ;	---------------------------------
                                   3757 ; Function calculate_final_score
                                   3758 ; ---------------------------------
      000F1A                       3759 _calculate_final_score:
                           000F1A  3760 	C$player.c$553$1_0$339	= .
                                   3761 	.globl	C$player.c$553$1_0$339
                                   3762 ;src/player.c:553: score += (max_player_y >> 4);
      000F1A FAr14r00              3763 	ld	a, (#_max_player_y)
      000F1D CB 37                 3764 	swap	a
      000F1F E6 0F                 3765 	and	a, #0x0f
      000F21 4F                    3766 	ld	c, a
      000F22 06 00                 3767 	ld	b, #0x00
      000F24 21r12r00              3768 	ld	hl, #_score
      000F27 6E                    3769 	ld	l, (hl)
                                   3770 ;	spillPairReg hl
                                   3771 ;	spillPairReg hl
      000F28 FAr13r00              3772 	ld	a, (_score + 1)
      000F2B 67                    3773 	ld	h, a
                                   3774 ;	spillPairReg hl
                                   3775 ;	spillPairReg hl
      000F2C 09                    3776 	add	hl, bc
      000F2D 4D                    3777 	ld	c, l
      000F2E 7C                    3778 	ld	a, h
      000F2F 21r12r00              3779 	ld	hl, #_score
      000F32 71                    3780 	ld	(hl), c
      000F33 23                    3781 	inc	hl
      000F34 77                    3782 	ld	(hl), a
                           000F35  3783 	C$player.c$554$1_0$339	= .
                                   3784 	.globl	C$player.c$554$1_0$339
                                   3785 ;src/player.c:554: }
                           000F35  3786 	C$player.c$554$1_0$339	= .
                                   3787 	.globl	C$player.c$554$1_0$339
                           000F35  3788 	XFplayer$calculate_final_score$0$0	= .
                                   3789 	.globl	XFplayer$calculate_final_score$0$0
      000F35 C9                    3790 	ret
                           000F36  3791 	Fplayer$point_vs_rect$0$0	= .
                                   3792 	.globl	Fplayer$point_vs_rect$0$0
                           000F36  3793 	C$player.c$556$1_0$341	= .
                                   3794 	.globl	C$player.c$556$1_0$341
                                   3795 ;src/player.c:556: static inline bool point_vs_rect(rect *r){
                                   3796 ;	---------------------------------
                                   3797 ; Function point_vs_rect
                                   3798 ; ---------------------------------
      000F36                       3799 _point_vs_rect:
      000F36 E8 FC                 3800 	add	sp, #-4
                           000F38  3801 	C$player.c$557$1_0$341	= .
                                   3802 	.globl	C$player.c$557$1_0$341
                                   3803 ;src/player.c:557: return (player_x >= r->x && player_y <= r->y && player_x <= (r->x + r->size_x) && player_y >= (r->y - r->size_y));
      000F38 F8 06                 3804 	ldhl	sp,	#6
      000F3A 7E                    3805 	ld	a, (hl)
      000F3B F8 00                 3806 	ldhl	sp,	#0
      000F3D 77                    3807 	ld	(hl), a
      000F3E F8 07                 3808 	ldhl	sp,	#7
      000F40 7E                    3809 	ld	a, (hl)
      000F41 F8 01                 3810 	ldhl	sp,	#1
      000F43 22                    3811 	ld	(hl+), a
      000F44 D1                    3812 	pop	de
      000F45 D5                    3813 	push	de
      000F46 1A                    3814 	ld	a, (de)
      000F47 77                    3815 	ld	(hl), a
      000F48 FAr0Cr00              3816 	ld	a, (#_player_x)
      000F4B F8 02                 3817 	ldhl	sp,	#2
      000F4D 96                    3818 	sub	a, (hl)
      000F4E 38 6C                 3819 	jr	C, 00103$
      000F50 23                    3820 	inc	hl
      000F51 C1                    3821 	pop	bc
      000F52 C5                    3822 	push	bc
      000F53 03                    3823 	inc	bc
      000F54 0A                    3824 	ld	a, (bc)
      000F55 77                    3825 	ld	(hl), a
      000F56 21r0Dr00              3826 	ld	hl, #_player_y
      000F59 96                    3827 	sub	a, (hl)
      000F5A 38 60                 3828 	jr	C, 00103$
      000F5C F8 02                 3829 	ldhl	sp,	#2
      000F5E 4E                    3830 	ld	c, (hl)
      000F5F 06 00                 3831 	ld	b, #0x00
      000F61 D1                    3832 	pop	de
      000F62 D5                    3833 	push	de
      000F63 13                    3834 	inc	de
      000F64 13                    3835 	inc	de
      000F65 1A                    3836 	ld	a, (de)
      000F66 26 00                 3837 	ld	h, #0x00
                                   3838 ;	spillPairReg hl
                                   3839 ;	spillPairReg hl
      000F68 6F                    3840 	ld	l, a
      000F69 09                    3841 	add	hl, bc
      000F6A E5                    3842 	push	hl
      000F6B 21r0Cr00              3843 	ld	hl, #_player_x
      000F6E 4E                    3844 	ld	c, (hl)
      000F6F E1                    3845 	pop	hl
      000F70 06 00                 3846 	ld	b, #0x00
      000F72 58                    3847 	ld	e, b
      000F73 54                    3848 	ld	d, h
      000F74 7D                    3849 	ld	a, l
      000F75 91                    3850 	sub	a, c
      000F76 7C                    3851 	ld	a, h
      000F77 98                    3852 	sbc	a, b
      000F78 CB 7B                 3853 	bit	7, e
      000F7A 28 07                 3854 	jr	Z, 00125$
      000F7C CB 7A                 3855 	bit	7, d
      000F7E 20 08                 3856 	jr	NZ, 00126$
      000F80 BF                    3857 	cp	a, a
      000F81 18 05                 3858 	jr	00126$
      000F83                       3859 00125$:
      000F83 CB 7A                 3860 	bit	7, d
      000F85 28 01                 3861 	jr	Z, 00126$
      000F87 37                    3862 	scf
      000F88                       3863 00126$:
      000F88 38 32                 3864 	jr	C, 00103$
      000F8A F8 03                 3865 	ldhl	sp,	#3
      000F8C 4E                    3866 	ld	c, (hl)
      000F8D 06 00                 3867 	ld	b, #0x00
      000F8F D1                    3868 	pop	de
      000F90 D5                    3869 	push	de
      000F91 13                    3870 	inc	de
      000F92 13                    3871 	inc	de
      000F93 13                    3872 	inc	de
      000F94 1A                    3873 	ld	a, (de)
      000F95 5F                    3874 	ld	e, a
      000F96 16 00                 3875 	ld	d, #0x00
      000F98 79                    3876 	ld	a, c
      000F99 93                    3877 	sub	a, e
      000F9A 4F                    3878 	ld	c, a
      000F9B 78                    3879 	ld	a, b
      000F9C 9A                    3880 	sbc	a, d
      000F9D 47                    3881 	ld	b, a
      000F9E 21r0Dr00              3882 	ld	hl, #_player_y
      000FA1 6E                    3883 	ld	l, (hl)
                                   3884 ;	spillPairReg hl
                                   3885 ;	spillPairReg hl
      000FA2 26 00                 3886 	ld	h, #0x00
                                   3887 ;	spillPairReg hl
                                   3888 ;	spillPairReg hl
      000FA4 58                    3889 	ld	e, b
      000FA5 54                    3890 	ld	d, h
      000FA6 7D                    3891 	ld	a, l
      000FA7 91                    3892 	sub	a, c
      000FA8 7C                    3893 	ld	a, h
      000FA9 98                    3894 	sbc	a, b
      000FAA CB 7B                 3895 	bit	7, e
      000FAC 28 07                 3896 	jr	Z, 00127$
      000FAE CB 7A                 3897 	bit	7, d
      000FB0 20 08                 3898 	jr	NZ, 00128$
      000FB2 BF                    3899 	cp	a, a
      000FB3 18 05                 3900 	jr	00128$
      000FB5                       3901 00127$:
      000FB5 CB 7A                 3902 	bit	7, d
      000FB7 28 01                 3903 	jr	Z, 00128$
      000FB9 37                    3904 	scf
      000FBA                       3905 00128$:
      000FBA 30 04                 3906 	jr	NC, 00104$
      000FBC                       3907 00103$:
      000FBC 1E 00                 3908 	ld	e, #0x00
      000FBE 18 02                 3909 	jr	00105$
      000FC0                       3910 00104$:
      000FC0 1E 01                 3911 	ld	e, #0x01
      000FC2                       3912 00105$:
                           000FC2  3913 	C$player.c$558$1_0$341	= .
                                   3914 	.globl	C$player.c$558$1_0$341
                                   3915 ;src/player.c:558: }
      000FC2 E8 04                 3916 	add	sp, #4
                           000FC4  3917 	C$player.c$558$1_0$341	= .
                                   3918 	.globl	C$player.c$558$1_0$341
                           000FC4  3919 	XFplayer$point_vs_rect$0$0	= .
                                   3920 	.globl	XFplayer$point_vs_rect$0$0
      000FC4 C9                    3921 	ret
                           000FC5  3922 	Fplayer$r_solid_function$0$0	= .
                                   3923 	.globl	Fplayer$r_solid_function$0$0
                           000FC5  3924 	C$player.c$564$1_0$343	= .
                                   3925 	.globl	C$player.c$564$1_0$343
                                   3926 ;src/player.c:564: static bool r_solid_function(uint8_t epa){
                                   3927 ;	---------------------------------
                                   3928 ; Function r_solid_function
                                   3929 ; ---------------------------------
      000FC5                       3930 _r_solid_function:
      000FC5 3B                    3931 	dec	sp
      000FC6 3B                    3932 	dec	sp
                           000FC7  3933 	C$player.c$565$1_0$343	= .
                                   3934 	.globl	C$player.c$565$1_0$343
                                   3935 ;src/player.c:565: if(epa == CENTER_DOWN){
      000FC7 F8 04                 3936 	ldhl	sp,	#4
      000FC9 7E                    3937 	ld	a, (hl)
      000FCA D6 32                 3938 	sub	a, #0x32
      000FCC C2r27r12              3939 	jp	NZ,00111$
                           000FCF  3940 	C$player.c$568$3_0$344	= .
                                   3941 	.globl	C$player.c$568$3_0$344
                                   3942 ;src/player.c:568: bool is_upper = i & 0x01 == 0x01;
      000FCF FAr04r00              3943 	ld	a, (#_i)
      000FD2 E6 01                 3944 	and	a, #0x01
      000FD4 4F                    3945 	ld	c, a
      000FD5 F8 00                 3946 	ldhl	sp,	#0
      000FD7 71                    3947 	ld	(hl), c
                           000FD8  3948 	C$player.c$569$1_0$343	= .
                                   3949 	.globl	C$player.c$569$1_0$343
                                   3950 ;src/player.c:569: component_at_r = is_upper ? map_components[PLAYER_FLOOR][i>>1].components >> 4 : map_components[PLAYER_FLOOR][i>>1].components & 0x0F;
      000FD8 FAr0Dr00              3951 	ld	a, (#_player_y)
      000FDB 07                    3952 	rlca
      000FDC 07                    3953 	rlca
      000FDD E6 03                 3954 	and	a, #0x03
      000FDF 5F                    3955 	ld	e, a
      000FE0 FAr04r00              3956 	ld	a, (#_i)
      000FE3 CB 3F                 3957 	srl	a
      000FE5 16 00                 3958 	ld	d, #0x00
      000FE7 87                    3959 	add	a, a
      000FE8 F8 01                 3960 	ldhl	sp,	#1
      000FEA 77                    3961 	ld	(hl), a
      000FEB CB 23                 3962 	sla	e
      000FED CB 12                 3963 	rl	d
      000FEF CB 23                 3964 	sla	e
      000FF1 CB 12                 3965 	rl	d
      000FF3 CB 23                 3966 	sla	e
      000FF5 CB 12                 3967 	rl	d
      000FF7 CB 41                 3968 	bit	0, c
      000FF9 28 15                 3969 	jr	Z, 00114$
      000FFB 21r00r00              3970 	ld	hl, #_map_components
      000FFE 19                    3971 	add	hl, de
      000FFF 4D                    3972 	ld	c, l
      001000 44                    3973 	ld	b, h
      001001 F8 01                 3974 	ldhl	sp,	#1
      001003 6E                    3975 	ld	l, (hl)
      001004 26 00                 3976 	ld	h, #0x00
      001006 09                    3977 	add	hl, bc
      001007 4D                    3978 	ld	c, l
      001008 44                    3979 	ld	b, h
      001009 0A                    3980 	ld	a, (bc)
      00100A CB 37                 3981 	swap	a
      00100C E6 0F                 3982 	and	a, #0x0f
      00100E 18 11                 3983 	jr	00115$
      001010                       3984 00114$:
      001010 21r00r00              3985 	ld	hl, #_map_components
      001013 19                    3986 	add	hl, de
      001014 4D                    3987 	ld	c, l
      001015 44                    3988 	ld	b, h
      001016 F8 01                 3989 	ldhl	sp,	#1
      001018 6E                    3990 	ld	l, (hl)
      001019 26 00                 3991 	ld	h, #0x00
      00101B 09                    3992 	add	hl, bc
      00101C 4D                    3993 	ld	c, l
      00101D 44                    3994 	ld	b, h
      00101E 0A                    3995 	ld	a, (bc)
      00101F E6 0F                 3996 	and	a, #0x0f
      001021                       3997 00115$:
                           001021  3998 	C$player.c$570$2_0$344	= .
                                   3999 	.globl	C$player.c$570$2_0$344
                                   4000 ;src/player.c:570: if(component_at_r == 2){
      001021 D6 02                 4001 	sub	a, #0x02
      001023 C2r27r12              4002 	jp	NZ,00111$
                           001026  4003 	C$player.c$571$3_0$345	= .
                                   4004 	.globl	C$player.c$571$3_0$345
                                   4005 ;src/player.c:571: if(is_upper){
      001026 F8 00                 4006 	ldhl	sp,	#0
      001028 CB 46                 4007 	bit	0, (hl)
      00102A CAr2Br11              4008 	jp	Z, 00106$
                           00102D  4009 	C$player.c$572$4_0$346	= .
                                   4010 	.globl	C$player.c$572$4_0$346
                                   4011 ;src/player.c:572: if((map_components[PLAYER_FLOOR][i>>1].status >> 4) == 0){
      00102D 23                    4012 	inc	hl
      00102E 01r00r00              4013 	ld	bc, #_map_components+0
      001031 7B                    4014 	ld	a, e
      001032 81                    4015 	add	a, c
      001033 5F                    4016 	ld	e, a
      001034 7A                    4017 	ld	a, d
      001035 88                    4018 	adc	a, b
      001036 57                    4019 	ld	d, a
      001037 6E                    4020 	ld	l, (hl)
      001038 26 00                 4021 	ld	h, #0x00
      00103A 19                    4022 	add	hl, de
      00103B 23                    4023 	inc	hl
      00103C 5D                    4024 	ld	e, l
      00103D 54                    4025 	ld	d, h
      00103E 1A                    4026 	ld	a, (de)
      00103F CB 37                 4027 	swap	a
      001041 E6 0F                 4028 	and	a,#0x0f
      001043 20 4E                 4029 	jr	NZ, 00102$
                           001045  4030 	C$player.c$573$5_0$347	= .
                                   4031 	.globl	C$player.c$573$5_0$347
                                   4032 ;src/player.c:573: play_bump_sfx();
      001045 C5                    4033 	push	bc
      001046 CDr00r00              4034 	call	_play_bump_sfx
      001049 C1                    4035 	pop	bc
                           00104A  4036 	C$player.c$574$5_0$347	= .
                                   4037 	.globl	C$player.c$574$5_0$347
                                   4038 ;src/player.c:574: set_bkg_tiles(3 + (i<<1 & 0x0C), (PLAYER_FLOOR << 3) + 1, 4, 1, top_map_02_broken);
      00104A FAr0Dr00              4039 	ld	a, (#_player_y)
      00104D 07                    4040 	rlca
      00104E 07                    4041 	rlca
      00104F E6 03                 4042 	and	a, #0x03
      001051 87                    4043 	add	a, a
      001052 87                    4044 	add	a, a
      001053 87                    4045 	add	a, a
      001054 57                    4046 	ld	d, a
      001055 14                    4047 	inc	d
      001056 FAr04r00              4048 	ld	a, (#_i)
      001059 87                    4049 	add	a, a
      00105A E6 0C                 4050 	and	a, #0x0c
      00105C C6 03                 4051 	add	a, #0x03
      00105E 21r00r00              4052 	ld	hl, #_top_map_02_broken
      001061 E5                    4053 	push	hl
      001062 26 01                 4054 	ld	h, #0x01
                                   4055 ;	spillPairReg hl
                                   4056 ;	spillPairReg hl
      001064 E5                    4057 	push	hl
      001065 33                    4058 	inc	sp
      001066 26 04                 4059 	ld	h, #0x04
                                   4060 ;	spillPairReg hl
                                   4061 ;	spillPairReg hl
      001068 6A                    4062 	ld	l, d
      001069 E5                    4063 	push	hl
      00106A F5                    4064 	push	af
      00106B 33                    4065 	inc	sp
      00106C CDr00r00              4066 	call	_set_bkg_tiles
      00106F E8 06                 4067 	add	sp, #6
                           001071  4068 	C$player.c$575$5_0$347	= .
                                   4069 	.globl	C$player.c$575$5_0$347
                                   4070 ;src/player.c:575: map_components[PLAYER_FLOOR][i>>1].status |= 0x10;
      001071 FAr0Dr00              4071 	ld	a, (#_player_y)
      001074 07                    4072 	rlca
      001075 07                    4073 	rlca
      001076 E6 03                 4074 	and	a, #0x03
      001078 26 00                 4075 	ld	h, #0x00
                                   4076 ;	spillPairReg hl
                                   4077 ;	spillPairReg hl
      00107A 6F                    4078 	ld	l, a
      00107B 29                    4079 	add	hl, hl
      00107C 29                    4080 	add	hl, hl
      00107D 29                    4081 	add	hl, hl
      00107E 09                    4082 	add	hl, bc
      00107F 4D                    4083 	ld	c, l
      001080 44                    4084 	ld	b, h
      001081 FAr04r00              4085 	ld	a, (#_i)
      001084 CB 3F                 4086 	srl	a
      001086 87                    4087 	add	a, a
      001087 6F                    4088 	ld	l, a
      001088 26 00                 4089 	ld	h, #0x00
      00108A 09                    4090 	add	hl, bc
      00108B 23                    4091 	inc	hl
      00108C CB E6                 4092 	set	4, (hl)
                           00108E  4093 	C$player.c$576$5_0$347	= .
                                   4094 	.globl	C$player.c$576$5_0$347
                                   4095 ;src/player.c:576: return false;
      00108E 1E 00                 4096 	ld	e, #0x00
      001090 C3r29r12              4097 	jp	00112$
      001093                       4098 00102$:
                           001093  4099 	C$player.c$578$4_0$346	= .
                                   4100 	.globl	C$player.c$578$4_0$346
                                   4101 ;src/player.c:578: instanciate_brick_particles();
      001093 C5                    4102 	push	bc
      001094 CDrBFr07              4103 	call	_instanciate_brick_particles
      001097 CDr00r00              4104 	call	_play_break_sfx
      00109A C1                    4105 	pop	bc
                           00109B  4106 	C$player.c$580$4_0$346	= .
                                   4107 	.globl	C$player.c$580$4_0$346
                                   4108 ;src/player.c:580: set_bkg_tiles(3 + (i<<1 & 0x0C), (PLAYER_FLOOR << 3) + 1, 4, 1, top_map_00);
      00109B FAr0Dr00              4109 	ld	a, (#_player_y)
      00109E 07                    4110 	rlca
      00109F 07                    4111 	rlca
      0010A0 E6 03                 4112 	and	a, #0x03
      0010A2 87                    4113 	add	a, a
      0010A3 87                    4114 	add	a, a
      0010A4 87                    4115 	add	a, a
      0010A5 57                    4116 	ld	d, a
      0010A6 14                    4117 	inc	d
      0010A7 FAr04r00              4118 	ld	a, (#_i)
      0010AA 87                    4119 	add	a, a
      0010AB E6 0C                 4120 	and	a, #0x0c
      0010AD C6 03                 4121 	add	a, #0x03
      0010AF 21r00r00              4122 	ld	hl, #_top_map_00
      0010B2 E5                    4123 	push	hl
      0010B3 26 01                 4124 	ld	h, #0x01
                                   4125 ;	spillPairReg hl
                                   4126 ;	spillPairReg hl
      0010B5 E5                    4127 	push	hl
      0010B6 33                    4128 	inc	sp
      0010B7 26 04                 4129 	ld	h, #0x04
                                   4130 ;	spillPairReg hl
                                   4131 ;	spillPairReg hl
      0010B9 6A                    4132 	ld	l, d
      0010BA E5                    4133 	push	hl
      0010BB F5                    4134 	push	af
      0010BC 33                    4135 	inc	sp
      0010BD CDr00r00              4136 	call	_set_bkg_tiles
      0010C0 E8 06                 4137 	add	sp, #6
                           0010C2  4138 	C$player.c$581$4_0$346	= .
                                   4139 	.globl	C$player.c$581$4_0$346
                                   4140 ;src/player.c:581: map_components[PLAYER_FLOOR][i>>1].components = map_components[PLAYER_FLOOR][i>>1].components & 0x0F;
      0010C2 FAr0Dr00              4141 	ld	a, (#_player_y)
      0010C5 07                    4142 	rlca
      0010C6 07                    4143 	rlca
      0010C7 E6 03                 4144 	and	a, #0x03
      0010C9 26 00                 4145 	ld	h, #0x00
                                   4146 ;	spillPairReg hl
                                   4147 ;	spillPairReg hl
      0010CB 6F                    4148 	ld	l, a
      0010CC 29                    4149 	add	hl, hl
      0010CD 29                    4150 	add	hl, hl
      0010CE 29                    4151 	add	hl, hl
      0010CF 09                    4152 	add	hl, bc
      0010D0 5D                    4153 	ld	e, l
      0010D1 54                    4154 	ld	d, h
      0010D2 FAr04r00              4155 	ld	a, (#_i)
      0010D5 CB 3F                 4156 	srl	a
      0010D7 87                    4157 	add	a, a
      0010D8 6F                    4158 	ld	l, a
      0010D9 26 00                 4159 	ld	h, #0x00
      0010DB 19                    4160 	add	hl, de
      0010DC 7E                    4161 	ld	a, (hl)
      0010DD E6 0F                 4162 	and	a, #0x0f
      0010DF 77                    4163 	ld	(hl), a
                           0010E0  4164 	C$player.c$582$4_0$346	= .
                                   4165 	.globl	C$player.c$582$4_0$346
                                   4166 ;src/player.c:582: map_components[PLAYER_FLOOR][i>>1].status = map_components[PLAYER_FLOOR][i>>1].status & 0x0F;
      0010E0 FAr0Dr00              4167 	ld	a, (#_player_y)
      0010E3 07                    4168 	rlca
      0010E4 07                    4169 	rlca
      0010E5 E6 03                 4170 	and	a, #0x03
      0010E7 26 00                 4171 	ld	h, #0x00
                                   4172 ;	spillPairReg hl
                                   4173 ;	spillPairReg hl
      0010E9 6F                    4174 	ld	l, a
      0010EA 29                    4175 	add	hl, hl
      0010EB 29                    4176 	add	hl, hl
      0010EC 29                    4177 	add	hl, hl
      0010ED 09                    4178 	add	hl, bc
      0010EE 4D                    4179 	ld	c, l
      0010EF 44                    4180 	ld	b, h
      0010F0 FAr04r00              4181 	ld	a, (#_i)
      0010F3 CB 3F                 4182 	srl	a
      0010F5 87                    4183 	add	a, a
      0010F6 6F                    4184 	ld	l, a
      0010F7 26 00                 4185 	ld	h, #0x00
      0010F9 09                    4186 	add	hl, bc
      0010FA 23                    4187 	inc	hl
      0010FB 7E                    4188 	ld	a, (hl)
      0010FC E6 0F                 4189 	and	a, #0x0f
      0010FE 77                    4190 	ld	(hl), a
                           0010FF  4191 	C$player.c$583$4_0$346	= .
                                   4192 	.globl	C$player.c$583$4_0$346
                                   4193 ;src/player.c:583: rect_list[PLAYER_FLOOR][i].type = INACTIVE;
      0010FF 01r00r00              4194 	ld	bc, #_rect_list+0
      001102 FAr0Dr00              4195 	ld	a, (#_player_y)
      001105 07                    4196 	rlca
      001106 07                    4197 	rlca
      001107 E6 03                 4198 	and	a, #0x03
      001109 5F                    4199 	ld	e, a
      00110A 16 00                 4200 	ld	d, #0x00
      00110C 6B                    4201 	ld	l, e
      00110D 62                    4202 	ld	h, d
      00110E 29                    4203 	add	hl, hl
      00110F 29                    4204 	add	hl, hl
      001110 19                    4205 	add	hl, de
      001111 29                    4206 	add	hl, hl
      001112 29                    4207 	add	hl, hl
      001113 29                    4208 	add	hl, hl
      001114 09                    4209 	add	hl, bc
      001115 4D                    4210 	ld	c, l
      001116 44                    4211 	ld	b, h
      001117 FAr04r00              4212 	ld	a, (#_i)
      00111A 5F                    4213 	ld	e, a
      00111B 87                    4214 	add	a, a
      00111C 87                    4215 	add	a, a
      00111D 83                    4216 	add	a, e
      00111E 6F                    4217 	ld	l, a
      00111F 26 00                 4218 	ld	h, #0x00
      001121 09                    4219 	add	hl, bc
      001122 01 04 00              4220 	ld	bc, #0x0004
      001125 09                    4221 	add	hl, bc
      001126 36 02                 4222 	ld	(hl), #0x02
      001128 C3r27r12              4223 	jp	00111$
      00112B                       4224 00106$:
                           00112B  4225 	C$player.c$585$4_0$348	= .
                                   4226 	.globl	C$player.c$585$4_0$348
                                   4227 ;src/player.c:585: if((map_components[PLAYER_FLOOR][i>>1].status & 0x0F) == 0){
      00112B 01r00r00              4228 	ld	bc, #_map_components+0
      00112E 7B                    4229 	ld	a, e
      00112F 81                    4230 	add	a, c
      001130 5F                    4231 	ld	e, a
      001131 7A                    4232 	ld	a, d
      001132 88                    4233 	adc	a, b
      001133 57                    4234 	ld	d, a
      001134 F8 01                 4235 	ldhl	sp,	#1
      001136 6E                    4236 	ld	l, (hl)
      001137 26 00                 4237 	ld	h, #0x00
      001139 19                    4238 	add	hl, de
      00113A 23                    4239 	inc	hl
      00113B 5D                    4240 	ld	e, l
      00113C 54                    4241 	ld	d, h
      00113D 1A                    4242 	ld	a, (de)
      00113E E6 0F                 4243 	and	a, #0x0f
      001140 20 4F                 4244 	jr	NZ, 00104$
                           001142  4245 	C$player.c$586$5_0$349	= .
                                   4246 	.globl	C$player.c$586$5_0$349
                                   4247 ;src/player.c:586: play_bump_sfx();
      001142 C5                    4248 	push	bc
      001143 CDr00r00              4249 	call	_play_bump_sfx
      001146 C1                    4250 	pop	bc
                           001147  4251 	C$player.c$587$5_0$349	= .
                                   4252 	.globl	C$player.c$587$5_0$349
                                   4253 ;src/player.c:587: set_bkg_tiles(3 + (i<<1 & 0x0C), (PLAYER_FLOOR << 3) + 5, 4, 2, bot_map_02_broken);
      001147 FAr0Dr00              4254 	ld	a, (#_player_y)
      00114A 07                    4255 	rlca
      00114B 07                    4256 	rlca
      00114C E6 03                 4257 	and	a, #0x03
      00114E 87                    4258 	add	a, a
      00114F 87                    4259 	add	a, a
      001150 87                    4260 	add	a, a
      001151 C6 05                 4261 	add	a, #0x05
      001153 57                    4262 	ld	d, a
      001154 FAr04r00              4263 	ld	a, (#_i)
      001157 87                    4264 	add	a, a
      001158 E6 0C                 4265 	and	a, #0x0c
      00115A C6 03                 4266 	add	a, #0x03
      00115C 21r00r00              4267 	ld	hl, #_bot_map_02_broken
      00115F E5                    4268 	push	hl
      001160 26 02                 4269 	ld	h, #0x02
                                   4270 ;	spillPairReg hl
                                   4271 ;	spillPairReg hl
      001162 E5                    4272 	push	hl
      001163 33                    4273 	inc	sp
      001164 26 04                 4274 	ld	h, #0x04
                                   4275 ;	spillPairReg hl
                                   4276 ;	spillPairReg hl
      001166 6A                    4277 	ld	l, d
      001167 E5                    4278 	push	hl
      001168 F5                    4279 	push	af
      001169 33                    4280 	inc	sp
      00116A CDr00r00              4281 	call	_set_bkg_tiles
      00116D E8 06                 4282 	add	sp, #6
                           00116F  4283 	C$player.c$588$5_0$349	= .
                                   4284 	.globl	C$player.c$588$5_0$349
                                   4285 ;src/player.c:588: map_components[PLAYER_FLOOR][i>>1].status |= 0x01;
      00116F FAr0Dr00              4286 	ld	a, (#_player_y)
      001172 07                    4287 	rlca
      001173 07                    4288 	rlca
      001174 E6 03                 4289 	and	a, #0x03
      001176 26 00                 4290 	ld	h, #0x00
                                   4291 ;	spillPairReg hl
                                   4292 ;	spillPairReg hl
      001178 6F                    4293 	ld	l, a
      001179 29                    4294 	add	hl, hl
      00117A 29                    4295 	add	hl, hl
      00117B 29                    4296 	add	hl, hl
      00117C 09                    4297 	add	hl, bc
      00117D 4D                    4298 	ld	c, l
      00117E 44                    4299 	ld	b, h
      00117F FAr04r00              4300 	ld	a, (#_i)
      001182 CB 3F                 4301 	srl	a
      001184 87                    4302 	add	a, a
      001185 6F                    4303 	ld	l, a
      001186 26 00                 4304 	ld	h, #0x00
      001188 09                    4305 	add	hl, bc
      001189 23                    4306 	inc	hl
      00118A CB C6                 4307 	set	0, (hl)
                           00118C  4308 	C$player.c$589$5_0$349	= .
                                   4309 	.globl	C$player.c$589$5_0$349
                                   4310 ;src/player.c:589: return false;
      00118C 1E 00                 4311 	ld	e, #0x00
      00118E C3r29r12              4312 	jp	00112$
      001191                       4313 00104$:
                           001191  4314 	C$player.c$591$4_0$348	= .
                                   4315 	.globl	C$player.c$591$4_0$348
                                   4316 ;src/player.c:591: instanciate_brick_particles();
      001191 C5                    4317 	push	bc
      001192 CDrBFr07              4318 	call	_instanciate_brick_particles
      001195 CDr00r00              4319 	call	_play_break_sfx
      001198 C1                    4320 	pop	bc
                           001199  4321 	C$player.c$593$4_0$348	= .
                                   4322 	.globl	C$player.c$593$4_0$348
                                   4323 ;src/player.c:593: set_bkg_tiles(3 + (i<<1 & 0x0C), (PLAYER_FLOOR << 3) + 5, 4, 2, bot_map_00);
      001199 FAr0Dr00              4324 	ld	a, (#_player_y)
      00119C 07                    4325 	rlca
      00119D 07                    4326 	rlca
      00119E E6 03                 4327 	and	a, #0x03
      0011A0 87                    4328 	add	a, a
      0011A1 87                    4329 	add	a, a
      0011A2 87                    4330 	add	a, a
      0011A3 C6 05                 4331 	add	a, #0x05
      0011A5 57                    4332 	ld	d, a
      0011A6 FAr04r00              4333 	ld	a, (#_i)
      0011A9 87                    4334 	add	a, a
      0011AA E6 0C                 4335 	and	a, #0x0c
      0011AC C6 03                 4336 	add	a, #0x03
      0011AE 21r00r00              4337 	ld	hl, #_bot_map_00
      0011B1 E5                    4338 	push	hl
      0011B2 26 02                 4339 	ld	h, #0x02
                                   4340 ;	spillPairReg hl
                                   4341 ;	spillPairReg hl
      0011B4 E5                    4342 	push	hl
      0011B5 33                    4343 	inc	sp
      0011B6 26 04                 4344 	ld	h, #0x04
                                   4345 ;	spillPairReg hl
                                   4346 ;	spillPairReg hl
      0011B8 6A                    4347 	ld	l, d
      0011B9 E5                    4348 	push	hl
      0011BA F5                    4349 	push	af
      0011BB 33                    4350 	inc	sp
      0011BC CDr00r00              4351 	call	_set_bkg_tiles
      0011BF E8 06                 4352 	add	sp, #6
                           0011C1  4353 	C$player.c$594$4_0$348	= .
                                   4354 	.globl	C$player.c$594$4_0$348
                                   4355 ;src/player.c:594: map_components[PLAYER_FLOOR][i>>1].components = map_components[PLAYER_FLOOR][i>>1].components & 0xF0;
      0011C1 FAr0Dr00              4356 	ld	a, (#_player_y)
      0011C4 07                    4357 	rlca
      0011C5 07                    4358 	rlca
      0011C6 E6 03                 4359 	and	a, #0x03
      0011C8 26 00                 4360 	ld	h, #0x00
                                   4361 ;	spillPairReg hl
                                   4362 ;	spillPairReg hl
      0011CA 6F                    4363 	ld	l, a
      0011CB 29                    4364 	add	hl, hl
      0011CC 29                    4365 	add	hl, hl
      0011CD 29                    4366 	add	hl, hl
      0011CE 09                    4367 	add	hl, bc
      0011CF 5D                    4368 	ld	e, l
      0011D0 54                    4369 	ld	d, h
      0011D1 FAr04r00              4370 	ld	a, (#_i)
      0011D4 CB 3F                 4371 	srl	a
      0011D6 87                    4372 	add	a, a
      0011D7 6F                    4373 	ld	l, a
      0011D8 26 00                 4374 	ld	h, #0x00
      0011DA 19                    4375 	add	hl, de
      0011DB 7E                    4376 	ld	a, (hl)
      0011DC E6 F0                 4377 	and	a, #0xf0
      0011DE 77                    4378 	ld	(hl), a
                           0011DF  4379 	C$player.c$595$4_0$348	= .
                                   4380 	.globl	C$player.c$595$4_0$348
                                   4381 ;src/player.c:595: map_components[PLAYER_FLOOR][i>>1].status = map_components[PLAYER_FLOOR][i>>1].status & 0xF0;
      0011DF FAr0Dr00              4382 	ld	a, (#_player_y)
      0011E2 07                    4383 	rlca
      0011E3 07                    4384 	rlca
      0011E4 E6 03                 4385 	and	a, #0x03
      0011E6 26 00                 4386 	ld	h, #0x00
                                   4387 ;	spillPairReg hl
                                   4388 ;	spillPairReg hl
      0011E8 6F                    4389 	ld	l, a
      0011E9 29                    4390 	add	hl, hl
      0011EA 29                    4391 	add	hl, hl
      0011EB 29                    4392 	add	hl, hl
      0011EC 09                    4393 	add	hl, bc
      0011ED 4D                    4394 	ld	c, l
      0011EE 44                    4395 	ld	b, h
      0011EF FAr04r00              4396 	ld	a, (#_i)
      0011F2 CB 3F                 4397 	srl	a
      0011F4 87                    4398 	add	a, a
      0011F5 6F                    4399 	ld	l, a
      0011F6 26 00                 4400 	ld	h, #0x00
      0011F8 09                    4401 	add	hl, bc
      0011F9 23                    4402 	inc	hl
      0011FA 7E                    4403 	ld	a, (hl)
      0011FB E6 F0                 4404 	and	a, #0xf0
      0011FD 77                    4405 	ld	(hl), a
                           0011FE  4406 	C$player.c$596$4_0$348	= .
                                   4407 	.globl	C$player.c$596$4_0$348
                                   4408 ;src/player.c:596: rect_list[PLAYER_FLOOR][i].type = INACTIVE;
      0011FE 01r00r00              4409 	ld	bc, #_rect_list+0
      001201 FAr0Dr00              4410 	ld	a, (#_player_y)
      001204 07                    4411 	rlca
      001205 07                    4412 	rlca
      001206 E6 03                 4413 	and	a, #0x03
      001208 5F                    4414 	ld	e, a
      001209 16 00                 4415 	ld	d, #0x00
      00120B 6B                    4416 	ld	l, e
      00120C 62                    4417 	ld	h, d
      00120D 29                    4418 	add	hl, hl
      00120E 29                    4419 	add	hl, hl
      00120F 19                    4420 	add	hl, de
      001210 29                    4421 	add	hl, hl
      001211 29                    4422 	add	hl, hl
      001212 29                    4423 	add	hl, hl
      001213 09                    4424 	add	hl, bc
      001214 4D                    4425 	ld	c, l
      001215 44                    4426 	ld	b, h
      001216 FAr04r00              4427 	ld	a, (#_i)
      001219 5F                    4428 	ld	e, a
      00121A 87                    4429 	add	a, a
      00121B 87                    4430 	add	a, a
      00121C 83                    4431 	add	a, e
      00121D 6F                    4432 	ld	l, a
      00121E 26 00                 4433 	ld	h, #0x00
      001220 09                    4434 	add	hl, bc
      001221 01 04 00              4435 	ld	bc, #0x0004
      001224 09                    4436 	add	hl, bc
      001225 36 02                 4437 	ld	(hl), #0x02
      001227                       4438 00111$:
                           001227  4439 	C$player.c$602$1_0$343	= .
                                   4440 	.globl	C$player.c$602$1_0$343
                                   4441 ;src/player.c:602: return false;
      001227 1E 00                 4442 	ld	e, #0x00
      001229                       4443 00112$:
                           001229  4444 	C$player.c$603$1_0$343	= .
                                   4445 	.globl	C$player.c$603$1_0$343
                                   4446 ;src/player.c:603: }
      001229 33                    4447 	inc	sp
      00122A 33                    4448 	inc	sp
                           00122B  4449 	C$player.c$603$1_0$343	= .
                                   4450 	.globl	C$player.c$603$1_0$343
                           00122B  4451 	XFplayer$r_solid_function$0$0	= .
                                   4452 	.globl	XFplayer$r_solid_function$0$0
      00122B C9                    4453 	ret
                           00122C  4454 	Fplayer$r_traversable_function$0$0	= .
                                   4455 	.globl	Fplayer$r_traversable_function$0$0
                           00122C  4456 	C$player.c$604$1_0$351	= .
                                   4457 	.globl	C$player.c$604$1_0$351
                                   4458 ;src/player.c:604: static bool r_traversable_function(uint8_t epa){
                                   4459 ;	---------------------------------
                                   4460 ; Function r_traversable_function
                                   4461 ; ---------------------------------
      00122C                       4462 _r_traversable_function:
                           00122C  4463 	C$player.c$605$1_0$351	= .
                                   4464 	.globl	C$player.c$605$1_0$351
                                   4465 ;src/player.c:605: return (bool)(epa != CENTER_UP || (joy & J_DOWN));
      00122C F8 02                 4466 	ldhl	sp,	#2
      00122E 7E                    4467 	ld	a, (hl)
      00122F D6 31                 4468 	sub	a, #0x31
      001231 20 0C                 4469 	jr	NZ, 00104$
      001233 FAr05r00              4470 	ld	a, (#_joy)
      001236 0F                    4471 	rrca
      001237 0F                    4472 	rrca
      001238 0F                    4473 	rrca
      001239 E6 01                 4474 	and	a,#0x01
      00123B 20 02                 4475 	jr	NZ, 00104$
      00123D 5F                    4476 	ld	e,a
      00123E C9                    4477 	ret
      00123F                       4478 00104$:
      00123F 1E 01                 4479 	ld	e, #0x01
                           001241  4480 	C$player.c$606$1_0$351	= .
                                   4481 	.globl	C$player.c$606$1_0$351
                                   4482 ;src/player.c:606: }
                           001241  4483 	C$player.c$606$1_0$351	= .
                                   4484 	.globl	C$player.c$606$1_0$351
                           001241  4485 	XFplayer$r_traversable_function$0$0	= .
                                   4486 	.globl	XFplayer$r_traversable_function$0$0
      001241 C9                    4487 	ret
                           001242  4488 	Fplayer$r_inactive_function$0$0	= .
                                   4489 	.globl	Fplayer$r_inactive_function$0$0
                           001242  4490 	C$player.c$607$1_0$353	= .
                                   4491 	.globl	C$player.c$607$1_0$353
                                   4492 ;src/player.c:607: static bool r_inactive_function(uint8_t epa){
                                   4493 ;	---------------------------------
                                   4494 ; Function r_inactive_function
                                   4495 ; ---------------------------------
      001242                       4496 _r_inactive_function:
                           001242  4497 	C$player.c$608$1_0$353	= .
                                   4498 	.globl	C$player.c$608$1_0$353
                                   4499 ;src/player.c:608: return true;
      001242 1E 01                 4500 	ld	e, #0x01
                           001244  4501 	C$player.c$609$1_0$353	= .
                                   4502 	.globl	C$player.c$609$1_0$353
                                   4503 ;src/player.c:609: }
                           001244  4504 	C$player.c$609$1_0$353	= .
                                   4505 	.globl	C$player.c$609$1_0$353
                           001244  4506 	XFplayer$r_inactive_function$0$0	= .
                                   4507 	.globl	XFplayer$r_inactive_function$0$0
      001244 C9                    4508 	ret
                           001245  4509 	Fplayer$r_bouncy_function$0$0	= .
                                   4510 	.globl	Fplayer$r_bouncy_function$0$0
                           001245  4511 	C$player.c$610$1_0$355	= .
                                   4512 	.globl	C$player.c$610$1_0$355
                                   4513 ;src/player.c:610: static bool r_bouncy_function(uint8_t epa){
                                   4514 ;	---------------------------------
                                   4515 ; Function r_bouncy_function
                                   4516 ; ---------------------------------
      001245                       4517 _r_bouncy_function:
                           001245  4518 	C$player.c$611$1_0$355	= .
                                   4519 	.globl	C$player.c$611$1_0$355
                                   4520 ;src/player.c:611: if(epa == CENTER_UP){
      001245 F8 02                 4521 	ldhl	sp,	#2
      001247 7E                    4522 	ld	a, (hl)
      001248 D6 31                 4523 	sub	a, #0x31
      00124A C2r00r13              4524 	jp	NZ,00109$
                                   4525 ;src/player.c:409: if(current_state == state) {return;}
                                   4526 ;src/player.c:410: if(current_state == PLAYER_STATE_FALLING){instanciate_collision_puffs();}
      00124D FAr10r00              4527 	ld	a,(#_current_state)
      001250 FE 02                 4528 	cp	a,#0x02
      001252 28 16                 4529 	jr	Z, 00114$
      001254 D6 03                 4530 	sub	a, #0x03
      001256 20 03                 4531 	jr	NZ, 00113$
      001258 CDr0Er07              4532 	call	_instanciate_collision_puffs
      00125B                       4533 00113$:
                                   4534 ;src/player.c:411: frame_counter = 0;
      00125B 21r01r00              4535 	ld	hl, #_frame_counter
      00125E 36 00                 4536 	ld	(hl), #0x00
                                   4537 ;src/player.c:412: current_frame = 0;
      001260 21r02r00              4538 	ld	hl, #_current_frame
      001263 36 00                 4539 	ld	(hl), #0x00
                                   4540 ;src/player.c:413: current_state = state;
      001265 21r10r00              4541 	ld	hl, #_current_state
      001268 36 02                 4542 	ld	(hl), #0x02
                                   4543 ;src/player.c:612: switch_state(PLAYER_STATE_JUMPING);
      00126A                       4544 00114$:
                           00126A  4545 	C$player.c$613$2_0$356	= .
                                   4546 	.globl	C$player.c$613$2_0$356
                                   4547 ;src/player.c:613: play_boing_sfx();
      00126A CDr00r00              4548 	call	_play_boing_sfx
                           00126D  4549 	C$player.c$614$2_0$356	= .
                                   4550 	.globl	C$player.c$614$2_0$356
                                   4551 ;src/player.c:614: y_speed = (int8_t)(-45);
      00126D 21r0Br00              4552 	ld	hl, #_y_speed
      001270 36 D3                 4553 	ld	(hl), #0xd3
                           001272  4554 	C$player.c$615$2_0$356	= .
                                   4555 	.globl	C$player.c$615$2_0$356
                                   4556 ;src/player.c:615: is_grounded = false;
      001272 21r09r00              4557 	ld	hl, #_is_grounded
      001275 36 00                 4558 	ld	(hl), #0x00
                           001277  4559 	C$player.c$616$2_0$356	= .
                                   4560 	.globl	C$player.c$616$2_0$356
                                   4561 ;src/player.c:616: is_jumping = true;
      001277 21r0Ar00              4562 	ld	hl, #_is_jumping
      00127A 36 01                 4563 	ld	(hl), #0x01
                           00127C  4564 	C$player.c$620$2_1$357	= .
                                   4565 	.globl	C$player.c$620$2_1$357
                                   4566 ;src/player.c:620: if(i & 0x01 == 0x01) {return true;}
      00127C E5                    4567 	push	hl
      00127D 21r04r00              4568 	ld	hl, #_i
      001280 CB 46                 4569 	bit	0, (hl)
      001282 E1                    4570 	pop	hl
      001283 28 03                 4571 	jr	Z, 00102$
      001285 1E 01                 4572 	ld	e, #0x01
      001287 C9                    4573 	ret
      001288                       4574 00102$:
                           001288  4575 	C$player.c$622$2_1$357	= .
                                   4576 	.globl	C$player.c$622$2_1$357
                                   4577 ;src/player.c:622: status_of_rack = map_components[PLAYER_FLOOR][i>>1].status & 0x0F;
      001288 FAr0Dr00              4578 	ld	a, (#_player_y)
      00128B 07                    4579 	rlca
      00128C 07                    4580 	rlca
      00128D E6 03                 4581 	and	a, #0x03
      00128F 6F                    4582 	ld	l, a
                                   4583 ;	spillPairReg hl
                                   4584 ;	spillPairReg hl
      001290 26 00                 4585 	ld	h, #0x00
                                   4586 ;	spillPairReg hl
                                   4587 ;	spillPairReg hl
      001292 29                    4588 	add	hl, hl
      001293 29                    4589 	add	hl, hl
      001294 29                    4590 	add	hl, hl
      001295 7D                    4591 	ld	a, l
      001296 C6r00                 4592 	add	a, #<(_map_components)
      001298 4F                    4593 	ld	c, a
      001299 7C                    4594 	ld	a, h
      00129A CEs00                 4595 	adc	a, #>(_map_components)
      00129C 47                    4596 	ld	b, a
      00129D FAr04r00              4597 	ld	a, (#_i)
      0012A0 CB 3F                 4598 	srl	a
      0012A2 87                    4599 	add	a, a
      0012A3 6F                    4600 	ld	l, a
      0012A4 26 00                 4601 	ld	h, #0x00
      0012A6 09                    4602 	add	hl, bc
      0012A7 23                    4603 	inc	hl
      0012A8 7E                    4604 	ld	a, (hl)
      0012A9 E6 0F                 4605 	and	a, #0x0f
                           0012AB  4606 	C$player.c$631$2_1$357	= .
                                   4607 	.globl	C$player.c$631$2_1$357
                                   4608 ;src/player.c:631: if(status_of_rack == 0x00){
      0012AB 4F                    4609 	ld	c, a
      0012AC B7                    4610 	or	a, a
      0012AD 20 03                 4611 	jr	NZ, 00104$
                           0012AF  4612 	C$player.c$632$3_1$359	= .
                                   4613 	.globl	C$player.c$632$3_1$359
                                   4614 ;src/player.c:632: return true;
      0012AF 1E 01                 4615 	ld	e, #0x01
      0012B1 C9                    4616 	ret
      0012B2                       4617 00104$:
                           0012B2  4618 	C$player.c$634$2_1$357	= .
                                   4619 	.globl	C$player.c$634$2_1$357
                                   4620 ;src/player.c:634: if((status_of_rack & 0b00001100) == 0b00001100){
      0012B2 79                    4621 	ld	a, c
      0012B3 E6 0C                 4622 	and	a, #0x0c
      0012B5 5F                    4623 	ld	e, a
      0012B6 16 00                 4624 	ld	d, #0x00
                           0012B8  4625 	C$player.c$637$1_0$355	= .
                                   4626 	.globl	C$player.c$637$1_0$355
                                   4627 ;src/player.c:637: make_cloth_fall(status_of_rack & 0x03);
      0012B8 79                    4628 	ld	a, c
      0012B9 E6 03                 4629 	and	a, #0x03
      0012BB 47                    4630 	ld	b, a
                           0012BC  4631 	C$player.c$634$2_1$357	= .
                                   4632 	.globl	C$player.c$634$2_1$357
                                   4633 ;src/player.c:634: if((status_of_rack & 0b00001100) == 0b00001100){
      0012BC 7B                    4634 	ld	a, e
      0012BD D6 0C                 4635 	sub	a, #0x0c
      0012BF B2                    4636 	or	a, d
      0012C0 20 14                 4637 	jr	NZ, 00106$
                           0012C2  4638 	C$player.c$637$3_1$360	= .
                                   4639 	.globl	C$player.c$637$3_1$360
                                   4640 ;src/player.c:637: make_cloth_fall(status_of_rack & 0x03);
      0012C2 C5                    4641 	push	bc
      0012C3 C5                    4642 	push	bc
      0012C4 33                    4643 	inc	sp
      0012C5 CDr03r13              4644 	call	_make_cloth_fall
      0012C8 33                    4645 	inc	sp
      0012C9 C1                    4646 	pop	bc
                           0012CA  4647 	C$player.c$639$3_1$360	= .
                                   4648 	.globl	C$player.c$639$3_1$360
                                   4649 ;src/player.c:639: make_cloth_fall((status_of_rack + 1) & 0x03);
      0012CA 79                    4650 	ld	a, c
      0012CB 3C                    4651 	inc	a
      0012CC E6 03                 4652 	and	a, #0x03
      0012CE F5                    4653 	push	af
      0012CF 33                    4654 	inc	sp
      0012D0 CDr03r13              4655 	call	_make_cloth_fall
      0012D3 33                    4656 	inc	sp
      0012D4 18 06                 4657 	jr	00107$
      0012D6                       4658 00106$:
                           0012D6  4659 	C$player.c$643$3_1$361	= .
                                   4660 	.globl	C$player.c$643$3_1$361
                                   4661 ;src/player.c:643: make_cloth_fall(status_of_rack & 0x03);
      0012D6 C5                    4662 	push	bc
      0012D7 33                    4663 	inc	sp
      0012D8 CDr03r13              4664 	call	_make_cloth_fall
      0012DB 33                    4665 	inc	sp
      0012DC                       4666 00107$:
                           0012DC  4667 	C$player.c$645$2_1$357	= .
                                   4668 	.globl	C$player.c$645$2_1$357
                                   4669 ;src/player.c:645: map_components[PLAYER_FLOOR][i>>1].status &= 0xF0;
      0012DC FAr0Dr00              4670 	ld	a, (#_player_y)
      0012DF 07                    4671 	rlca
      0012E0 07                    4672 	rlca
      0012E1 E6 03                 4673 	and	a, #0x03
      0012E3 6F                    4674 	ld	l, a
                                   4675 ;	spillPairReg hl
                                   4676 ;	spillPairReg hl
      0012E4 26 00                 4677 	ld	h, #0x00
                                   4678 ;	spillPairReg hl
                                   4679 ;	spillPairReg hl
      0012E6 29                    4680 	add	hl, hl
      0012E7 29                    4681 	add	hl, hl
      0012E8 29                    4682 	add	hl, hl
      0012E9 7D                    4683 	ld	a, l
      0012EA C6r00                 4684 	add	a, #<(_map_components)
      0012EC 4F                    4685 	ld	c, a
      0012ED 7C                    4686 	ld	a, h
      0012EE CEs00                 4687 	adc	a, #>(_map_components)
      0012F0 47                    4688 	ld	b, a
      0012F1 FAr04r00              4689 	ld	a, (#_i)
      0012F4 CB 3F                 4690 	srl	a
      0012F6 87                    4691 	add	a, a
      0012F7 6F                    4692 	ld	l, a
      0012F8 26 00                 4693 	ld	h, #0x00
      0012FA 09                    4694 	add	hl, bc
      0012FB 23                    4695 	inc	hl
      0012FC 7E                    4696 	ld	a, (hl)
      0012FD E6 F0                 4697 	and	a, #0xf0
      0012FF 77                    4698 	ld	(hl), a
      001300                       4699 00109$:
                           001300  4700 	C$player.c$647$1_0$355	= .
                                   4701 	.globl	C$player.c$647$1_0$355
                                   4702 ;src/player.c:647: return true;
      001300 1E 01                 4703 	ld	e, #0x01
                           001302  4704 	C$player.c$648$1_0$355	= .
                                   4705 	.globl	C$player.c$648$1_0$355
                                   4706 ;src/player.c:648: }
                           001302  4707 	C$player.c$648$1_0$355	= .
                                   4708 	.globl	C$player.c$648$1_0$355
                           001302  4709 	XFplayer$r_bouncy_function$0$0	= .
                                   4710 	.globl	XFplayer$r_bouncy_function$0$0
      001302 C9                    4711 	ret
                           001303  4712 	Fplayer$make_cloth_fall$0$0	= .
                                   4713 	.globl	Fplayer$make_cloth_fall$0$0
                           001303  4714 	C$player.c$650$1_0$368	= .
                                   4715 	.globl	C$player.c$650$1_0$368
                                   4716 ;src/player.c:650: static void make_cloth_fall(uint8_t sprite_in_OAM){
                                   4717 ;	---------------------------------
                                   4718 ; Function make_cloth_fall
                                   4719 ; ---------------------------------
      001303                       4720 _make_cloth_fall:
                           001303  4721 	C$player.c$651$1_0$368	= .
                                   4722 	.globl	C$player.c$651$1_0$368
                                   4723 ;src/player.c:651: clothes_speed |= (0b00000001 << ((sprite_in_OAM)<<1));
      001303 F8 02                 4724 	ldhl	sp,	#2
      001305 4E                    4725 	ld	c, (hl)
      001306 79                    4726 	ld	a, c
      001307 87                    4727 	add	a, a
      001308 47                    4728 	ld	b, a
      001309 3E 01                 4729 	ld	a, #0x01
      00130B 04                    4730 	inc	b
      00130C 18 01                 4731 	jr	00106$
      00130E                       4732 00105$:
      00130E 87                    4733 	add	a, a
      00130F                       4734 00106$:
      00130F 05                    4735 	dec	b
      001310 20 FC                 4736 	jr	NZ,00105$
      001312 21r00r00              4737 	ld	hl, #_clothes_speed
      001315 B6                    4738 	or	a, (hl)
      001316 77                    4739 	ld	(hl), a
                                   4740 ;src/player.c:652: set_sprite_tile(16 + sprite_in_OAM, get_sprite_tile(16 + sprite_in_OAM) + 2);
      001317 79                    4741 	ld	a, c
      001318 C6 10                 4742 	add	a, #0x10
      00131A 5F                    4743 	ld	e, a
                                   4744 ;C:/gbdk/include/gb/gb.h:1458: return shadow_OAM[nb].tile;
      00131B 6B                    4745 	ld	l, e
      00131C 01r00r00              4746 	ld	bc, #_shadow_OAM+0
                                   4747 ;	spillPairReg hl
                                   4748 ;	spillPairReg hl
      00131F 26 00                 4749 	ld	h, #0x00
                                   4750 ;	spillPairReg hl
                                   4751 ;	spillPairReg hl
      001321 29                    4752 	add	hl, hl
      001322 29                    4753 	add	hl, hl
      001323 09                    4754 	add	hl, bc
      001324 23                    4755 	inc	hl
      001325 23                    4756 	inc	hl
      001326 4E                    4757 	ld	c, (hl)
                                   4758 ;src/player.c:652: set_sprite_tile(16 + sprite_in_OAM, get_sprite_tile(16 + sprite_in_OAM) + 2);
      001327 0C                    4759 	inc	c
      001328 0C                    4760 	inc	c
                                   4761 ;C:/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      001329 6B                    4762 	ld	l, e
                                   4763 ;	spillPairReg hl
                                   4764 ;	spillPairReg hl
      00132A 26 00                 4765 	ld	h, #0x00
                                   4766 ;	spillPairReg hl
                                   4767 ;	spillPairReg hl
      00132C 29                    4768 	add	hl, hl
      00132D 29                    4769 	add	hl, hl
      00132E 11r00r00              4770 	ld	de, #_shadow_OAM
      001331 19                    4771 	add	hl, de
      001332 23                    4772 	inc	hl
      001333 23                    4773 	inc	hl
      001334 71                    4774 	ld	(hl), c
                           001335  4775 	C$player.c$652$3_0$368	= .
                                   4776 	.globl	C$player.c$652$3_0$368
                                   4777 ;src/player.c:652: set_sprite_tile(16 + sprite_in_OAM, get_sprite_tile(16 + sprite_in_OAM) + 2);
                           001335  4778 	C$player.c$653$3_0$368	= .
                                   4779 	.globl	C$player.c$653$3_0$368
                                   4780 ;src/player.c:653: }
                           001335  4781 	C$player.c$653$3_0$368	= .
                                   4782 	.globl	C$player.c$653$3_0$368
                           001335  4783 	XFplayer$make_cloth_fall$0$0	= .
                                   4784 	.globl	XFplayer$make_cloth_fall$0$0
      001335 C9                    4785 	ret
                           001336  4786 	Fplayer$r_shingled_function$0$0	= .
                                   4787 	.globl	Fplayer$r_shingled_function$0$0
                           001336  4788 	C$player.c$655$3_0$376	= .
                                   4789 	.globl	C$player.c$655$3_0$376
                                   4790 ;src/player.c:655: static bool r_shingled_function(uint8_t epa){
                                   4791 ;	---------------------------------
                                   4792 ; Function r_shingled_function
                                   4793 ; ---------------------------------
      001336                       4794 _r_shingled_function:
                           001336  4795 	C$player.c$656$1_0$376	= .
                                   4796 	.globl	C$player.c$656$1_0$376
                                   4797 ;src/player.c:656: if(epa == CENTER_UP){
      001336 F8 02                 4798 	ldhl	sp,	#2
      001338 7E                    4799 	ld	a, (hl)
      001339 D6 31                 4800 	sub	a, #0x31
      00133B 20 2D                 4801 	jr	NZ, 00102$
                                   4802 ;src/player.c:409: if(current_state == state) {return;}
      00133D FAr10r00              4803 	ld	a, (#_current_state)
      001340 D6 04                 4804 	sub	a, #0x04
      001342 28 19                 4805 	jr	Z, 00109$
                                   4806 ;src/player.c:410: if(current_state == PLAYER_STATE_FALLING){instanciate_collision_puffs();}
      001344 FAr10r00              4807 	ld	a, (#_current_state)
      001347 D6 03                 4808 	sub	a, #0x03
      001349 20 03                 4809 	jr	NZ, 00108$
      00134B CDr0Er07              4810 	call	_instanciate_collision_puffs
      00134E                       4811 00108$:
                                   4812 ;src/player.c:411: frame_counter = 0;
      00134E 21r01r00              4813 	ld	hl, #_frame_counter
      001351 36 00                 4814 	ld	(hl), #0x00
                                   4815 ;src/player.c:412: current_frame = 0;
      001353 21r02r00              4816 	ld	hl, #_current_frame
      001356 36 00                 4817 	ld	(hl), #0x00
                                   4818 ;src/player.c:413: current_state = state;
      001358 21r10r00              4819 	ld	hl, #_current_state
      00135B 36 04                 4820 	ld	(hl), #0x04
                                   4821 ;src/player.c:657: switch_state(PLAYER_STATE_HURT);
      00135D                       4822 00109$:
                           00135D  4823 	C$player.c$658$2_0$377	= .
                                   4824 	.globl	C$player.c$658$2_0$377
                                   4825 ;src/player.c:658: y_speed = 10;
      00135D 21r0Br00              4826 	ld	hl, #_y_speed
      001360 36 0A                 4827 	ld	(hl), #0x0a
                           001362  4828 	C$player.c$659$2_0$377	= .
                                   4829 	.globl	C$player.c$659$2_0$377
                                   4830 ;src/player.c:659: x_speed = 0;
      001362 21r07r00              4831 	ld	hl, #_x_speed
      001365 36 00                 4832 	ld	(hl), #0x00
                           001367  4833 	C$player.c$660$2_0$377	= .
                                   4834 	.globl	C$player.c$660$2_0$377
                                   4835 ;src/player.c:660: return true;
      001367 1E 01                 4836 	ld	e, #0x01
      001369 C9                    4837 	ret
      00136A                       4838 00102$:
                           00136A  4839 	C$player.c$662$1_0$376	= .
                                   4840 	.globl	C$player.c$662$1_0$376
                                   4841 ;src/player.c:662: if(epa == CENTER_DOWN){
      00136A F8 02                 4842 	ldhl	sp,	#2
      00136C 7E                    4843 	ld	a, (hl)
      00136D D6 32                 4844 	sub	a, #0x32
      00136F 20 03                 4845 	jr	NZ, 00104$
                           001371  4846 	C$player.c$663$2_0$378	= .
                                   4847 	.globl	C$player.c$663$2_0$378
                                   4848 ;src/player.c:663: play_bump_sfx();
      001371 CDr00r00              4849 	call	_play_bump_sfx
      001374                       4850 00104$:
                           001374  4851 	C$player.c$665$1_0$376	= .
                                   4852 	.globl	C$player.c$665$1_0$376
                                   4853 ;src/player.c:665: return false;
      001374 1E 00                 4854 	ld	e, #0x00
                           001376  4855 	C$player.c$666$1_0$376	= .
                                   4856 	.globl	C$player.c$666$1_0$376
                                   4857 ;src/player.c:666: }
                           001376  4858 	C$player.c$666$1_0$376	= .
                                   4859 	.globl	C$player.c$666$1_0$376
                           001376  4860 	XFplayer$r_shingled_function$0$0	= .
                                   4861 	.globl	XFplayer$r_shingled_function$0$0
      001376 C9                    4862 	ret
                           001377  4863 	Fplayer$r_spikey_function$0$0	= .
                                   4864 	.globl	Fplayer$r_spikey_function$0$0
                           001377  4865 	C$player.c$667$1_0$385	= .
                                   4866 	.globl	C$player.c$667$1_0$385
                                   4867 ;src/player.c:667: static bool r_spikey_function(uint8_t epa){
                                   4868 ;	---------------------------------
                                   4869 ; Function r_spikey_function
                                   4870 ; ---------------------------------
      001377                       4871 _r_spikey_function:
                           001377  4872 	C$player.c$668$1_0$385	= .
                                   4873 	.globl	C$player.c$668$1_0$385
                                   4874 ;src/player.c:668: if(epa == CENTER_UP){
      001377 F8 02                 4875 	ldhl	sp,	#2
      001379 7E                    4876 	ld	a, (hl)
      00137A D6 31                 4877 	sub	a, #0x31
      00137C 20 2A                 4878 	jr	NZ, 00102$
                                   4879 ;src/player.c:409: if(current_state == state) {return;}
                                   4880 ;src/player.c:410: if(current_state == PLAYER_STATE_FALLING){instanciate_collision_puffs();}
      00137E FAr10r00              4881 	ld	a,(#_current_state)
      001381 FE 04                 4882 	cp	a,#0x04
      001383 28 16                 4883 	jr	Z, 00109$
      001385 D6 03                 4884 	sub	a, #0x03
      001387 20 03                 4885 	jr	NZ, 00108$
      001389 CDr0Er07              4886 	call	_instanciate_collision_puffs
      00138C                       4887 00108$:
                                   4888 ;src/player.c:411: frame_counter = 0;
      00138C 21r01r00              4889 	ld	hl, #_frame_counter
      00138F 36 00                 4890 	ld	(hl), #0x00
                                   4891 ;src/player.c:412: current_frame = 0;
      001391 21r02r00              4892 	ld	hl, #_current_frame
      001394 36 00                 4893 	ld	(hl), #0x00
                                   4894 ;src/player.c:413: current_state = state;
      001396 21r10r00              4895 	ld	hl, #_current_state
      001399 36 04                 4896 	ld	(hl), #0x04
                                   4897 ;src/player.c:669: switch_state(PLAYER_STATE_HURT);
      00139B                       4898 00109$:
                           00139B  4899 	C$player.c$670$2_0$386	= .
                                   4900 	.globl	C$player.c$670$2_0$386
                                   4901 ;src/player.c:670: y_speed = (int8_t)(HURT_Y_SPEED);
      00139B 21r0Br00              4902 	ld	hl, #_y_speed
      00139E 36 F0                 4903 	ld	(hl), #0xf0
                           0013A0  4904 	C$player.c$671$2_0$386	= .
                                   4905 	.globl	C$player.c$671$2_0$386
                                   4906 ;src/player.c:671: x_speed = HURT_X_SPEED;
      0013A0 21r07r00              4907 	ld	hl, #_x_speed
      0013A3 36 08                 4908 	ld	(hl), #0x08
                           0013A5  4909 	C$player.c$672$2_0$386	= .
                                   4910 	.globl	C$player.c$672$2_0$386
                                   4911 ;src/player.c:672: return true;
      0013A5 1E 01                 4912 	ld	e, #0x01
      0013A7 C9                    4913 	ret
      0013A8                       4914 00102$:
                           0013A8  4915 	C$player.c$674$1_0$385	= .
                                   4916 	.globl	C$player.c$674$1_0$385
                                   4917 ;src/player.c:674: if(epa == CENTER_DOWN){
      0013A8 F8 02                 4918 	ldhl	sp,	#2
      0013AA 7E                    4919 	ld	a, (hl)
      0013AB D6 32                 4920 	sub	a, #0x32
      0013AD 20 03                 4921 	jr	NZ, 00104$
                           0013AF  4922 	C$player.c$675$2_0$387	= .
                                   4923 	.globl	C$player.c$675$2_0$387
                                   4924 ;src/player.c:675: play_bump_sfx();
      0013AF CDr00r00              4925 	call	_play_bump_sfx
      0013B2                       4926 00104$:
                           0013B2  4927 	C$player.c$677$1_0$385	= .
                                   4928 	.globl	C$player.c$677$1_0$385
                                   4929 ;src/player.c:677: return false;
      0013B2 1E 00                 4930 	ld	e, #0x00
                           0013B4  4931 	C$player.c$678$1_0$385	= .
                                   4932 	.globl	C$player.c$678$1_0$385
                                   4933 ;src/player.c:678: }
                           0013B4  4934 	C$player.c$678$1_0$385	= .
                                   4935 	.globl	C$player.c$678$1_0$385
                           0013B4  4936 	XFplayer$r_spikey_function$0$0	= .
                                   4937 	.globl	XFplayer$r_spikey_function$0$0
      0013B4 C9                    4938 	ret
                           0013B5  4939 	Fplayer$r_initf_function$0$0	= .
                                   4940 	.globl	Fplayer$r_initf_function$0$0
                           0013B5  4941 	C$player.c$679$1_0$394	= .
                                   4942 	.globl	C$player.c$679$1_0$394
                                   4943 ;src/player.c:679: static bool r_initf_function(uint8_t epa){
                                   4944 ;	---------------------------------
                                   4945 ; Function r_initf_function
                                   4946 ; ---------------------------------
      0013B5                       4947 _r_initf_function:
                           0013B5  4948 	C$player.c$680$1_0$394	= .
                                   4949 	.globl	C$player.c$680$1_0$394
                                   4950 ;src/player.c:680: game_started_flag = epa == CENTER_UP;
      0013B5 F8 02                 4951 	ldhl	sp,	#2
      0013B7 7E                    4952 	ld	a, (hl)
      0013B8 D6 31                 4953 	sub	a, #0x31
      0013BA 3E 01                 4954 	ld	a, #0x01
      0013BC 28 01                 4955 	jr	Z, 00117$
      0013BE AF                    4956 	xor	a, a
      0013BF                       4957 00117$:
      0013BF 4F                    4958 	ld	c, a
      0013C0 21r00r00              4959 	ld	hl, #_game_started_flag
      0013C3 71                    4960 	ld	(hl), c
                           0013C4  4961 	C$player.c$681$1_0$394	= .
                                   4962 	.globl	C$player.c$681$1_0$394
                                   4963 ;src/player.c:681: return (bool)(epa != CENTER_UP || (joy & J_DOWN));
      0013C4 CB 41                 4964 	bit	0, c
      0013C6 28 0C                 4965 	jr	Z, 00104$
      0013C8 FAr05r00              4966 	ld	a, (#_joy)
      0013CB 0F                    4967 	rrca
      0013CC 0F                    4968 	rrca
      0013CD 0F                    4969 	rrca
      0013CE E6 01                 4970 	and	a,#0x01
      0013D0 20 02                 4971 	jr	NZ, 00104$
      0013D2 5F                    4972 	ld	e,a
      0013D3 C9                    4973 	ret
      0013D4                       4974 00104$:
      0013D4 1E 01                 4975 	ld	e, #0x01
                           0013D6  4976 	C$player.c$682$1_0$394	= .
                                   4977 	.globl	C$player.c$682$1_0$394
                                   4978 ;src/player.c:682: }
                           0013D6  4979 	C$player.c$682$1_0$394	= .
                                   4980 	.globl	C$player.c$682$1_0$394
                           0013D6  4981 	XFplayer$r_initf_function$0$0	= .
                                   4982 	.globl	XFplayer$r_initf_function$0$0
      0013D6 C9                    4983 	ret
                                   4984 	.area _CODE
                                   4985 	.area _INITIALIZER
                           000000  4986 Fplayer$__xinit_puff_frame$0_0$0 == .
      000000                       4987 __xinit__puff_frame:
      000000 00                    4988 	.db #0x00	; 0
      000001 00                    4989 	.db #0x00	; 0
      000002 00                    4990 	.db #0x00	; 0
      000003 00                    4991 	.db #0x00	; 0
                           000004  4992 Fplayer$__xinit_rect_functions$0_0$0 == .
      000004                       4993 __xinit__rect_functions:
      000004rC5r0F                 4994 	.dw _r_solid_function
      000006r2Cr12                 4995 	.dw _r_traversable_function
      000008r42r12                 4996 	.dw _r_inactive_function
      00000Ar45r12                 4997 	.dw _r_bouncy_function
      00000Cr36r13                 4998 	.dw _r_shingled_function
      00000Er77r13                 4999 	.dw _r_spikey_function
      000010rB5r13                 5000 	.dw _r_initf_function
                                   5001 	.area _CABS (ABS)
